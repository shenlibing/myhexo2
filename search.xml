<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>面试题</title>
      <link href="/2019/08/06/mian-shi-ti/"/>
      <url>/2019/08/06/mian-shi-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="阿里巴巴面试"><a href="#阿里巴巴面试" class="headerlink" title="阿里巴巴面试"></a>阿里巴巴面试</h1><p>1、开发中Java用了比较多的数据结构有哪些?</p><p>2、谈谈你对HashMap的理解，底层原理的基本实现，HashMap怎么解决碰撞问题的?</p><p>这些数据结构中是线程安全的吗?假如你回答HashMap是线程安全的，接着问你有没有线程安全的map，接下来问了conurren包。</p><p>3、对JVM熟不熟悉?简单说说类加载过程，里面执行的哪些操作?问了GC和内存管理，平时在tomect里面有没有进行过相的配置</p><p>4、然后问了http协议，get和post的基本区别，接着tcp/ip协议，三次握手，窗口滑动机制。</p><p>5、开发中用了那些数据库?回答mysql，储存引擎有哪些?然后问了我悲观锁和乐观锁问题使用场景、分布式集群实现的原理。</p><p>6然后问了我springmvc和mybatis的工作原理，有没有看过底层源码?　</p><h1 id="京东金融面试"><a href="#京东金融面试" class="headerlink" title="京东金融面试"></a>京东金融面试</h1><p>1、Dubbo超时重试;Dubbo超时时间设置</p><p>2、如何保障请求执行顺序</p><p>3、分布式事物与分布式锁(扣款不要出现负数)</p><p>4、分布式session设置</p><p>5、执行某操作，前50次成功，第51次失败a全部回滚b前50次提交第51次抛异常，ab场景分别如何设置Spring(传播性)</p><p>6、Zookeeper有哪些用</p><p>7、JVM内存模型</p><p>8、数据库垂直和水平拆分</p><p>9、MyBatis如何分页;如何设置缓存;MySQL分页</p><p>10、熟悉IO么?与NIO的区别，阻塞与非阻塞的区别</p><p>11、分布式session一致性</p><p>12、分布式接口的幂等性设计「不能重复扣款」</p><h1 id="美团面试"><a href="#美团面试" class="headerlink" title="美团面试"></a>美团面试</h1><p>1、最近做的比较熟悉的项目是哪个?画一下项目技术架构图</p><p>2、JVM老年代和新生代的比例?</p><p>3、YGC和FGC发生的具体场景</p><p>4、jstack，jmap，jutil分别的意义?如何线上排查JVM的相关问题?</p><p>5、线程池的构造类的方法的5个参数的具体意义?</p><p>6、单机上一个线程池正在处理服务如果忽然断电该怎么办?(正在处理和阻塞队列里的请求怎么处理)?</p><p>7、使用无界阻塞队列会出现什么问题?</p><p>8、接口如何处理重复请求?</p><p>9、具体处理方案是什么?</p><p>10、如何保证共享变量修改时的原子性?</p><p>11、设计一个对外服务的接口实现类，在1,2,3这三个主机(对应不同IP)上实现负载均衡和顺序轮询机制(考虑并发)</p><h1 id="滴滴面试"><a href="#滴滴面试" class="headerlink" title="滴滴面试"></a>滴滴面试</h1><p>1、自我介绍，技术特点</p><p>2、兴趣是什么，优势是什么</p><p>3、jvm，jre以及jdk三者之间的关系?</p><p>4、Dubbo的底层原理，Zookeeper是什么</p><p>5、cincurrentMap的机制;TreeMap;Volatil关键字</p><p>6、快速排序;广度优先搜索(队列实现)</p><p>7、缓存的雪崩以及穿透的理解?</p><p>8、HashMap的key可以重复吗?</p><p>9、synchronized和lock的区别?</p><p>10.开发一个大型网站你会考虑哪些问题?</p><p>本次卧底面试得到的结论</p><p>通过面试题来看，可以看出目前互联网公司面试考点为：</p><p>1.性能调优、算法数据机构</p><p>2.高并发下数据安全、接口冪等性、原子性等</p><p>3.分布式下协同、已经锁的处理</p><p>4.数据库的分库分表、项目之间的垂直拆分</p><p>出现频率高的技术点有：</p><p>　　HashMap</p><p>　　JVM</p><p>　　Dubbo</p><p>　　Mybatis</p><p>　　Zookeeper</p><p>　　http tcp/ip</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux性能分析</title>
      <link href="/2019/08/05/linux-xing-neng-fen-xi/"/>
      <url>/2019/08/05/linux-xing-neng-fen-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="生产环境服务器变慢，诊断思路和性能评估"><a href="#生产环境服务器变慢，诊断思路和性能评估" class="headerlink" title="生产环境服务器变慢，诊断思路和性能评估"></a>生产环境服务器变慢，诊断思路和性能评估</h1><h2 id="整机：top"><a href="#整机：top" class="headerlink" title="整机：top"></a>整机：top</h2><p>代码</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JavaDemo2</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">77778888</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source//1564975934086.png" alt></p><p>top命令查看</p><pre><code>[root@192 ~]# toptop - 11:28:50 up 7 min,  2 users,  load average: 0.73, 0.39, 0.18Tasks: 230 total,   1 running, 229 sleeping,   0 stopped,   0 zombieCpu(s):  1.0%us,  2.3%sy,  0.0%ni, 96.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%stMem:   1906280k total,   649948k used,  1256332k free,    21164k buffersSwap:  2097148k total,        0k used,  2097148k free,   203820k cached   PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                3672 root      20   0 3158m  94m  11m S 15.6  5.1   0:13.67 java                                                                                   3397 root      20   0  100m 5388 3396 S  9.3  0.3   0:09.00 sshd                                                                                     39 root      20   0     0    0    0 S  1.7  0.0   0:00.25 events/4                                                                                 37 root      20   0     0    0    0 S  1.0  0.0   0:00.39 events/2                                                                                 35 root      20   0     0    0    0 S  0.3  0.0   0:01.27 events/0                                                                                 36 root      20   0     0    0    0 S  0.3  0.0   0:00.34 events/1                                                                                 41 root      20   0     0    0    0 S  0.3  0.0   0:00.24 events/6   [root@192 ~]# uptime11:29:09 up 7 min,  2 users,  load average: 0.52, 0.36, 0.18</code></pre><h2 id="CPU：vmstat"><a href="#CPU：vmstat" class="headerlink" title="CPU：vmstat"></a>CPU：vmstat</h2><pre><code>[root@192 ~]# vmstat -n 2  3procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu----- r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st 0  0      0 1313028  21228 203868    0    0    54     3  112 1620  0  1 98  0  0        0  0      0 1312732  21228 203896    0    0     0     0 2579 25940  1  3 96  0  0       0  0      0 1312856  21228 203896    0    0     0     0 2677 24290  1  3 97  0  0  </code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1564976316953.png" alt="1564976316953"></p><p>id:处于空闲的CPU百分比</p><p>wa:系统等待IO的CPU时间百分比</p><p>st:来自于一个虚拟机偷取的CPU时间百分比</p><p>查看额外的CPU信息</p><p>所有CPU核信息</p><pre><code>[root@192 ~]# mpstat -P  ALL 2Linux 2.6.32-642.el6.x86_64 (192.168.1.101)     08/05/2019      _x86_64_        (8 CPU)11:42:40 AM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest   %idle11:42:42 AM  all    1.07    0.00    2.89    0.00    0.00    0.00    0.00    0.00   96.0411:42:42 AM    0    0.00    0.00    1.52    0.00    0.00    0.00    0.00    0.00   98.4811:42:42 AM    1    6.09    0.00    9.14    0.00    0.00    0.00    0.00    0.00   84.7711:42:42 AM    2    0.50    0.00    4.02    0.00    0.00    0.00    0.00    0.00   95.4811:42:42 AM    3    1.00    0.00    2.00    0.00    0.00    0.00    0.00    0.00   97.00</code></pre><p>每个进程使用CPU的用量分解信息</p><pre><code>[root@192 ~]# pidstat -u 1 -p 3790Linux 2.6.32-642.el6.x86_64 (192.168.1.101)     08/05/2019      _x86_64_        (8 CPU)11:45:00 AM       PID    %usr %system  %guest    %CPU   CPU  Command11:45:01 AM      3790    6.00   10.00    0.00   16.00     7  java11:45:02 AM      3790    4.00   11.00    0.00   15.00     7  java11:45:03 AM      3790    9.00   15.00    0.00   24.00     7  java11:45:04 AM      3790    7.00   14.00    0.00   21.00     7  java</code></pre><h2 id="内存：free"><a href="#内存：free" class="headerlink" title="内存：free"></a>内存：free</h2><p>应用程序可用内存数</p><p>推荐使用<code>free -m</code></p><pre><code>[root@192 ~]# free -g             total       used       free     shared    buffers     cachedMem:             1          0          1          0          0          0-/+ buffers/cache:          0          1Swap:            1          0          1[root@192 ~]# free -m             total       used       free     shared    buffers     cachedMem:          1861        553       1308          1         20        199-/+ buffers/cache:        333       1528Swap:         2047          0       2047</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1564976920565.png" alt="1564976920565"></p><p>查看额外</p><pre><code>[root@192 ~]# pidstat -p 3823 -r 2Linux 2.6.32-642.el6.x86_64 (192.168.1.101)     08/05/2019      _x86_64_        (8 CPU)11:51:16 AM       PID  minflt/s  majflt/s     VSZ    RSS   %MEM  Command11:51:18 AM      3823      1.00      0.00 3234728  47068   2.47  java11:51:20 AM      3823      2.50      0.00 3234728  47068   2.47  java11:51:22 AM      3823      0.50      0.00 3234728  47068   2.47  java11:51:24 AM      3823      2.50      0.00 3234728  47068   2.47  java11:51:26 AM      3823      0.50      0.00 3234728  47068   2.47  java</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1564977136597.png" alt="1564977136597"></p><h2 id="硬盘：df"><a href="#硬盘：df" class="headerlink" title="硬盘：df"></a>硬盘：df</h2><p>查看磁盘剩余空间</p><pre><code>[root@192 ~]# df -hFilesystem      Size  Used Avail Use% Mounted on/dev/sda2        15G  5.6G  8.4G  41% /tmpfs           931M   72K  931M   1% /dev/shm/dev/sda1       190M   39M  142M  22% /boot</code></pre><h2 id="磁盘IO：iostat"><a href="#磁盘IO：iostat" class="headerlink" title="磁盘IO：iostat"></a>磁盘IO：iostat</h2><pre><code>[root@192 ~]# iostat -xdk 2 3Linux 2.6.32-642.el6.x86_64 (192.168.1.101)     08/05/2019      _x86_64_        (8 CPU)Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %utilscd0              0.00     0.00    0.38    0.00     1.50     0.00     8.00     0.00    0.67    0.67    0.00   0.67   0.03sda              34.33     4.94   47.36    3.18  1631.23    32.44    65.84     0.07    1.38    1.22    3.72   0.88   4.43Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %utilscd0              0.00     0.00    0.00    0.00     0.00     0.00     0.00     0.00    0.00    0.00    0.00   0.00   0.00sda               0.00     0.00    0.50    0.00     4.00     0.00    16.00     0.00    1.00    1.00    0.00   1.00   0.05Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %utilscd0              0.00     0.00    0.00    0.00     0.00     0.00     0.00     0.00    0.00    0.00    0.00   0.00   0.00sda               0.00     0.00    0.00    0.00     0.00     0.00     0.00     0.00    0.00    0.00    0.00   0.00   0.00</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1564985628042.png" alt="1564985628042"></p><p>查看额外</p><pre><code>[root@192 ~]# pidstat -d 2 -p 3485Linux 2.6.32-642.el6.x86_64 (192.168.1.101)     08/05/2019      _x86_64_        (8 CPU)02:16:10 PM       PID   kB_rd/s   kB_wr/s kB_ccwr/s  Command02:16:12 PM      3485      0.00      0.00      0.00  java02:16:14 PM      3485      0.00      0.00      0.00  java02:16:16 PM      3485      0.00      0.00      0.00  java02:16:18 PM      3485      0.00      0.00      0.00  java02:16:20 PM      3485      0.00      0.00      0.00  java02:16:22 PM      3485      0.00      0.00      0.00  java02:16:24 PM      3485      0.00      0.00      0.00  java</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1564985817582.png" alt="1564985817582"></p><h2 id="网络IO：ifstat"><a href="#网络IO：ifstat" class="headerlink" title="网络IO：ifstat"></a>网络IO：ifstat</h2><p>默认本地没有，需要下载ifstat</p><p>安装ifstat</p><pre><code>[root@192 ifstat-1.1]# yum install flex byacc  libpcap ncurses ncurses-devel libpcap-devel gcc-c++wget http://gael.roualland.free.fr/ifstat/ifstat-1.1.tar.gztar xzvf ifstat-1.1.tar.gzcd ifstat-1.1./configuremakemake install</code></pre><pre><code>[root@192 ifstat-1.1]# ifstat 1       eth0        KB/s in  KB/s out    0.06      0.13    0.06      0.12    0.06      0.12    0.06      0.12    0.06      0.12    0.06      0.12    0.12      0.17    0.06      0.12</code></pre><h1 id="生产环境出现CPU占用过高，分析思路和定位"><a href="#生产环境出现CPU占用过高，分析思路和定位" class="headerlink" title="生产环境出现CPU占用过高，分析思路和定位"></a>生产环境出现CPU占用过高，分析思路和定位</h1><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JavaDemo2</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">77778888</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="先用top命令找出CPU占比最高的"><a href="#先用top命令找出CPU占比最高的" class="headerlink" title="先用top命令找出CPU占比最高的"></a>先用top命令找出CPU占比最高的</h2><pre><code>  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                4294 root      20   0 3158m  37m  11m S 16.6  2.0   0:03.28 java                                                                                   3428 root      20   0  100m 5444 3396 S 14.3  0.3   0:22.85 sshd                                                                                     35 root      20   0     0    0    0 S  1.0  0.0   0:03.18 events/0                                                                                 41 root      20   0     0    0    0 S  0.3  0.0   0:00.52 events/6                                                                               2012 root      20   0  199m 5192 4288 S  0.3  0.3   0:00.32 ManagementAgent                                                                           1 root      20   0 19344 1544 1228 S  0.0  0.1   0:01.83 init                                                                                      2 root      20   0     0    0    0 S  0.0  0.0   0:00.02 kthreadd   </code></pre><h2 id="ps-ef或者jps进一步定位"><a href="#ps-ef或者jps进一步定位" class="headerlink" title="ps -ef或者jps进一步定位"></a>ps -ef或者jps进一步定位</h2><pre><code>[root@192 ifstat-1.1]# jps4320 Jps4294 JavaDemo2</code></pre><h2 id="定位到具体线程或者代码"><a href="#定位到具体线程或者代码" class="headerlink" title="定位到具体线程或者代码"></a>定位到具体线程或者代码</h2><pre><code>[root@192 ifstat-1.1]# ps -mp 4294 -o THREAD,tid,timeUSER     %CPU PRI SCNT WCHAN  USER SYSTEM    TID     TIMEroot     18.6   -    - -         -      -      - 00:00:15root      0.0  19    - futex_    -      -   4294 00:00:00root     15.6  19    - n_tty_    -      -   4295 00:00:13root      0.2  19    - futex_    -      -   4296 00:00:00root      0.2  19    - futex_    -      -   4297 00:00:00root      0.3  19    - futex_    -      -   4298 00:00:00root      0.2  19    - futex_    -      -   4299 00:00:00root      0.3  19    - futex_    -      -   4300 00:00:00root      0.3  19    - futex_    -      -   4301 00:00:00root      0.3  19    - futex_    -      -   4302 00:00:00root      0.2  19    - futex_    -      -   4303 00:00:00root      0.0  19    - futex_    -      -   4304 00:00:00root      0.0  19    - futex_    -      -   4305 00:00:00root      0.0  19    - futex_    -      -   4306 00:00:00root      0.0  19    - futex_    -      -   4307 00:00:00root      0.0  19    - futex_    -      -   4308 00:00:00root      0.1  19    - futex_    -      -   4309 00:00:00root      0.0  19    - futex_    -      -   4310 00:00:00root      0.0  19    - futex_    -      -   4311 00:00:00root      0.0  19    - futex_    -      -   4312 00:00:00root      0.0  19    - futex_    -      -   4313 00:00:00</code></pre><p>-m:显示所有的线程</p><p>-p: pid进程使用CPU的时间</p><p>-o:该参数后是用户自定义格式</p><h2 id="线程ID转换为16进制格式（英文小写格式）"><a href="#线程ID转换为16进制格式（英文小写格式）" class="headerlink" title="线程ID转换为16进制格式（英文小写格式）"></a>线程ID转换为16进制格式（英文小写格式）</h2><pre><code>[root@192 ifstat-1.1]# printf &quot;%x\n&quot; 429510c7</code></pre><h2 id="jstack-进程ID-grep-tid-16进制线程ID小写英文-A60"><a href="#jstack-进程ID-grep-tid-16进制线程ID小写英文-A60" class="headerlink" title="jstack 进程ID|grep tid(16进制线程ID小写英文) -A60"></a>jstack 进程ID|grep tid(16进制线程ID小写英文) -A60</h2><pre><code>[root@192 ifstat-1.1]# jstack 4294 | grep 10c7 -A60&quot;main&quot; #1 prio=5 os_prio=0 tid=0x00007f7f68009000 nid=0x10c7 runnable [0x00007f7f6f117000]   java.lang.Thread.State: RUNNABLE        at java.io.FileOutputStream.writeBytes(Native Method)        at java.io.FileOutputStream.write(FileOutputStream.java:326)        at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)        at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)        - locked &lt;0x00000000e2e0e6e0&gt; (a java.io.BufferedOutputStream)        at java.io.PrintStream.write(PrintStream.java:482)        - locked &lt;0x00000000e2e0bbd8&gt; (a java.io.PrintStream)        at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)        at sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:291)        at sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:104)        - locked &lt;0x00000000e2e0e800&gt; (a java.io.OutputStreamWriter)        at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:185)        at java.io.PrintStream.newLine(PrintStream.java:546)        - eliminated &lt;0x00000000e2e0bbd8&gt; (a java.io.PrintStream)        at java.io.PrintStream.println(PrintStream.java:737)        - locked &lt;0x00000000e2e0bbd8&gt; (a java.io.PrintStream)        at JavaDemo2.main(JavaDemo2.java:4)&quot;VM Thread&quot; os_prio=0 tid=0x00007f7f68080000 nid=0x10d0 runnable &quot;GC task thread#0 (ParallelGC)&quot; os_prio=0 tid=0x00007f7f6801e800 nid=0x10c8 runnable &quot;GC task thread#1 (ParallelGC)&quot; os_prio=0 tid=0x00007f7f68020000 nid=0x10c9 runnable &quot;GC task thread#2 (ParallelGC)&quot; os_prio=0 tid=0x00007f7f68022000 nid=0x10ca runnable &quot;GC task thread#3 (ParallelGC)&quot; os_prio=0 tid=0x00007f7f68024000 nid=0x10cb runnable &quot;GC task thread#4 (ParallelGC)&quot; os_prio=0 tid=0x00007f7f68025800 nid=0x10cc runnable &quot;GC task thread#5 (ParallelGC)&quot; os_prio=0 tid=0x00007f7f68027800 nid=0x10cd runnable &quot;GC task thread#6 (ParallelGC)&quot; os_prio=0 tid=0x00007f7f68029800 nid=0x10ce runnable &quot;GC task thread#7 (ParallelGC)&quot; os_prio=0 tid=0x00007f7f6802b000 nid=0x10cf runnable &quot;VM Periodic Task Thread&quot; os_prio=0 tid=0x00007f7f680e8000 nid=0x10d9 waiting on condition JNI global references: 5</code></pre><p>参考</p><p><a href="https://scau-fly.iteye.com/blog/1884606" target="_blank" rel="noopener">找到最耗CPU的java线程 - - ITeye博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单例模式</title>
      <link href="/2019/07/31/dan-li-mo-shi/"/>
      <url>/2019/07/31/dan-li-mo-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><h2 id="非单例"><a href="#非单例" class="headerlink" title="非单例"></a>非单例</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span>  SingletonDemo instance <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token function">SingletonDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t 我是构造方法SingletonDemo()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> SingletonDemo <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                SingletonDemo<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><p>非单例模式，构造方法被调用多次</p><pre><code>2     我是构造方法SingletonDemo()3     我是构造方法SingletonDemo()0     我是构造方法SingletonDemo()1     我是构造方法SingletonDemo()</code></pre><h2 id="单例"><a href="#单例" class="headerlink" title="单例"></a>单例</h2><p><code>volatile</code>特点：可见性、禁止指令重排、不能保证原子性</p><p><code>synchronized</code>特点：原子性、可见性、不能保证禁止指令重排</p><p>原子性：是指一个操作是不可中断的，要全部执行完成，要不就都不执行。线程是CPU调度的基本单位。CPU有时间片的概念，会根据不同的调度算法进行线程调度。当一个线程获得时间片之后开始执行，在时间片耗尽之后，就会失去CPU使用权。所以在多线程场景下，由于时间片在线程间轮换，就会发生原子性问题。</p><p>可见性：是指当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看得到修改的值。Java内存模型规定了所有的变量都存储在主内存中，每条线程还有自己的工作内存，线程的工作内存中保存了该线程中是用到的变量的主内存副本拷贝，线程对变量的所有操作都必须在工作内存中进行，而不能直接读写主内存。不同的线程之间也无法直接访问对方工作内存中的变量，线程间变量的传递均需要自己的工作内存和主存之间进行数据同步进行。所以，就可能出现线程1改了某个变量的值，但是线程2不可见的情况。</p><p>禁止指令重排：程序执行的顺序按照代码的先后顺序执行。除了引入了时间片以外，由于处理器优化和指令重排等，CPU还可能对输入代码进行乱序执行，比如load-&gt;add-&gt;save 有可能被优化成load-&gt;save-&gt;add 。这就是可能存在指令重排问题。</p><p>被<code>synchronized</code>修饰的代码在同一时间只能被一个线程访问，在锁未释放之前，无法被其他线程访问到。因此，在Java中可以使用<code>synchronized</code>来保证方法和代码块内的操作是原子性的。</p><p>被<code>synchronized</code>修饰的代码，在开始执行时会加锁，执行完成后会进行解锁。而为了保证可见性，有一条规则是这样的：对一个变量解锁之前，必须先把此变量同步回主存中。这样解锁后，后续线程就可以访问到被修改后的值。</p><p>被<code>synchronized</code>修饰的代码是无法禁止指令重排和处理器优化的。如果在本线程内观察，所有操作都是天然有序的。如果在一个线程中观察另一个线程，所有操作都是无序的。由于<code>synchronized</code>修饰的代码，同一时间只能被同一线程访问。那么也就是单线程执行的。所以，可以保证禁止指令重排，但是本身不具备禁止指令重排，有点绕口。</p><h3 id="版本一"><a href="#版本一" class="headerlink" title="版本一"></a>版本一</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonDemo</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//加上volatile,禁止指令重排</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> SingletonDemo instance <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token function">SingletonDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t 我是构造方法SingletonDemo()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> SingletonDemo <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                SingletonDemo<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><p>单例模式，构造方法只被调用一次</p><pre><code>0     我是构造方法SingletonDemo()</code></pre><h3 id="版本二"><a href="#版本二" class="headerlink" title="版本二"></a>版本二</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonDemo</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//加上volatile,禁止指令重排</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> SingletonDemo instance <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token function">SingletonDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t 我是构造方法SingletonDemo()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> SingletonDemo <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//双端检锁机制，加锁前后进行判断</span>            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>SingletonDemo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                SingletonDemo<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><p>单例模式下，构造方法只会被调用一次</p><pre><code>1     我是构造方法SingletonDemo()</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.hollischuang.com/archives/2637" target="_blank" rel="noopener">再有人问你synchronized是什么，就把这篇文章发给他。-HollisChuang’s Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单例模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java中的锁</title>
      <link href="/2019/07/30/java-zhong-de-suo/"/>
      <url>/2019/07/30/java-zhong-de-suo/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>在java单线程中，并不会出现资源抢夺的现象，但是在多线程并发中，会出现资源抢夺现象。为了避免这种情况需要上锁</p><h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><h2 id="可重入锁，又名递归锁"><a href="#可重入锁，又名递归锁" class="headerlink" title="可重入锁，又名递归锁"></a>可重入锁，又名递归锁</h2><p>指的是同一线程外层函数获得锁之后，内层递归函数仍然能获取该锁的代码，在同一个线程在外层方法获取锁的时候，在进入内层方法会自动获取锁，也即是说，线程可以进入任何一个它已经拥有的锁所同步着的代码块。</p><h3 id="使用synchronized"><a href="#使用synchronized" class="headerlink" title="使用synchronized"></a>使用<code>synchronized</code></h3><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Phone</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendSMS</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t invoked sendSMS()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t ###########invoked sendEmail()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReentrantLockDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Phone phone <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>            phone<span class="token punctuation">.</span><span class="token function">sendSMS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"t1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>            phone<span class="token punctuation">.</span><span class="token function">sendSMS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"t2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><pre><code>t1     invoked sendSMS()    //t1线程在外层方法获取锁的时候t1     ###########invoked sendEmail()     //t1在线程进入内层方法会自动获取锁t2     invoked sendSMS()t2     ###########invoked sendEmail()</code></pre><h3 id="使用ReentrantLock"><a href="#使用ReentrantLock" class="headerlink" title="使用ReentrantLock"></a>使用<code>ReentrantLock</code></h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span>Lock<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span>ReentrantLock<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Phone</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>    Lock lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendSMS</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t invoked sendSMS()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t ###########invoked sendEmail()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t invoked get()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t invoked set()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReentrantLockDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Phone phone <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            phone<span class="token punctuation">.</span><span class="token function">sendSMS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"t1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            phone<span class="token punctuation">.</span><span class="token function">sendSMS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"t2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//暂停一会线程</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            TimeUnit<span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Thread t3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>phone<span class="token punctuation">,</span><span class="token string">"t3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Thread t4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>phone<span class="token punctuation">,</span><span class="token string">"t4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t3<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t4<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><pre><code>t1     invoked sendSMS()t1     ###########invoked sendEmail()t2     invoked sendSMS()t2     ###########invoked sendEmail()t3     invoked get()t3     invoked set()t4     invoked get()t4     invoked set()</code></pre><h2 id="自旋锁"><a href="#自旋锁" class="headerlink" title="自旋锁"></a>自旋锁</h2><p>CAS循环比较并交换</p><p>是指尝试获取锁的线程不会立即阻塞，而是采用循环的方式去尝试获取锁，这样的好处是减少线程上下文切换的消耗，缺点是循环会消耗CPU</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span>AtomicReference<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpinLockDemo</span> <span class="token punctuation">{</span>    AtomicReference<span class="token operator">&lt;</span>Thread<span class="token operator">></span> atomicReference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Thread thread <span class="token operator">=</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t come in..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> thread<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myUnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Thread thread <span class="token operator">=</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>thread<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t invoked myUnLock()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpinLockDemo spinLockDemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpinLockDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            spinLockDemo<span class="token punctuation">.</span><span class="token function">myLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//暂停一会线程</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            spinLockDemo<span class="token punctuation">.</span><span class="token function">myUnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"AA"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//暂停一会线程</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            spinLockDemo<span class="token punctuation">.</span><span class="token function">myLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            spinLockDemo<span class="token punctuation">.</span><span class="token function">myUnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"BB"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><pre><code>AA     come in...BB     come in...AA     invoked myUnLock()BB     invoked myUnLock()</code></pre><h2 id="读写锁"><a href="#读写锁" class="headerlink" title="读写锁"></a>读写锁</h2><p>读时共享资源数据，写时独占资源数据</p><p>多个线程同时读一个资源类没有任何问题，所以为了满足并发量，读取共享资源应该可以同时进行，但是如果有一个线程想去写共享资源，就不应该再有其它线程可以对该资源进行读或写。</p><p>读-读能共存</p><p>读-写不能共存</p><p>写-写不能共存</p><h3 id="没有使用读写锁前"><a href="#没有使用读写锁前" class="headerlink" title="没有使用读写锁前"></a>没有使用读写锁前</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyCache</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">volatile</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span> String value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t 正在写入："</span><span class="token operator">+</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//暂停一会线程</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            TimeUnit<span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t 写入完成："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">get</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t 正在读取："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//暂停一会线程</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            TimeUnit<span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Object result <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t 读取完成："</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadWriteDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        MyCache myCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建5个线程,写入资源数据</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">final</span>  <span class="token keyword">int</span> tempInt <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>                myCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>tempInt<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">,</span>tempInt<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//创建5个线程,读取资源数据</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">final</span>  <span class="token keyword">int</span> tempInt <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>                myCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tempInt<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><p>写时并不满足原子性和独占性，整个过程必须是一个完整的统一体，中间不允许被分割，被打断</p><pre><code>5     正在写入：51     正在写入：13     正在写入：32     正在读取：4     正在写入：42     正在写入：21     正在读取：5     正在读取：3     正在读取：4     正在读取：2     写入完成：5     读取完成：55     写入完成：4     读取完成：null2     读取完成：null3     写入完成：1     读取完成：null1     写入完成：3     读取完成：34     写入完成：</code></pre><h3 id="使用读写锁后"><a href="#使用读写锁后" class="headerlink" title="使用读写锁后"></a>使用读写锁后</h3><p>使用<code>ReentrantReadWriteLock</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span>ReentrantReadWriteLock<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyCache</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">volatile</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//读写锁</span>    <span class="token keyword">private</span> ReentrantReadWriteLock rwlock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span> String value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        rwlock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t 正在写入："</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//暂停一会线程</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                TimeUnit<span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t 写入完成："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            rwlock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">get</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span> <span class="token punctuation">{</span>        rwlock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t 正在读取："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//暂停一会线程</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                TimeUnit<span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            Object result <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\t 读取完成："</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            rwlock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadWriteDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        MyCache myCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建5个线程,写入资源数据</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">final</span> <span class="token keyword">int</span> tempInt <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                myCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>tempInt <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">,</span> tempInt <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//创建5个线程,读取资源数据</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">final</span> <span class="token keyword">int</span> tempInt <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>                myCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tempInt <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><pre><code>4     正在写入：44     写入完成：2     正在写入：22     写入完成：1     正在写入：11     写入完成：3     正在写入：33     写入完成：5     正在写入：55     写入完成：1     正在读取：4     正在读取：2     正在读取：3     正在读取：5     正在读取：3     读取完成：31     读取完成：15     读取完成：52     读取完成：24     读取完成：4</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://903497571.iteye.com/blog/1874752" target="_blank" rel="noopener">一道面试题比较synchronized和读写锁 - where - ITeye博客</a></p>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elastic</title>
      <link href="/2019/07/08/elastic/"/>
      <url>/2019/07/08/elastic/</url>
      
        <content type="html"><![CDATA[<h1 id="安装elastic"><a href="#安装elastic" class="headerlink" title="安装elastic"></a>安装elastic</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-3-1" target="_blank" rel="noopener">Elasticsearch 6.3.1 | Elastic</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562550013183.png" alt="1562550013183"></p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><pre><code>[root@192 modules]# tar -zxvf elasticsearch-6.3.1.tar.gz</code></pre><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><h3 id="报错一"><a href="#报错一" class="headerlink" title="报错一"></a>报错一</h3><p><code>elasticsearch</code> 为了安全性默认不允许<code>root</code> 用户来启动</p><pre><code>[root@192 elasticsearch-6.3.1]# cd bin/[root@192 bin]# ./elasticsearch[2019-07-08T08:45:49,312][WARN ][o.e.b.ElasticsearchUncaughtExceptionHandler] [] uncaught exception in thread [main]org.elasticsearch.bootstrap.StartupException: java.lang.RuntimeException: can not run elasticsearch as root    at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:140) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:127) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) ~[elasticsearch-cli-6.3.1.jar:6.3.1]    at org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:93) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:86) ~[elasticsearch-6.3.1.jar:6.3.1]Caused by: java.lang.RuntimeException: can not run elasticsearch as root    at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:104) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:171) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:326) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:136) ~[elasticsearch-6.3.1.jar:6.3.1]    ... 6 more</code></pre><p>新建立<code>es</code>用户</p><pre><code>[root@192 bin]# useradd es[root@192 bin]# pwd/opt/modules/elasticsearch-6.3.1/bin[root@192 bin]# cd[root@192 ~]# pwd/root[root@192 ~]# cd /opt/modules/elasticsearch-6.3.1[root@192 elasticsearch-6.3.1]# lltotal 460drwxr-xr-x.  3 root root   4096 Jul  8 08:43 bindrwxr-xr-x.  2 root root   4096 Jul  8 08:45 configdrwxr-xr-x.  2 root root   4096 Jun 30  2018 lib-rw-r--r--.  1 root root  13675 Jun 30  2018 LICENSE.txtdrwxr-xr-x.  2 root root   4096 Jul  8 08:45 logsdrwxr-xr-x. 17 root root   4096 Jun 30  2018 modules-rw-r--r--.  1 root root 416018 Jun 30  2018 NOTICE.txtdrwxr-xr-x.  2 root root   4096 Jun 30  2018 plugins-rw-r--r--.  1 root root   8511 Jun 30  2018 README.textile</code></pre><h3 id="报错二"><a href="#报错二" class="headerlink" title="报错二"></a>报错二</h3><p>授权、启动</p><pre><code>[root@192 elasticsearch-6.3.1]# chown -R es:es ./[root@192 elasticsearch-6.3.1]# lltotal 460drwxr-xr-x.  3 es es   4096 Jul  8 08:43 bindrwxr-xr-x.  2 es es   4096 Jul  8 08:45 configdrwxr-xr-x.  2 es es   4096 Jun 30  2018 lib-rw-r--r--.  1 es es  13675 Jun 30  2018 LICENSE.txtdrwxr-xr-x.  2 es es   4096 Jul  8 08:45 logsdrwxr-xr-x. 17 es es   4096 Jun 30  2018 modules-rw-r--r--.  1 es es 416018 Jun 30  2018 NOTICE.txtdrwxr-xr-x.  2 es es   4096 Jun 30  2018 plugins-rw-r--r--.  1 es es   8511 Jun 30  2018 README.textile[root@192 elasticsearch-6.3.1]# su es[es@192 elasticsearch-6.3.1]$ ./bin/elasticsearch[2019-07-08T08:48:42,989][WARN ][o.e.b.JNANatives         ] unable to install syscall filter: java.lang.UnsupportedOperationException: seccomp unavailable: CONFIG_SECCOMP not compiled into kernel, CONFIG_SECCOMP and CONFIG_SECCOMP_FILTER are needed    at org.elasticsearch.bootstrap.SystemCallFilter.linuxImpl(SystemCallFilter.java:341) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.SystemCallFilter.init(SystemCallFilter.java:616) ~[elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.JNANatives.tryInstallSystemCallFilter(JNANatives.java:258) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Natives.tryInstallSystemCallFilter(Natives.java:113) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:109) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:171) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:326) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:136) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:127) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) [elasticsearch-cli-6.3.1.jar:6.3.1]    at org.elasticsearch.cli.Command.main(Command.java:90) [elasticsearch-cli-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:93) [elasticsearch-6.3.1.jar:6.3.1]    at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:86) [elasticsearch-6.3.1.jar:6.3.1]</code></pre><p>解决</p><p>进入<code>/opt/modules/elasticsearch-6.3.1/config</code>目录，修改配置文件 <code>elasticsearch.yml</code>，末尾追加</p><pre><code>bootstrap.memory_lock: falsebootstrap.system_call_filter: false</code></pre><h3 id="报错三"><a href="#报错三" class="headerlink" title="报错三"></a>报错三</h3><p>用户最大文件描述符限制低于 65536 而抛出的异常</p><p>用户最大的线程数限制低于 4096 而抛出的异常</p><p>系统最大虚拟内存低于 262144 而抛出的异常</p><pre><code>[es@192 elasticsearch-6.3.1]$ ./bin/elasticsearch[2019-07-08T08:56:38,934][INFO ][o.e.n.Node               ] [] initializing ...[2019-07-08T08:56:39,016][INFO ][o.e.e.NodeEnvironment    ] [zzp49gD] using [1] data paths, mounts [[/ (rootfs)]], net usable_space [9.2gb], net total_space [14.6gb], types [rootfs][2019-07-08T08:56:39,016][INFO ][o.e.e.NodeEnvironment    ] [zzp49gD] heap size [989.8mb], compressed ordinary object pointers [true][2019-07-08T08:56:39,017][INFO ][o.e.n.Node               ] [zzp49gD] node name derived from node ID [zzp49gDDT1yAkU_sqvvLdw]; set [node.name] to override[2019-07-08T08:56:39,018][INFO ][o.e.n.Node               ] [zzp49gD] version[6.3.1], pid[3815], build[default/tar/eb782d0/2018-06-29T21:59:26.107521Z], OS[Linux/2.6.32-642.el6.x86_64/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_202/25.202-b08][2019-07-08T08:56:39,018][INFO ][o.e.n.Node               ] [zzp49gD] JVM arguments [-Xms1g, -Xmx1g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.io.tmpdir=/tmp/elasticsearch.KQ6g6BOC, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath=data, -XX:ErrorFile=logs/hs_err_pid%p.log, -XX:+PrintGCDetails, -XX:+PrintGCDateStamps, -XX:+PrintTenuringDistribution, -XX:+PrintGCApplicationStoppedTime, -Xloggc:logs/gc.log, -XX:+UseGCLogFileRotation, -XX:NumberOfGCLogFiles=32, -XX:GCLogFileSize=64m, -Des.path.home=/opt/modules/elasticsearch-6.3.1, -Des.path.conf=/opt/modules/elasticsearch-6.3.1/config, -Des.distribution.flavor=default, -Des.distribution.type=tar][2019-07-08T08:56:40,833][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [aggs-matrix-stats][2019-07-08T08:56:40,834][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [analysis-common][2019-07-08T08:56:40,834][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [ingest-common][2019-07-08T08:56:40,834][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [lang-expression][2019-07-08T08:56:40,834][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [lang-mustache][2019-07-08T08:56:40,834][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [lang-painless][2019-07-08T08:56:40,834][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [mapper-extras][2019-07-08T08:56:40,834][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [parent-join][2019-07-08T08:56:40,834][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [percolator][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [rank-eval][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [reindex][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [repository-url][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [transport-netty4][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [tribe][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-core][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-deprecation][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-graph][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-logstash][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-ml][2019-07-08T08:56:40,835][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-monitoring][2019-07-08T08:56:40,836][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-rollup][2019-07-08T08:56:40,836][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-security][2019-07-08T08:56:40,836][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-sql][2019-07-08T08:56:40,836][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-upgrade][2019-07-08T08:56:40,836][INFO ][o.e.p.PluginsService     ] [zzp49gD] loaded module [x-pack-watcher][2019-07-08T08:56:40,836][INFO ][o.e.p.PluginsService     ] [zzp49gD] no plugins loaded[2019-07-08T08:56:43,471][INFO ][o.e.x.s.a.s.FileRolesStore] [zzp49gD] parsed [0] roles from file [/opt/modules/elasticsearch-6.3.1/config/roles.yml][2019-07-08T08:56:43,817][INFO ][o.e.x.m.j.p.l.CppLogMessageHandler] [controller/3894] [Main.cc@109] controller (64 bit): Version 6.3.1 (Build 4d0b8f0a0ef401) Copyright (c) 2018 Elasticsearch BV[2019-07-08T08:56:44,114][DEBUG][o.e.a.ActionModule       ] Using REST wrapper from plugin org.elasticsearch.xpack.security.Security[2019-07-08T08:56:44,331][INFO ][o.e.d.DiscoveryModule    ] [zzp49gD] using discovery type [zen][2019-07-08T08:56:45,016][INFO ][o.e.n.Node               ] [zzp49gD] initialized[2019-07-08T08:56:45,016][INFO ][o.e.n.Node               ] [zzp49gD] starting ...[2019-07-08T08:56:45,173][INFO ][o.e.t.TransportService   ] [zzp49gD] publish_address {192.168.1.101:9300}, bound_addresses {192.168.1.101:9300}[2019-07-08T08:56:45,196][INFO ][o.e.b.BootstrapChecks    ] [zzp49gD] bound or publishing to a non-loopback address, enforcing bootstrap checksERROR: [3] bootstrap checks failed[1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536][2]: max number of threads [1024] for user [es] is too low, increase to at least [4096][3]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144][2019-07-08T08:56:45,223][INFO ][o.e.n.Node               ] [zzp49gD] stopping ...[2019-07-08T08:56:45,295][INFO ][o.e.n.Node               ] [zzp49gD] stopped[2019-07-08T08:56:45,295][INFO ][o.e.n.Node               ] [zzp49gD] closing ...[2019-07-08T08:56:45,307][INFO ][o.e.n.Node               ] [zzp49gD] closed[2019-07-08T08:56:45,313][INFO ][o.e.x.m.j.p.NativeController] Native controller process has stopped - no new native processes can be started</code></pre><p>解决户最大文件描述符限制低于 65536 而抛出的异常</p><p>切换到<code>root</code>用户,进入<code>/etc/security/</code>目录，修改<code>limits.conf</code>文件，末尾追加</p><pre><code>* hard nofile 65536* soft nofile 131072* hard nproc  4096* soft nproc  2048</code></pre><p>解决用户最大的线程数限制低于 4096 而抛出的异常</p><p>切换到<code>root</code>用户,进入<code>/etc/security/limits.d</code>目录，修改<code>90-nproc.conf</code>文件</p><pre><code>*          soft    nproc     4096root       soft    nproc     unlimited</code></pre><p>解决系统最大虚拟内存低于 262144 而抛出的异常</p><p>修改<code>/etc/sysctl.conf</code>文件，末尾追加</p><pre><code>vm.max_map_count=655360fs.file-max=655360</code></pre><h3 id="配置访问地址"><a href="#配置访问地址" class="headerlink" title="配置访问地址"></a>配置访问地址</h3><p>进入<code>/opt/modules/elasticsearch-6.3.1/config</code>目录，修改<code>elasticsearch.yml</code>文件</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562553937145.png" alt="1562553937145"></p><p>访问</p><pre><code>[es@192 elasticsearch-6.3.1]$ curl http://192.168.1.101:9200{  &quot;name&quot; : &quot;zzp49gD&quot;,  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,  &quot;cluster_uuid&quot; : &quot;i0I9Oc2gQxOkc-jk4ZvEvw&quot;,  &quot;version&quot; : {    &quot;number&quot; : &quot;6.3.1&quot;,    &quot;build_flavor&quot; : &quot;default&quot;,    &quot;build_type&quot; : &quot;tar&quot;,    &quot;build_hash&quot; : &quot;eb782d0&quot;,    &quot;build_date&quot; : &quot;2018-06-29T21:59:26.107521Z&quot;,    &quot;build_snapshot&quot; : false,    &quot;lucene_version&quot; : &quot;7.3.1&quot;,    &quot;minimum_wire_compatibility_version&quot; : &quot;5.6.0&quot;,    &quot;minimum_index_compatibility_version&quot; : &quot;5.0.0&quot;  },  &quot;tagline&quot; : &quot;You Know, for Search&quot;}[es@192 elasticsearch-6.3.1]$ </code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562554028561.png" alt="1562554028561"></p><h1 id="安装kibana"><a href="#安装kibana" class="headerlink" title="安装kibana"></a>安装kibana</h1><h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p><a href="https://www.elastic.co/cn/downloads/past-releases/kibana-6-3-1" target="_blank" rel="noopener">Kibana 6.3.1 | Elastic</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562549955406.png" alt="1562549955406"></p><h2 id="解压-1"><a href="#解压-1" class="headerlink" title="解压"></a>解压</h2><pre><code>[root@192 bin]# tar -zxvf kibana-6.3.1-linux-x86_64.tar.gz </code></pre><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>进入</p><pre><code>[root@192 bin]# cd kibana-6.3.1-linux-x86_64/config/</code></pre><p>修改<code>kibana.yml</code>配置文件</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562633630892.png" alt="1562633630892"></p><h2 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h2><pre><code>[root@192 bin]# pwd/opt/modules/kibana-6.3.1-linux-x86_64/bin[root@192 bin]# nohup ./kibana &amp;[1] 3665[root@192 bin]# nohup: ignoring input and appending output to `nohup.out&#39;[root@192 bin]# ps -ef | grep noderoot       3665   3615 51 08:45 pts/0    00:00:25 ./../node/bin/node --no-warnings ./../src/cliroot       3685   3615  0 08:46 pts/0    00:00:00 grep node</code></pre><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562633817600.png" alt="1562633817600"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562633912937.png" alt="1562633912937"></p><h2 id="操作es增删改查"><a href="#操作es增删改查" class="headerlink" title="操作es增删改查"></a>操作es增删改查</h2><p><a href="https://wiki.shileizcc.com/confluence/pages/viewpage.action?pageId=7897093" target="_blank" rel="noopener">ES 简单操作 - ELK - Wiki.Shileizcc.com</a></p><p>增</p><pre class=" language-json"><code class="language-json">PUT /movie_index/movie/<span class="token number">1</span><span class="token punctuation">{</span>  <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"operation red sea"</span><span class="token punctuation">,</span>  <span class="token property">"doubanscore"</span><span class="token operator">:</span><span class="token number">8.5</span><span class="token punctuation">,</span>  <span class="token property">"actorList"</span><span class="token operator">:</span><span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"zhang yi"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"hai qing"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"id"</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"zhang han yu"</span>    <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>删</p><pre><code>DELETE /movie_index/movie/1</code></pre><p>改</p><p>和新增一样，<code>PUT</code>既可以新增，也可以修改</p><pre><code>PUT /movie_index/movie/1{  &quot;id&quot;:2,  &quot;name&quot;:&quot;operation red sea&quot;,  &quot;doubanscore&quot;:8.5,  &quot;actorList&quot;:[    {      &quot;id&quot;:1,&quot;name&quot;:&quot;zhang yi&quot;    },    {      &quot;id&quot;:2,&quot;name&quot;:&quot;hai qing&quot;    },    {      &quot;id&quot;:3,&quot;name&quot;:&quot;zhang han yu&quot;    }    ]}</code></pre><p>查</p><pre><code>GET /movie_index/_search</code></pre><h1 id="安装分词器analysis-ik"><a href="#安装分词器analysis-ik" class="headerlink" title="安装分词器analysis-ik"></a>安装分词器analysis-ik</h1><h2 id="下载-2"><a href="#下载-2" class="headerlink" title="下载"></a>下载</h2><p><a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v6.3.1" target="_blank" rel="noopener">Release v6.3.1 · medcl/elasticsearch-analysis-ik</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562719837250.png" alt="1562719837250"></p><h2 id="解压、上传"><a href="#解压、上传" class="headerlink" title="解压、上传"></a>解压、上传</h2><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562719919748.png" alt="1562719919748"></p><pre><code>[root@192 ~]# cd /opt/modules/elasticsearch-6.3.1/plugins/[root@192 plugins]# lltotal 4drwxr-xr-x. 3 root root 4096 Jul 10 08:51 elasticsearch-analysis-ik-6.3.1[root@192 plugins]# </code></pre><h2 id="重启es"><a href="#重启es" class="headerlink" title="重启es"></a>重启es</h2><pre><code>[root@192 bin]# su es[es@192 bin]$ nohup ./elasticsearch &amp;[1] 4002[es@192 bin]$ nohup: ignoring input and appending output to `nohup.out&#39;[es@192 bin]$ ps -ef|grep elastices         4002   3987 99 08:45 pts/0    00:00:25 /usr/java/jdk1.8.0_202-amd64/bin/java -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch.iMX34Qx6 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/opt/modules/elasticsearch-6.3.1 -Des.path.conf=/opt/modules/elasticsearch-6.3.1/config -Des.distribution.flavor=default -Des.distribution.type=tar -cp /opt/modules/elasticsearch-6.3.1/lib/* org.elasticsearch.bootstrap.Elasticsearches         4081   4002  0 08:45 pts/0    00:00:00 /opt/modules/elasticsearch-6.3.1/modules/x-pack/x-pack-ml/platform/linux-x86_64/bin/controlleres         4092   3987  0 08:45 pts/0    00:00:00 grep elastic[es@192 bin]$ kill -9 4002[es@192 bin]$ ps -ef|grep elastices         4235   3987  0 08:54 pts/0    00:00:00 grep elastic[2]+  Killed                  nohup ./kibana[es@192 bin]$ cd /opt/modules/elasticsearch-6.3.1/bin/[es@192 bin]$ nohup ./elasticsearch &amp;[1] 4238[es@192 bin]$ nohup: ignoring input and appending output to `nohup.out&#39;[es@192 bin]$ ps -ef|grep elastices         4238   3987 99 08:54 pts/0    00:00:15 /usr/java/jdk1.8.0_202-amd64/bin/java -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch.zw6LMXqV -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/opt/modules/elasticsearch-6.3.1 -Des.path.conf=/opt/modules/elasticsearch-6.3.1/config -Des.distribution.flavor=default -Des.distribution.type=tar -cp /opt/modules/elasticsearch-6.3.1/lib/* org.elasticsearch.bootstrap.Elasticsearches         4317   4238  0 08:54 pts/0    00:00:00 /opt/modules/elasticsearch-6.3.1/modules/x-pack/x-pack-ml/platform/linux-x86_64/bin/controlleres         4325   3987  0 08:54 pts/0    00:00:00 grep elastic[es@192 bin]$ cd /opt/modules/kibana-6.3.1-linux-x86_64/bin/[es@192 bin]$ nohup  ./kibana &amp;[2] 4384[es@192 bin]$ nohup: ignoring input and appending output to `nohup.out&#39;[es@192 bin]$ ps -ef|grep nodees         4384   3987 77 08:55 pts/0    00:00:06 ./../node/bin/node --no-warnings ./../src/clies         4396   3987  0 08:55 pts/0    00:00:00 grep node</code></pre><h2 id="重启kibana"><a href="#重启kibana" class="headerlink" title="重启kibana"></a>重启kibana</h2><pre><code>[es@192 bin]$ cd /opt/modules/kibana-6.3.1-linux-x86_64/bin/[es@192 bin]$ nohup ./kibana &amp;[2] 4155[es@192 bin]$ nohup: ignoring input and appending output to `nohup.out&#39;[es@192 bin]$ ps -ef|grep nodees         4155   3987 56 08:46 pts/0    00:00:04 ./../node/bin/node --no-warnings ./../src/clies         4167   3987  0 08:46 pts/0    00:00:00 grep node[es@192 bin]$ kill -9 4155[es@192 bin]$ ps -ef|grep nodees         4237   3987  0 08:54 pts/0    00:00:00 grep node</code></pre><h2 id="访问es"><a href="#访问es" class="headerlink" title="访问es"></a>访问es</h2><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562720371754.png" alt="1562720371754"></p><h2 id="访问kibana"><a href="#访问kibana" class="headerlink" title="访问kibana"></a>访问kibana</h2><h3 id="入分词器前"><a href="#入分词器前" class="headerlink" title="入分词器前"></a>入分词器前</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562720423800.png" alt="1562720423800"></p><h3 id="加入分词器后"><a href="#加入分词器后" class="headerlink" title="加入分词器后"></a>加入分词器后</h3><h4 id="简易分词器"><a href="#简易分词器" class="headerlink" title="简易分词器"></a>简易分词器</h4><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562720485967.png" alt="1562720485967"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562720869751.png" alt="1562720869751"></p><h4 id="尽最大可能分词器"><a href="#尽最大可能分词器" class="headerlink" title="尽最大可能分词器"></a>尽最大可能分词器</h4><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562720609375.png" alt="1562720609375"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562720837016.png" alt="1562720837016"></p><h1 id="es集群"><a href="#es集群" class="headerlink" title="es集群"></a>es集群</h1><h2 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h2><p>克隆一个已经安装好<code>elastic、kibana、analysis-ik</code>的机器</p><p>虚拟机—-快照—拍摄快照</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562721630555.png" alt="1562721630555"></p><p>虚拟机—管理—克隆—现有快照</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562721733540.png" alt="1562721733540"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562721751826.png" alt="1562721751826"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562721992380.png" alt="1562721992380"></p><h2 id="修改IP"><a href="#修改IP" class="headerlink" title="修改IP"></a>修改IP</h2><p>修改克隆后机器102的主机名、IP地址、硬件Mac地址</p><p>参考</p><p><a href="http://localhost:4000/myhexo/2019/02/15/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip/" target="_blank" rel="noopener">虚拟机配置静态ip | 小兵兵</a></p><h2 id="集群配置es"><a href="#集群配置es" class="headerlink" title="集群配置es"></a>集群配置es</h2><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><h4 id="修改101机器"><a href="#修改101机器" class="headerlink" title="修改101机器"></a>修改101机器</h4><p>进入<code>/opt/modules/elasticsearch-6.3.1/config</code>目录，修改<code>elasticsearch.yml</code>配置文件</p><pre class=" language-yml"><code class="language-yml"># ======================== Elasticsearch Configuration =========================## NOTE: Elasticsearch comes with reasonable defaults for most settings.#       Before you set out to tweak and tune the configuration, make sure you#       understand what are you trying to accomplish and the consequences.## The primary way of configuring a node is via this file. This template lists# the most important settings you may want to configure for a production cluster.## Please consult the documentation for further information on configuration options:# https://www.elastic.co/guide/en/elasticsearch/reference/index.html## ---------------------------------- Cluster -----------------------------------## Use a descriptive name for your cluster:#cluster.name: my-application## ------------------------------------ Node ------------------------------------## Use a descriptive name for the node:#node.name: node-1## Add custom attributes to the node:##node.attr.rack: r1## ----------------------------------- Paths ------------------------------------## Path to directory where to store the data (separate multiple locations by comma):#node.master: truenode.data: truepath.data: /opt/data## Path to log files:#path.logs: /opt/logs## ----------------------------------- Memory -----------------------------------## Lock the memory on startup:##bootstrap.memory_lock: true## Make sure that the heap size is set to about half the memory available# on the system and that the owner of the process is allowed to use this# limit.## Elasticsearch performs poorly when the system is swapping the memory.## ---------------------------------- Network -----------------------------------## Set the bind address to a specific IP (IPv4 or IPv6):#network.host: 192.168.1.101## Set a custom port for HTTP:#http.port: 9200transport.tcp.port: 9300## For more information, consult the network module documentation.## --------------------------------- Discovery ----------------------------------## Pass an initial list of hosts to perform discovery when new node is started:# The default list of hosts is ["127.0.0.1", "[::1]"]#discovery.zen.ping.unicast.hosts: ["192.168.1.102"]## Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):#discovery.zen.minimum_master_nodes: 2## For more information, consult the zen discovery module documentation.## ---------------------------------- Gateway -----------------------------------## Block initial recovery after a full cluster restart until N nodes are started:##gateway.recover_after_nodes: 3## For more information, consult the gateway module documentation.## ---------------------------------- Various -----------------------------------## Require explicit names when deleting indices:##action.destructive_requires_name: truebootstrap.memory_lock: falsebootstrap.system_call_filter: false</code></pre><p>建立数据存储目录、日志目录</p><pre><code>[root@192 config]# cd /opt/[root@192 opt]# mkdir data[root@192 opt]# mkdir logs[root@192 opt]# lltotal 16drwxr-xr-x. 2 root root 4096 Jul 10 09:58 datadrwxr-xr-x. 2 root root 4096 Jul 10 09:58 logsdrwxr-xr-x. 4 root root 4096 Jul  9 08:42 modulesdrwxr-xr-x. 2 root root 4096 Mar 26  2015 rh[root@192 opt]# chown es:es -R data/ logs/[root@192 opt]# lltotal 16drwxr-xr-x. 2 es   es   4096 Jul 10 09:58 datadrwxr-xr-x. 2 es   es   4096 Jul 10 09:58 logsdrwxr-xr-x. 4 root root 4096 Jul  9 08:42 modulesdrwxr-xr-x. 2 root root 4096 Mar 26  2015 rh</code></pre><h4 id="修改102机器"><a href="#修改102机器" class="headerlink" title="修改102机器"></a>修改102机器</h4><p>进入<code>/opt/modules/elasticsearch-6.3.1/config</code>目录，修改<code>elasticsearch.yml</code>配置文件</p><pre class=" language-yml"><code class="language-yml"># ======================== Elasticsearch Configuration =========================## NOTE: Elasticsearch comes with reasonable defaults for most settings.#       Before you set out to tweak and tune the configuration, make sure you#       understand what are you trying to accomplish and the consequences.## The primary way of configuring a node is via this file. This template lists# the most important settings you may want to configure for a production cluster.## Please consult the documentation for further information on configuration options:# https://www.elastic.co/guide/en/elasticsearch/reference/index.html## ---------------------------------- Cluster -----------------------------------## Use a descriptive name for your cluster:#cluster.name: my-application## ------------------------------------ Node ------------------------------------## Use a descriptive name for the node:#node.name: node-2## Add custom attributes to the node:##node.attr.rack: r1## ----------------------------------- Paths ------------------------------------## Path to directory where to store the data (separate multiple locations by comma):#node.master: truenode.data: truepath.data: /opt/data## Path to log files:#path.logs: /opt/logs## ----------------------------------- Memory -----------------------------------## Lock the memory on startup:##bootstrap.memory_lock: true## Make sure that the heap size is set to about half the memory available# on the system and that the owner of the process is allowed to use this# limit.## Elasticsearch performs poorly when the system is swapping the memory.## ---------------------------------- Network -----------------------------------## Set the bind address to a specific IP (IPv4 or IPv6):#network.host: 192.168.1.102## Set a custom port for HTTP:#http.port: 9200transport.tcp.port: 9300## For more information, consult the network module documentation.## --------------------------------- Discovery ----------------------------------## Pass an initial list of hosts to perform discovery when new node is started:# The default list of hosts is ["127.0.0.1", "[::1]"]#discovery.zen.ping.unicast.hosts: ["192.168.1.101"]## Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):#discovery.zen.minimum_master_nodes: 2## For more information, consult the zen discovery module documentation.## ---------------------------------- Gateway -----------------------------------## Block initial recovery after a full cluster restart until N nodes are started:##gateway.recover_after_nodes: 3## For more information, consult the gateway module documentation.## ---------------------------------- Various -----------------------------------## Require explicit names when deleting indices:##action.destructive_requires_name: truebootstrap.memory_lock: falsebootstrap.system_call_filter: false</code></pre><p>建立数据存储目录、日志目录</p><pre><code>[root@192 config]# cd /opt/[root@192 opt]# mkdir data[root@192 opt]# mkdir logs[root@192 opt]# lltotal 16drwxr-xr-x. 2 root root 4096 Jul 10 09:58 datadrwxr-xr-x. 2 root root 4096 Jul 10 09:58 logsdrwxr-xr-x. 4 root root 4096 Jul  9 08:42 modulesdrwxr-xr-x. 2 root root 4096 Mar 26  2015 rh[root@192 opt]# chown es:es -R data/ logs/[root@192 opt]# lltotal 16drwxr-xr-x. 2 es   es   4096 Jul 10 09:58 datadrwxr-xr-x. 2 es   es   4096 Jul 10 09:58 logsdrwxr-xr-x. 4 root root 4096 Jul  9 08:42 modulesdrwxr-xr-x. 2 root root 4096 Mar 26  2015 rh</code></pre><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><h4 id="重启101机器"><a href="#重启101机器" class="headerlink" title="重启101机器"></a>重启101机器</h4><pre><code>[es@192 bin]$ pwd/opt/modules/elasticsearch-6.3.1/bin[es@192 bin]$ ps -ef | grep elastices         3795   3638  0 10:08 pts/0    00:00:00 grep elastic[1]+  Killed                  nohup ./elasticsearch[es@192 bin]$ nohup ./elasticsearch &amp;[1] 3796[es@192 bin]$ nohup: ignoring input and appending output to `nohup.out&#39;[es@192 bin]$ ps -ef | grep elastices         3796   3638 99 10:09 pts/0    00:00:07 /usr/java/jdk1.8.0_202-amd64/bin/java -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch.wZB2cw0p -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/opt/modules/elasticsearch-6.3.1 -Des.path.conf=/opt/modules/elasticsearch-6.3.1/config -Des.distribution.flavor=default -Des.distribution.type=tar -cp /opt/modules/elasticsearch-6.3.1/lib/* org.elasticsearch.bootstrap.Elasticsearches         3875   3796  0 10:09 pts/0    00:00:00 /opt/modules/elasticsearch-6.3.1/modules/x-pack/x-pack-ml/platform/linux-x86_64/bin/controlleres         3881   3638  0 10:09 pts/0    00:00:00 grep elastic</code></pre><h4 id="重启102机器"><a href="#重启102机器" class="headerlink" title="重启102机器"></a>重启102机器</h4><pre><code>[es@192 bin]$ pwd/opt/modules/elasticsearch-6.3.1/bin[es@192 bin]$ ps -ef|grep elastices         4284   3992  0 10:10 pts/1    00:00:00 grep elastic[es@192 bin]$ nohup ./elasticsearch &amp;[1] 4285[es@192 bin]$ nohup: ignoring input and appending output to `nohup.out&#39;[es@192 bin]$ ps -ef|grep elastices         4285   3992 99 10:10 pts/1    00:00:04 /usr/java/jdk1.8.0_202-amd64/bin/java -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch.JmqOtV9r -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/opt/modules/elasticsearch-6.3.1 -Des.path.conf=/opt/modules/elasticsearch-6.3.1/config -Des.distribution.flavor=default -Des.distribution.type=tar -cp /opt/modules/elasticsearch-6.3.1/lib/* org.elasticsearch.bootstrap.Elasticsearches         4364   4285  0 10:10 pts/1    00:00:00 /opt/modules/elasticsearch-6.3.1/modules/x-pack/x-pack-ml/platform/linux-x86_64/bin/controlleres         4370   3992  0 10:10 pts/1    00:00:00 grep elastic[es@192 bin]$ ll</code></pre><h3 id="访问-1"><a href="#访问-1" class="headerlink" title="访问"></a>访问</h3><h4 id="访问101机器"><a href="#访问101机器" class="headerlink" title="访问101机器"></a>访问101机器</h4><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562724690806.png" alt="1562724690806"></p><h4 id="访问102机器"><a href="#访问102机器" class="headerlink" title="访问102机器"></a>访问102机器</h4><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562724717530.png" alt="1562724717530"></p><h2 id="集群管理工具cerebro"><a href="#集群管理工具cerebro" class="headerlink" title="集群管理工具cerebro"></a>集群管理工具cerebro</h2><p><a href="https://article.itxueyuan.com/3wEvb" target="_blank" rel="noopener">插件【head,bigdesk,cerebro[kopf]】安装 </a></p><h3 id="下载-3"><a href="#下载-3" class="headerlink" title="下载"></a>下载</h3><p><a href="https://github.com/lmenezes/cerebro/releases" target="_blank" rel="noopener">Releases · lmenezes/cerebro</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562725274935.png" alt="1562725274935"></p><h3 id="上传、解压"><a href="#上传、解压" class="headerlink" title="上传、解压"></a>上传、解压</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562725682229.png" alt="1562725682229"></p><pre><code>[root@192 modules]# cd /opt/[root@192 opt]# mkdir soft[root@192 opt]# lltotal 20drwxr-xr-x. 3 es   es   4096 Jul 10 10:01 datadrwxr-xr-x. 2 es   es   4096 Jul 10 10:01 logsdrwxr-xr-x. 4 root root 4096 Jul 10 10:23 modulesdrwxr-xr-x. 2 root root 4096 Mar 26  2015 rhdrwxr-xr-x. 2 root root 4096 Jul 10 10:25 soft[root@192 opt]# cd /opt/modules/[root@192 modules]# lltotal 581928-rw-r--r--.  1 root root  52397010 Jul 10 10:23 cerebro-0.8.3.tgzdrwxr-xr-x.  9 es   es        4096 Jul  9 17:16 elasticsearch-6.3.1-rw-r--r--.  1 root root  91429350 Jul  8 08:42 elasticsearch-6.3.1.tar.gz-rwxrwxrwx.  1 root root 178418154 Jul  7 21:08 jdk-8u202-linux-x64.rpmdrwxrwxr-x. 11 es   es        4096 Jun 30  2018 kibana-6.3.1-linux-x86_64-rw-r--r--.  1 root root 205397076 Jul  8 08:42 kibana-6.3.1-linux-x86_64.tar.gz-rw-r--r--.  1 root root  17855952 Jun  8 20:04 MySQL-client-5.5.48-1.linux2.6.x86_64.rpm-rw-r--r--.  1 root root  50372369 Jun  8 20:24 MySQL-server-5.5.48-1.linux2.6.x86_64.rpm[root@192 modules]# tar -zxvf cerebro-0.8.3.tgz -C /opt/soft/</code></pre><h3 id="启动-2"><a href="#启动-2" class="headerlink" title="启动"></a>启动</h3><pre><code>[root@192 modules]# cd /opt/soft/[root@192 soft]# lltotal 4drwxr-xr-x. 5 503 games 4096 Apr  5 16:48 cerebro-0.8.3[root@192 soft]# cd cerebro-0.8.3/[root@192 cerebro-0.8.3]# cd bin/[root@192 bin]# lltotal 20-rwxr-xr-x. 1 503 games 9497 Apr  5 16:48 cerebro-rwxr-xr-x. 1 503 games 4970 Apr  5 16:48 cerebro.bat[root@192 bin]# nohup ./cerebro &amp;[1] 4030[root@192 bin]# nohup: ignoring input and appending output to `nohup.out&#39;</code></pre><h3 id="访问-2"><a href="#访问-2" class="headerlink" title="访问"></a>访问</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562725889336.png" alt="1562725889336"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562725925581.png" alt="1562725925581"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>建立一条数据</p><p>启动kibana，访问添加数据</p><pre><code>[root@192 modules]# cd /opt/modules/kibana-6.3.1-linux-x86_64/bin/[root@192 bin]# lltotal 948-rwxr-xr-x. 1 es es    632 Jun 30  2018 kibana-rwxr-xr-x. 1 es es    588 Jun 30  2018 kibana-keystore-rwxr-xr-x. 1 es es    639 Jun 30  2018 kibana-plugin-rw-------. 1 es es 952696 Jul 10 09:17 nohup.out[root@192 bin]# su es[es@192 bin]$ nohup ./kibana &amp;[1] 4434[es@192 bin]$ nohup: ignoring input and appending output to `nohup.out&#39;</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562726914934.png" alt="1562726914934"></p><p><code>cerebro</code>管理工具查看</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562726996681.png" alt="1562726996681"></p>]]></content>
      
      
      <categories>
          
          <category> 搜索引擎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>压力测试工具ab</title>
      <link href="/2019/07/06/ya-li-ce-shi-gong-ju-ab/"/>
      <url>/2019/07/06/ya-li-ce-shi-gong-ju-ab/</url>
      
        <content type="html"><![CDATA[<h1 id="压力测试工具ab"><a href="#压力测试工具ab" class="headerlink" title="压力测试工具ab"></a>压力测试工具ab</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://www.apachehaus.com/cgi-bin/download.plx" target="_blank" rel="noopener">Apache Haus Downloads</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562420527928.png" alt="1562420527928"></p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562420976873.png" alt="1562420976873"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><code>-c</code>代表并发数</p><p><code>-n</code>代表请求总次数</p><pre><code>C:\Users\shenlibing\Downloads\httpd-2.4.34-o102o-x64-vc14\Apache24\bin&gt;ab -n 1000 -c 100 http://jd.com/This is ApacheBench, Version 2.3 &lt;$Revision: 1826891 $&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/Licensed to The Apache Software Foundation, http://www.apache.org/Benchmarking jd.com (be patient)Completed 100 requestsCompleted 200 requestsCompleted 300 requestsCompleted 400 requestsCompleted 500 requestsCompleted 600 requestsCompleted 700 requestsCompleted 800 requestsCompleted 900 requestsCompleted 1000 requestsFinished 1000 requestsServer Software:        jfeServer Hostname:        jd.comServer Port:            80Document Path:          /Document Length:        165 bytesConcurrency Level:      100Time taken for tests:   88.367 secondsComplete requests:      1000Failed requests:        0Non-2xx responses:      1000Total transferred:      343000 bytesHTML transferred:       165000 bytesRequests per second:    11.32 [#/sec] (mean)Time per request:       8836.697 [ms] (mean)Time per request:       88.367 [ms] (mean, across all concurrent requests)Transfer rate:          3.79 [Kbytes/sec] receivedConnection Times (ms)              min  mean[+/-sd] median   maxConnect:       51   88 178.8     59    1461Processing:    60 8357 2879.1   7889   14700Waiting:       60 4265 2937.5   3699   12704Total:        121 8445 2893.0   7951   14759Percentage of the requests served within a certain time (ms)  50%   7951  66%   9226  75%  10625  80%  11233  90%  12374  95%  13742  98%  14712  99%  14721 100%  14759 (longest request)C:\Users\shenlibing\Downloads\httpd-2.4.34-o102o-x64-vc14\Apache24\bin&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java动态代理</title>
      <link href="/2019/07/03/java-dong-tai-dai-li/"/>
      <url>/2019/07/03/java-dong-tai-dai-li/</url>
      
        <content type="html"><![CDATA[<h1 id="代理：设计模式"><a href="#代理：设计模式" class="headerlink" title="代理：设计模式"></a>代理：设计模式</h1><p>代理是一种常用的设计模式，其目的就是为其他对象提供一个代理以控制对某个对象的访问。代理类负责为委托类预处理消息，过滤消息并转发消息，以及进行消息被委托类执行后的后续处理</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1562144058102.png" alt="1562144058102"></p><h1 id="相关的类和接口"><a href="#相关的类和接口" class="headerlink" title="相关的类和接口"></a>相关的类和接口</h1><h2 id="动态代理机制的主类"><a href="#动态代理机制的主类" class="headerlink" title="动态代理机制的主类"></a>动态代理机制的主类</h2><p>java.lang.reflect.Proxy：这是 Java 动态代理机制的主类，它提供了一组静态方法来为一组接口动态地生成代理类及其对象</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>该方法用于获取指定代理对象所关联的调用处理器</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**     * Returns the invocation handler for the specified proxy instance.     *     * @param   proxy the proxy instance to return the invocation handler for     * @return  the invocation handler for the proxy instance     * @throws  IllegalArgumentException if the argument is not a     *          proxy instance     * @throws  SecurityException if a security manager, &lt;em>s&lt;/em>, is present     *          and the caller's class loader is not the same as or an     *          ancestor of the class loader for the invocation handler     *          and invocation of {@link SecurityManager#checkPackageAccess     *          s.checkPackageAccess()} denies access to the invocation     *          handler's class.     */</span>    <span class="token annotation punctuation">@CallerSensitive</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> InvocationHandler <span class="token function">getInvocationHandler</span><span class="token punctuation">(</span>Object proxy<span class="token punctuation">)</span>        <span class="token keyword">throws</span> IllegalArgumentException    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*         * Verify that the object is actually a proxy instance.         */</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isProxyClass</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"not a proxy instance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">final</span> Proxy p <span class="token operator">=</span> <span class="token punctuation">(</span>Proxy<span class="token punctuation">)</span> proxy<span class="token punctuation">;</span>        <span class="token keyword">final</span> InvocationHandler ih <span class="token operator">=</span> p<span class="token punctuation">.</span>h<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> ihClass <span class="token operator">=</span> ih<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> caller <span class="token operator">=</span> Reflection<span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ReflectUtil<span class="token punctuation">.</span><span class="token function">needsPackageAccessCheck</span><span class="token punctuation">(</span>caller<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                    ihClass<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ReflectUtil<span class="token punctuation">.</span><span class="token function">checkPackageAccess</span><span class="token punctuation">(</span>ihClass<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ih<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>该方法用于获取关联于指定类装载器和一组接口的动态代理类的类对象</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * Returns the {@code java.lang.Class} object for a proxy class     * given a class loader and an array of interfaces.  The proxy class     * will be defined by the specified class loader and will implement     * all of the supplied interfaces.  If any of the given interfaces     * is non-public, the proxy class will be non-public. If a proxy class     * for the same permutation of interfaces has already been defined by the     * class loader, then the existing proxy class will be returned; otherwise,     * a proxy class for those interfaces will be generated dynamically     * and defined by the class loader.     *     * &lt;p>There are several restrictions on the parameters that may be     * passed to {@code Proxy.getProxyClass}:     *     * &lt;ul>     * &lt;li>All of the {@code Class} objects in the     * {@code interfaces} array must represent interfaces, not     * classes or primitive types.     *     * &lt;li>No two elements in the {@code interfaces} array may     * refer to identical {@code Class} objects.     *     * &lt;li>All of the interface types must be visible by name through the     * specified class loader.  In other words, for class loader     * {@code cl} and every interface {@code i}, the following     * expression must be true:     * &lt;pre>     *     Class.forName(i.getName(), false, cl) == i     * &lt;/pre>     *     * &lt;li>All non-public interfaces must be in the same package;     * otherwise, it would not be possible for the proxy class to     * implement all of the interfaces, regardless of what package it is     * defined in.     *     * &lt;li>For any set of member methods of the specified interfaces     * that have the same signature:     * &lt;ul>     * &lt;li>If the return type of any of the methods is a primitive     * type or void, then all of the methods must have that same     * return type.     * &lt;li>Otherwise, one of the methods must have a return type that     * is assignable to all of the return types of the rest of the     * methods.     * &lt;/ul>     *     * &lt;li>The resulting proxy class must not exceed any limits imposed     * on classes by the virtual machine.  For example, the VM may limit     * the number of interfaces that a class may implement to 65535; in     * that case, the size of the {@code interfaces} array must not     * exceed 65535.     * &lt;/ul>     *     * &lt;p>If any of these restrictions are violated,     * {@code Proxy.getProxyClass} will throw an     * {@code IllegalArgumentException}.  If the {@code interfaces}     * array argument or any of its elements are {@code null}, a     * {@code NullPointerException} will be thrown.     *     * &lt;p>Note that the order of the specified proxy interfaces is     * significant: two requests for a proxy class with the same combination     * of interfaces but in a different order will result in two distinct     * proxy classes.     *     * @param   loader the class loader to define the proxy class     * @param   interfaces the list of interfaces for the proxy class     *          to implement     * @return  a proxy class that is defined in the specified class loader     *          and that implements the specified interfaces     * @throws  IllegalArgumentException if any of the restrictions on the     *          parameters that may be passed to {@code getProxyClass}     *          are violated     * @throws  SecurityException if a security manager, &lt;em>s&lt;/em>, is present     *          and any of the following conditions is met:     *          &lt;ul>     *             &lt;li> the given {@code loader} is {@code null} and     *             the caller's class loader is not {@code null} and the     *             invocation of {@link SecurityManager#checkPermission     *             s.checkPermission} with     *             {@code RuntimePermission("getClassLoader")} permission     *             denies access.&lt;/li>     *             &lt;li> for each proxy interface, {@code intf},     *             the caller's class loader is not the same as or an     *             ancestor of the class loader for {@code intf} and     *             invocation of {@link SecurityManager#checkPackageAccess     *             s.checkPackageAccess()} denies access to {@code intf}.&lt;/li>     *          &lt;/ul>     * @throws  NullPointerException if the {@code interfaces} array     *          argument or any of its elements are {@code null}     */</span>    <span class="token annotation punctuation">@CallerSensitive</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">getProxyClass</span><span class="token punctuation">(</span>ClassLoader loader<span class="token punctuation">,</span>                                         Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> interfaces<span class="token punctuation">)</span>        <span class="token keyword">throws</span> IllegalArgumentException    <span class="token punctuation">{</span>        <span class="token keyword">final</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> intfs <span class="token operator">=</span> interfaces<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> SecurityManager sm <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sm <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">checkProxyAccess</span><span class="token punctuation">(</span>Reflection<span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loader<span class="token punctuation">,</span> intfs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">getProxyClass0</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> intfs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>该方法用于判断指定类对象是否是一个动态代理类</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * Returns true if and only if the specified class was dynamically     * generated to be a proxy class using the {@code getProxyClass}     * method or the {@code newProxyInstance} method.     *     * &lt;p>The reliability of this method is important for the ability     * to use it to make security decisions, so its implementation should     * not just test if the class in question extends {@code Proxy}.     *     * @param   cl the class to test     * @return  {@code true} if the class is a proxy class and     *          {@code false} otherwise     * @throws  NullPointerException if {@code cl} is {@code null}     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isProxyClass</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> cl<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> Proxy<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>cl<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> proxyClassCache<span class="token punctuation">.</span><span class="token function">containsValue</span><span class="token punctuation">(</span>cl<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h3><p>该方法用于为指定类装载器、一组接口及调用处理器生成动态代理类实例</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * Returns an instance of a proxy class for the specified interfaces     * that dispatches method invocations to the specified invocation     * handler.     *     * &lt;p>{@code Proxy.newProxyInstance} throws     * {@code IllegalArgumentException} for the same reasons that     * {@code Proxy.getProxyClass} does.     *     * @param   loader the class loader to define the proxy class     * @param   interfaces the list of interfaces for the proxy class     *          to implement     * @param   h the invocation handler to dispatch method invocations to     * @return  a proxy instance with the specified invocation handler of a     *          proxy class that is defined by the specified class loader     *          and that implements the specified interfaces     * @throws  IllegalArgumentException if any of the restrictions on the     *          parameters that may be passed to {@code getProxyClass}     *          are violated     * @throws  SecurityException if a security manager, &lt;em>s&lt;/em>, is present     *          and any of the following conditions is met:     *          &lt;ul>     *          &lt;li> the given {@code loader} is {@code null} and     *               the caller's class loader is not {@code null} and the     *               invocation of {@link SecurityManager#checkPermission     *               s.checkPermission} with     *               {@code RuntimePermission("getClassLoader")} permission     *               denies access;&lt;/li>     *          &lt;li> for each proxy interface, {@code intf},     *               the caller's class loader is not the same as or an     *               ancestor of the class loader for {@code intf} and     *               invocation of {@link SecurityManager#checkPackageAccess     *               s.checkPackageAccess()} denies access to {@code intf};&lt;/li>     *          &lt;li> any of the given proxy interfaces is non-public and the     *               caller class is not in the same {@linkplain Package runtime package}     *               as the non-public interface and the invocation of     *               {@link SecurityManager#checkPermission s.checkPermission} with     *               {@code ReflectPermission("newProxyInPackage.{package name}")}     *               permission denies access.&lt;/li>     *          &lt;/ul>     * @throws  NullPointerException if the {@code interfaces} array     *          argument or any of its elements are {@code null}, or     *          if the invocation handler, {@code h}, is     *          {@code null}     */</span>    <span class="token annotation punctuation">@CallerSensitive</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Object <span class="token function">newProxyInstance</span><span class="token punctuation">(</span>ClassLoader loader<span class="token punctuation">,</span>                                          Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">,</span>                                          InvocationHandler h<span class="token punctuation">)</span>        <span class="token keyword">throws</span> IllegalArgumentException    <span class="token punctuation">{</span>        Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> intfs <span class="token operator">=</span> interfaces<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> SecurityManager sm <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sm <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">checkProxyAccess</span><span class="token punctuation">(</span>Reflection<span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loader<span class="token punctuation">,</span> intfs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/*         * Look up or generate the designated proxy class.         */</span>        Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> cl <span class="token operator">=</span> <span class="token function">getProxyClass0</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> intfs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*         * Invoke its constructor with the designated invocation handler.         */</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sm <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">checkNewProxyPermission</span><span class="token punctuation">(</span>Reflection<span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cl<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">final</span> Constructor<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> cons <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span>constructorParams<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">final</span> InvocationHandler ih <span class="token operator">=</span> h<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Modifier<span class="token punctuation">.</span><span class="token function">isPublic</span><span class="token punctuation">(</span>cl<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                AccessController<span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token operator">&lt;</span>Void<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">public</span> Void <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        cons<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> null<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> cons<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>h<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span><span class="token operator">|</span>InstantiationException e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InvocationTargetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            Throwable t <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token keyword">instanceof</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token punctuation">(</span>RuntimeException<span class="token punctuation">)</span> t<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h2 id="调用处理器接口"><a href="#调用处理器接口" class="headerlink" title="调用处理器接口"></a>调用处理器接口</h2><p>java.lang.reflect.Proxy：这是 Java 动态代理机制的主类，它提供了一组静态方法来为一组接口动态地生成代理类及其对象</p><h3 id="核心方法"><a href="#核心方法" class="headerlink" title="核心方法"></a>核心方法</h3><p>该方法负责集中处理动态代理类上的所有方法调用。第一个参数既是代理类实例，第二个参数是被调用的方法对象<br>第三个方法是调用参数。调用处理器根据这三个参数进行预处理或分派到委托类实例上发射执行</p><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> Object <span class="token function">invoke</span><span class="token punctuation">(</span>Object proxy<span class="token punctuation">,</span> Method method<span class="token punctuation">,</span> Object<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>        <span class="token keyword">throws</span> Throwable<span class="token punctuation">;</span></code></pre><h1 id="创建动态代理"><a href="#创建动态代理" class="headerlink" title="创建动态代理"></a>创建动态代理</h1><h2 id="版本一"><a href="#版本一" class="headerlink" title="版本一"></a>版本一</h2><h3 id="实现-InvocationHandler-接口"><a href="#实现-InvocationHandler-接口" class="headerlink" title="实现 InvocationHandler 接口"></a>实现 InvocationHandler 接口</h3><p>通过实现 InvocationHandler 接口创建自己的调用处理器</p><h3 id="创建动态代理类"><a href="#创建动态代理类" class="headerlink" title="创建动态代理类"></a>创建动态代理类</h3><p>通过为 Proxy 类指定 ClassLoader 对象和一组 interface 来创建动态代理类</p><h3 id="获得动态代理类的构造函数"><a href="#获得动态代理类的构造函数" class="headerlink" title="获得动态代理类的构造函数"></a>获得动态代理类的构造函数</h3><p>通过反射机制获得动态代理类的构造函数，其唯一参数类型是调用处理器接口类型</p><h3 id="创建动态代理类实例"><a href="#创建动态代理类实例" class="headerlink" title="创建动态代理类实例"></a>创建动态代理类实例</h3><p>通过构造函数创建动态代理类实例，构造时调用处理器对象作为参数被传入</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// InvocationHandlerImpl 实现了 InvocationHandler 接口，并能实现方法调用从代理类到委托类的分派转发</span><span class="token comment" spellcheck="true">// 其内部通常包含指向委托类实例的引用，用于真正执行分派转发过来的方法调用</span>InvocationHandler handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InvocationHandlerImpl</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 通过 Proxy 为包括 Interface 接口在内的一组接口动态创建代理类的类对象</span>Class <span class="token class-name">clazz</span> <span class="token operator">=</span> Proxy<span class="token punctuation">.</span><span class="token function">getProxyClass</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> Interface<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 通过反射从生成的类对象获得构造函数对象</span>Constructor constructor <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> InvocationHandler<span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 通过构造函数对象创建动态代理类实例</span>Interface <span class="token class-name">Proxy</span> <span class="token operator">=</span> <span class="token punctuation">(</span>Interface<span class="token punctuation">)</span>constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> handler <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="版本二"><a href="#版本二" class="headerlink" title="版本二"></a>版本二</h2><p>简化的动态代理对象创建过程</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// InvocationHandlerImpl 实现了 InvocationHandler 接口，并能实现方法调用从代理类到委托类的分派转发</span>InvocationHandler handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InvocationHandlerImpl</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 通过 Proxy 直接创建动态代理类实例</span>Interface <span class="token class-name">proxy</span> <span class="token operator">=</span> <span class="token punctuation">(</span>Interface<span class="token punctuation">)</span>Proxy<span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span> classLoader<span class="token punctuation">,</span>      <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> Interface<span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>      handler <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="使用java动态代理"><a href="#使用java动态代理" class="headerlink" title="使用java动态代理"></a>使用java动态代理</h1><h2 id="Demo1"><a href="#Demo1" class="headerlink" title="Demo1"></a>Demo1</h2><h3 id="编写接口"><a href="#编写接口" class="headerlink" title="编写接口"></a>编写接口</h3><p>Advice.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zbiti<span class="token punctuation">.</span>proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Advice</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">forwardMethod</span><span class="token punctuation">(</span>Method method<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">backMethod</span><span class="token punctuation">(</span>Method method<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="编写接口实现类"><a href="#编写接口实现类" class="headerlink" title="编写接口实现类"></a>编写接口实现类</h3><p>AdviceImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zbiti<span class="token punctuation">.</span>proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdviceImpl</span>  <span class="token keyword">implements</span> <span class="token class-name">Advice</span><span class="token punctuation">{</span>    <span class="token keyword">long</span> beginTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">forwardMethod</span><span class="token punctuation">(</span>Method method<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        beginTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">backMethod</span><span class="token punctuation">(</span>Method method<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> endTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" running time of "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> beginTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>ProxyTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zbiti<span class="token punctuation">.</span>proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>InvocationHandler<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collection<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProxyTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建目标类的实例对象</span>        ArrayList<span class="token operator">&lt;</span>String<span class="token operator">></span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AdviceImpl adviceImpl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AdviceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建动态类</span>        Collection proxy <span class="token operator">=</span> <span class="token punctuation">(</span>Collection<span class="token punctuation">)</span> <span class="token function">getProxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> adviceImpl<span class="token punctuation">)</span><span class="token punctuation">;</span>        proxy<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"aa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Object <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token keyword">final</span> Object target<span class="token punctuation">,</span> <span class="token keyword">final</span> Advice advice<span class="token punctuation">)</span><span class="token punctuation">{</span>        Object proxy <span class="token operator">=</span> Proxy<span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>                target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//动态类通过Invocation类的invoke方法调用目标类所需的方法</span>                    <span class="token keyword">public</span> Object <span class="token function">invoke</span><span class="token punctuation">(</span>Object proxy<span class="token punctuation">,</span> Method method<span class="token punctuation">,</span> Object<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                        advice<span class="token punctuation">.</span><span class="token function">forwardMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>                        Object retVal <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>                        advice<span class="token punctuation">.</span><span class="token function">backMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> retVal<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果：</p><pre><code>endstartadd running time of 0endstartsize running time of 01com.sun.proxy.$Proxy0Process finished with exit code 0</code></pre><h2 id="Demo2"><a href="#Demo2" class="headerlink" title="Demo2"></a>Demo2</h2><p>手动实现一个数据库连接池, 没有使用代理模式的情况下如下：</p><p>MyPool.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zbiti<span class="token punctuation">.</span>proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Connection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DriverManager<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>LinkedList<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyPool</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化连接数目</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> init_count <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 最大连接数</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> max_count <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 记录当前使用连接数</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> current_count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 连接池 （存放所有的初始化连接）</span>    <span class="token keyword">private</span> LinkedList<span class="token operator">&lt;</span>Connection<span class="token operator">></span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token operator">&lt;</span>Connection<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//1.  构造函数中，初始化连接放入连接池</span>    <span class="token keyword">public</span> <span class="token function">MyPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化连接</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> init_count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 记录当前连接数目</span>            current_count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建原始的连接对象</span>            Connection con <span class="token operator">=</span> <span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 把连接加入连接池</span>            pool<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//2. 创建一个新的连接的方法</span>    <span class="token keyword">private</span> Connection <span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 原始的目标对象</span>            Connection con <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://192.168.1.101:3306/cmj"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"000000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> con<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//3. 获取连接</span>    <span class="token keyword">public</span> Connection <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 3.1 判断连接池中是否有连接, 如果有连接，就直接从连接池取出</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>pool<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 3.2 连接池中没有连接： 判断，如果没有达到最大连接数，创建；</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>current_count <span class="token operator">&lt;</span> max_count<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 记录当前使用的连接数</span>            current_count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建连接</span>            <span class="token keyword">return</span> <span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 3.3 如果当前已经达到最大连接数，抛出异常</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"当前连接已经达到最大连接数目 ！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//4. 释放连接</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">realeaseConnection</span><span class="token punctuation">(</span>Connection con<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 4.1 判断： 池的数目如果小于初始化连接，就放入池中</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>pool<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> init_count<span class="token punctuation">)</span> <span class="token punctuation">{</span>            pool<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 4.2 关闭</span>                current_count<span class="token operator">--</span><span class="token punctuation">;</span>                con<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 测试：</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        MyPool pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前连接: "</span> <span class="token operator">+</span> pool<span class="token punctuation">.</span>current_count<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 3</span>        <span class="token comment" spellcheck="true">// 使用连接</span>        pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con4 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con3 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con2 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con1 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 释放连接, 连接放回连接池</span><span class="token comment" spellcheck="true">//        pool.realeaseConnection(con1);</span>        <span class="token comment" spellcheck="true">/*         * 希望：当关闭连接的时候，要把连接放入连接池！【当调用Connection接口的close方法时候，希望触发pool.addLast(con);操作】把连接放入连接池         * 解决1：实现Connection接口，重写close方法   connection接口方法太多，都实现太麻烦，放弃         * 解决2：动态代理         */</span>        con1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 再获取</span>        pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"连接池："</span> <span class="token operator">+</span> pool<span class="token punctuation">.</span>pool<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 0</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前连接: "</span> <span class="token operator">+</span> pool<span class="token punctuation">.</span>current_count<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 3</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>使用代理模式</p><p>MyPool2.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zbiti<span class="token punctuation">.</span>proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>InvocationHandler<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Proxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Connection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DriverManager<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>LinkedList<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** *  JDK 动态代理  Object obj = Proxy.newProxyInstance(....)； *  1.参数1：ClassLoader loader ,确定类加载器。程序运行时动态创建类，需要类加载加载到内存。类加载器作用：class文件 --> Class对象 *      * 一般情况使用都是当前类的类加载器 *      * 类加载器获得方式：MyFactory.class.getClassLoader(); *  2.参数2：Class[] interfaces  代理需要实现的接口们（可能有多个） *      * 方式1：userService.getClass().getInterfaces()【此方式只能在代理对象和接口是父子关系时使用】 *      * 方式2：new Class[]{UserService.class}【当被代理对象和其实现接口之间是隔代关系时（即祖孙关系）(即:一个一个列出接口) *  3.参数3：InvocationHandler h 请求处理类，代理类方法执行时，需要请求处理类来处理。 *      * 一般采用匿名内部类：new InvocationHandler(){} *      * 实现方法 invoke ，代理类每一个方法执行一次，将调用一次invoke *          参数1.1：Object proxy ,代理对象（即 proxyService，不是“代理之前对象”），一般不用。 *          参数2.2：Method method ，当前执行的方法 *              * 当前调用方法名：method.getName(); *              * 执行目标类方法：Object obj = method.invoke(代理之前对象 , args) *          参数3.3：Object[] args *              * 当前方法实际参数 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyPool2</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 初始化连接数目</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> init_count <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 最大连接数</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> max_count <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 记录当前使用连接数</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> current_count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 连接池 （存放所有的初始化连接）</span>    <span class="token keyword">private</span> LinkedList<span class="token operator">&lt;</span>Connection<span class="token operator">></span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token operator">&lt;</span>Connection<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//1.  构造函数中，初始化连接放入连接池</span>    <span class="token keyword">public</span> <span class="token function">MyPool2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化连接</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>init_count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 记录当前连接数目</span>            current_count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建原始的连接对象</span>            Connection con <span class="token operator">=</span> <span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 把连接加入连接池</span>            pool<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//2. 创建一个新的连接的方法</span>    <span class="token keyword">private</span> Connection <span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 原始的目标对象</span>            <span class="token keyword">final</span> Connection con <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token string">"jdbc:mysql://192.168.1.101:3306/cmj"</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"000000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/**********对con对象代理**************/</span>            <span class="token comment" spellcheck="true">// 对con创建其代理对象</span>            Connection proxy <span class="token operator">=</span> <span class="token punctuation">(</span>Connection<span class="token punctuation">)</span> Proxy<span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>                    con<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 类加载器</span>                    <span class="token comment" spellcheck="true">//con.getClass().getInterfaces(),   // 当目标对象是一个具体的类的时候</span>                    <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>Connection<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 目标对象实现的接口</span>                    <span class="token keyword">new</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 当调用con对象方法的时候， 自动触发事务处理器</span>                        <span class="token annotation punctuation">@Override</span>                        <span class="token keyword">public</span> Object <span class="token function">invoke</span><span class="token punctuation">(</span>Object proxy<span class="token punctuation">,</span> Method method<span class="token punctuation">,</span> Object<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>                                <span class="token keyword">throws</span> Throwable <span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">// 方法返回值</span>                            Object result <span class="token operator">=</span> null<span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// 当前执行的方法的方法名</span>                            String methodName <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// 判断当执行了close方法的时候，把连接放入连接池</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"close"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"begin:当前执行close方法开始！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token comment" spellcheck="true">// 连接放入连接池</span>                                pool<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>                                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"end: 当前连接已经放入连接池了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                <span class="token comment" spellcheck="true">// 调用目标对象方法，注意这里不是代理对象</span>                                result <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>con<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">return</span> result<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//3. 获取连接</span>    <span class="token keyword">public</span> Connection <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 3.1 判断连接池中是否有连接, 如果有连接，就直接从连接池取出</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>pool<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 3.2 连接池中没有连接： 判断，如果没有达到最大连接数，创建；</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>current_count <span class="token operator">&lt;</span> max_count<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 记录当前使用的连接数</span>            current_count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 创建连接</span>            <span class="token keyword">return</span> <span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 3.3 如果当前已经达到最大连接数，抛出异常</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"当前连接已经达到最大连接数目 ！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//4. 释放连接</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">realeaseConnection</span><span class="token punctuation">(</span>Connection con<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 4.1 判断： 池的数目如果小于初始化连接，就放入池中</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>pool<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> init_count<span class="token punctuation">)</span><span class="token punctuation">{</span>            pool<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 4.2 关闭</span>                current_count<span class="token operator">--</span><span class="token punctuation">;</span>                con<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 测试：</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        MyPool2 pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPool2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前连接: "</span> <span class="token operator">+</span> pool<span class="token punctuation">.</span>current_count<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 3</span>        <span class="token comment" spellcheck="true">// 使用连接</span>        pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con4 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con3 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con2 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Connection con1 <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 释放连接, 连接放回连接池</span><span class="token comment" spellcheck="true">//        pool.realeaseConnection(con1);</span>        <span class="token comment" spellcheck="true">/*         * 希望：当关闭连接的时候，要把连接放入连接池！【当调用Connection接口的close方法时候，希望触发pool.addLast(con);操作】把连接放入连接池         * 解决1：实现Connection接口，重写close方法         * 解决2：动态代理         */</span>        con1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 再获取</span>        pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"连接池："</span> <span class="token operator">+</span> pool<span class="token punctuation">.</span>pool<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 0</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前连接: "</span> <span class="token operator">+</span> pool<span class="token punctuation">.</span>current_count<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 3</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-proxy1/index.html" target="_blank" rel="noopener">Java 动态代理机制分析及扩展，第 1 部分</a></p><p><a href="https://crowhawk.github.io/2017/02/21/basic-java-proxy/" target="_blank" rel="noopener">Java基础学习(4)——动态代理 - 王泽远的博客 | Crow’s Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringData</title>
      <link href="/2019/06/15/springdata/"/>
      <url>/2019/06/15/springdata/</url>
      
        <content type="html"><![CDATA[<h1 id="涉及技术介绍"><a href="#涉及技术介绍" class="headerlink" title="涉及技术介绍"></a>涉及技术介绍</h1><h2 id="Hibernate"><a href="#Hibernate" class="headerlink" title="Hibernate"></a>Hibernate</h2><p><a href="http://hibernate.org/orm/" target="_blank" rel="noopener">Your relational data. Objectively. - Hibernate ORM</a></p><p><strong>Object/Relational Mapping</strong><br>Hibernate ORM enables developers to more easily write applications whose data outlives the application process. As an Object/Relational Mapping (ORM) framework, Hibernate is concerned with data persistence as it applies to relational databases (via JDBC). Unfamiliar with the notion of ORM? Read here.</p><p><strong>JPA Provider</strong><br>In addition to its own “native” API, Hibernate is also an implementation of the Java Persistence API (JPA) specification. As such, it can be easily used in any environment supporting JPA including Java SE applications, Java EE application servers, Enterprise OSGi containers, etc.</p><p><strong>Idiomatic persistence</strong><br>Hibernate enables you to develop persistent classes following natural Object-oriented idioms including inheritance, polymorphism, association, composition, and the Java collections framework. Hibernate requires no interfaces or base classes for persistent classes and enables any class or data structure to be persistent.</p><p><strong>High Performance</strong><br>Hibernate supports lazy initialization, numerous fetching strategies and optimistic locking with automatic versioning and time stamping. Hibernate requires no special database tables or fields and generates much of the SQL at system initialization time instead of at runtime.</p><p>Hibernate consistently offers superior performance over straight JDBC code, both in terms of developer productivity and runtime performance.</p><p><strong>Scalability</strong><br>Hibernate was designed to work in an application server cluster and deliver a highly scalable architecture. Hibernate scales well in any environment: Use it to drive your in-house Intranet that serves hundreds of users or for mission-critical applications that serve hundreds of thousands.</p><p><strong>Reliable</strong><br>Hibernate is well known for its excellent stability and quality, proven by the acceptance and use by tens of thousands of Java developers.</p><p><strong>Extensibility</strong><br>Hibernate is highly configurable and extensible.</p><h2 id="JPA-标准"><a href="#JPA-标准" class="headerlink" title="JPA 标准"></a>JPA 标准</h2><p><a href="https://en.wikipedia.org/wiki/Java_Persistence_API" target="_blank" rel="noopener">Java Persistence API - Wikipedia</a></p><p>The <strong>Java Persistence API</strong> (<strong>JPA</strong>) is a <a href="https://en.wikipedia.org/wiki/Java_(programming_language)" target="_blank" rel="noopener">Java</a> <a href="https://en.wikipedia.org/wiki/Application_programming_interface" target="_blank" rel="noopener">application programming interface</a> specification that describes the management of <a href="https://en.wikipedia.org/wiki/Relational_data_model" target="_blank" rel="noopener">relational data</a> in applications using <a href="https://en.wikipedia.org/wiki/Java_Platform,_Standard_Edition" target="_blank" rel="noopener">Java Platform, Standard Edition</a> and <a href="https://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition" target="_blank" rel="noopener">Java Platform, Enterprise Edition</a>.</p><p><a href="https://en.wikipedia.org/wiki/Persistence_(computer_science)" target="_blank" rel="noopener">Persistence</a> in this context covers three areas:</p><ul><li>the <a href="https://en.wikipedia.org/wiki/Application_programming_interface" target="_blank" rel="noopener">API</a> itself, defined in the <code>javax.persistence</code> package</li><li>the <a href="https://en.wikipedia.org/wiki/Java_Persistence_Query_Language" target="_blank" rel="noopener">Java Persistence Query Language</a> (JPQL)</li><li>object/relational metadata</li></ul><h2 id="Hibernate-JPA"><a href="#Hibernate-JPA" class="headerlink" title="Hibernate JPA"></a>Hibernate JPA</h2><p><code>Hibernate</code> 在<code>3.2</code> 以后根据<code>JPA</code> 规范提供了一套操作持久层的 API</p><h2 id="Spring-Data"><a href="#Spring-Data" class="headerlink" title="Spring Data"></a>Spring Data</h2><p><a href="https://spring.io/projects/spring-data" target="_blank" rel="noopener">Spring Data</a></p><p>Spring Data’s mission is to provide a familiar and consistent, Spring-based programming model for data access while still retaining the special traits of the underlying data store.</p><p>It makes it easy to use data access technologies, relational and non-relational databases, map-reduce frameworks, and cloud-based data services. This is an umbrella project which contains many subprojects that are specific to a given database. The projects are developed by working together with many of the companies and developers that are behind these exciting technologies.</p><h2 id="Spring-Data-JPA"><a href="#Spring-Data-JPA" class="headerlink" title="Spring Data JPA"></a>Spring Data JPA</h2><p><a href="https://spring.io/projects/spring-data-jpa" target="_blank" rel="noopener">Spring Data JPA</a></p><p>Spring Data JPA, part of the larger Spring Data family, makes it easy to easily implement JPA based repositories. This module deals with enhanced support for JPA based data access layers. It makes it easier to build Spring-powered applications that use data access technologies.</p><p>Implementing a data access layer of an application has been cumbersome for quite a while. Too much boilerplate code has to be written to execute simple queries as well as perform pagination, and auditing. Spring Data JPA aims to significantly improve the implementation of data access layers by reducing the effort to the amount that’s actually needed. As a developer you write your repository interfaces, including custom finder methods, and Spring will provide the implementation automatically.</p><h2 id="Spring-Data-Redis"><a href="#Spring-Data-Redis" class="headerlink" title="Spring Data Redis"></a>Spring Data Redis</h2><p><a href="https://spring.io/projects/spring-data-redis" target="_blank" rel="noopener">Spring Data Redis</a></p><p>Spring Data Redis, part of the larger Spring Data family, provides easy configuration and access to Redis from Spring applications. It offers both low-level and high-level abstractions for interacting with the store, freeing the user from infrastructural concerns.</p><h1 id="Spring-整合-Hibernate"><a href="#Spring-整合-Hibernate" class="headerlink" title="Spring  整合 Hibernate"></a>Spring  整合 Hibernate</h1><h2 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h2><h3 id="spring-jar包"><a href="#spring-jar包" class="headerlink" title="spring jar包"></a>spring jar包</h3><h4 id="spring-ioc"><a href="#spring-ioc" class="headerlink" title="spring-ioc"></a>spring-ioc</h4><p>spring-beans-4.2.0.RELEASE.jar</p><p>spring-context-4.2.0.RELEASE.jar</p><p>spring-core-4.2.0.RELEASE.jar</p><p>spring-expression-4.2.0.RELEASE.jar</p><h4 id="spring-aop"><a href="#spring-aop" class="headerlink" title="spring-aop"></a>spring-aop</h4><p>aopalliance.jar</p><p>aspectjrt.jar</p><p>aspectjweaver.jar</p><p>spring-aop-4.2.0.RELEASE.jar</p><p>spring-aspects-4.2.0.RELEASE.jar</p><h4 id="spring-jdbc"><a href="#spring-jdbc" class="headerlink" title="spring-jdbc"></a>spring-jdbc</h4><p>spring-jdbc-4.2.0.RELEASE.jar</p><p>spring-tx-4.2.0.RELEASE.jar</p><h4 id="spring-orm"><a href="#spring-orm" class="headerlink" title="spring-orm"></a>spring-orm</h4><p>spring-orm-4.2.0.RELEASE.jar</p><h4 id="spring-test"><a href="#spring-test" class="headerlink" title="spring-test"></a>spring-test</h4><p>spring-test-4.2.0.RELEASE.jar</p><h4 id="apache-logging"><a href="#apache-logging" class="headerlink" title="apache-logging"></a>apache-logging</h4><p>commons-logging-1.1.1.jar</p><h3 id="hibernate-jar包"><a href="#hibernate-jar包" class="headerlink" title="hibernate jar包"></a>hibernate jar包</h3><h4 id="hibernate-core"><a href="#hibernate-core" class="headerlink" title="hibernate-core"></a>hibernate-core</h4><p>antlr-2.7.7.jar</p><p>dom4j-1.6.1.jar</p><p>geronimo-jta_1.1_spec-1.1.1.jar</p><p>hibernate-commons-annotations-5.0.1.Final.jar</p><p>hibernate-core-5.0.7.Final.jar</p><p>hibernate-jpa-2.1-api-1.0.0.Final.jar</p><p>jandex-2.0.0.Final.jar</p><p>javassist-3.18.1-GA.jar</p><p>jboss-logging-3.3.0.Final.jar</p><h4 id="mysqql-driver"><a href="#mysqql-driver" class="headerlink" title="mysqql-driver"></a>mysqql-driver</h4><p>mysql-connector-java-5.1.7-bin.jar</p><h4 id="c3p0连接池"><a href="#c3p0连接池" class="headerlink" title="c3p0连接池"></a>c3p0连接池</h4><p>c3p0-0.9.2.1.jar</p><p>hibernate-c3p0-5.0.7.Final.jar</p><p>mchange-commons-java-0.2.3.4.jar</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560590752790.png" alt="1560590752790"></p><h2 id="spring整合hibernate"><a href="#spring整合hibernate" class="headerlink" title="spring整合hibernate"></a>spring整合hibernate</h2><p>编写配置文件</p><ul><li>配置读取properties文件的工具类</li><li>配置c3p0数据库连接池</li><li>配置Hibernate的SeesionFactory</li><li>配置Hibernate的事务管理器</li><li>配置开启注解事务处理</li><li>配置springIOC的注解扫描</li></ul><p>applicationContext.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/tx<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans.xsd    http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context.xsd    http://www.springframework.org/schema/aop    http://www.springframework.org/schema/aop/spring-aop.xsd    http://www.springframework.org/schema/tx     http://www.springframework.org/schema/tx/spring-tx.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置读取properties文件的工具类 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置c3p0数据库连接池 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.url}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClass<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.driver.class}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.username}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.password}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置Hibernate的SeesionFactory --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sessionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.hibernate5.LocalSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- hibernateProperties属性：配置与hibernate相关的内容，如显示sql语句，开启正向工程 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hibernateProperties<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>props</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 显示当前执行的sql语句 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hibernate.show_sql<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 开启正向工程 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hibernate.hbm2ddl.auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>update<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>props</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 扫描实体所在的包 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>packagesToScan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.bjsxt.pojo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置Hibernate的事务管理器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transactionManager<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.hibernate5.HibernateTransactionManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sessionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sessionFactory<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置开启注解事务处理 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>annotation-driven</span> <span class="token attr-name">transaction-manager</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transactionManager<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置springIOC的注解扫描 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.bjsxt<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h2 id="hibernate完成CRUD"><a href="#hibernate完成CRUD" class="headerlink" title="hibernate完成CRUD"></a>hibernate完成CRUD</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560591084871.png" alt="1560591084871"></p><h3 id="编写实体类"><a href="#编写实体类" class="headerlink" title="编写实体类"></a>编写实体类</h3><p>Users.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//strategy=GenerationType.IDENTITY 自增长</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"userid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"username"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"userage"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userage<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getUserid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserid</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userid <span class="token operator">=</span> userid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getUserage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserage</span><span class="token punctuation">(</span>Integer userage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userage <span class="token operator">=</span> userage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [userid="</span> <span class="token operator">+</span> userid <span class="token operator">+</span> <span class="token string">", username="</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">", userage="</span> <span class="token operator">+</span> userage <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>添加 <code>HibernateTemplate</code>，修改<code>applicationContext.xml</code>配置文件</p><pre class=" language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- 配置HiberanteTemplate对象 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hibernateTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.hibernate5.HibernateTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sessionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sessionFactory<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><h3 id="编写接口"><a href="#编写接口" class="headerlink" title="编写接口"></a>编写接口</h3><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">insertUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">updateUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">deleteUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">;</span>    Users <span class="token function">selectUsersById</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="编写实现类"><a href="#编写实现类" class="headerlink" title="编写实现类"></a>编写实现类</h3><p>UsersDaoImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Query<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>hibernate5<span class="token punctuation">.</span>HibernateTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersDaoImpl</span>  <span class="token keyword">implements</span> <span class="token class-name">UsersDao</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> HibernateTemplate hibernateTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hibernateTemplate<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hibernateTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hibernateTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Users <span class="token function">selectUsersById</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hibernateTemplate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> userid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写测试代码"><a href="#编写测试代码" class="headerlink" title="编写测试代码"></a>编写测试代码</h3><p>UsersDaoImplTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersDaoImplTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span><span class="token comment" spellcheck="true">// 在测试类对于事务提交方式默认的是回滚。</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//取消自动回滚</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">insertUsers</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 更新用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdateUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserid</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">updateUsers</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据userid查询用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUsersById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">selectUsersById</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 删除用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDeleteUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserid</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">deleteUsers</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="HQL查询"><a href="#HQL查询" class="headerlink" title="HQL查询"></a>HQL查询</h2><p><code>HQL：Hibernate Query Language</code><br><code>HQL</code>的语法：就是将原来的 <code>sql</code>语句中的表与字段名称换成对象与属性的名称就可以了</p><h3 id="修改接口"><a href="#修改接口" class="headerlink" title="修改接口"></a>修改接口</h3><p>添加查询方法</p><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="修改实现类"><a href="#修改实现类" class="headerlink" title="修改实现类"></a>修改实现类</h3><p>实现查询方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//getCurrentSession:当前session必须要有事务边界，且只能处理唯一的一个事务。当事务提交或者回滚后session自动失效</span>        <span class="token comment" spellcheck="true">//openSession:每次都会打开一个新的session.加入每次使用多次。则获得的是不同session对象。使用完毕后我们需要手动的调用colse方法关闭session</span>    Session session <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hibernateTemplate<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//sql:select * from t_users where username = </span>    Query query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span><span class="token string">"from Users where username = :abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Query queryTemp <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> queryTemp<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="编写测试代码-1"><a href="#编写测试代码-1" class="headerlink" title="编写测试代码"></a>编写测试代码</h3><p>测试<code>HQL</code>查询</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * HQL测试     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUserByName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">selectUserByName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h2 id="SQL查询"><a href="#SQL查询" class="headerlink" title="SQL查询"></a>SQL查询</h2><h3 id="修改接口-1"><a href="#修改接口-1" class="headerlink" title="修改接口"></a>修改接口</h3><p>添加查询方法</p><pre class=" language-java"><code class="language-java">    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByNameUseSQL</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="修改实现类-1"><a href="#修改实现类-1" class="headerlink" title="修改实现类"></a>修改实现类</h3><p>实现查询方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByNameUseSQL</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Session session <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hibernateTemplate<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Query query <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createSQLQuery</span><span class="token punctuation">(</span><span class="token string">"select * from t_users where username = ?"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEntity</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> query<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="编写测试代码-2"><a href="#编写测试代码-2" class="headerlink" title="编写测试代码"></a>编写测试代码</h3><p>测试<code>SQL</code>查询</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * SQL测试     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUserByNameUseSQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">selectUserByNameUseSQL</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h2 id="QBC查询"><a href="#QBC查询" class="headerlink" title="QBC查询"></a>QBC查询</h2><p><code>QBC：Query By Criteria</code></p><h3 id="修改接口-2"><a href="#修改接口-2" class="headerlink" title="修改接口"></a>修改接口</h3><p>添加查询方法</p><pre class=" language-java"><code class="language-java">    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByNameUseCriteria</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="修改实现类-2"><a href="#修改实现类-2" class="headerlink" title="修改实现类"></a>修改实现类</h3><p>实现接口查询方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByNameUseCriteria</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Session session <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hibernateTemplate<span class="token punctuation">.</span><span class="token function">getSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCurrentSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//sql:select * from t_users where username = 张三</span>        Criteria c <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Restrictions<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="编写测试代码-3"><a href="#编写测试代码-3" class="headerlink" title="编写测试代码"></a>编写测试代码</h3><p>测试<code>QBC</code>查询</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * Criteria测试     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUserByNameUseCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">selectUserByNameUseCriteria</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h1 id="Spring整合Hibernate-JPA"><a href="#Spring整合Hibernate-JPA" class="headerlink" title="Spring整合Hibernate JPA"></a>Spring整合Hibernate JPA</h1><p><code>JPA：</code>由 <code>Sun</code>公司提供了一对对于持久层操作的标准(接口+文档)<br><code>Hibernate:</code>是 <code>Gavin King</code>开发的一套对于持久层操作的自动的<code>ORM</code>框架。<br><code>Hibernate JPA:</code>是在<code>Hibernate3.2</code>版本那种提供了对于 <code>JPA</code>的标准的实现。提供了一套按<br>照 <code>JPA</code> 标准来实现持久层开发的 <code>API</code></p><h2 id="导入jar包-1"><a href="#导入jar包-1" class="headerlink" title="导入jar包"></a>导入jar包</h2><p>在项目中导入 <code>HIbernateJPA</code>相关的 <code>jar</code></p><p>hibernate-entitymanager-5.0.7.Final.jar</p><h2 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>修改<code>applicationContext.xml</code>配置文件</p><ul><li>配置读取properties文件的工具类</li><li>配置c3p0数据库连接池</li><li>Spring整合JPA  配置EntityManagerFactory</li><li>配置jpa的事务管理器</li><li>配置开启注解事务处理</li><li>配置springIOC的注解扫描</li></ul><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/tx<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans.xsd    http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context.xsd    http://www.springframework.org/schema/aop    http://www.springframework.org/schema/aop/spring-aop.xsd    http://www.springframework.org/schema/tx     http://www.springframework.org/schema/tx/spring-tx.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置读取properties文件的工具类 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置c3p0数据库连接池 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.url}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClass<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.driver.class}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.username}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.password}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Spring整合JPA  配置EntityManagerFactory--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entityManagerFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jpaVedorAdapter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- hibernate相关的属性的注入 --></span>                <span class="token comment" spellcheck="true">&lt;!-- 配置数据库类型 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>database<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MYSQL<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 正向工程 自动创建表 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>generateDdl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 显示执行的SQL --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSql<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 扫描实体的包 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>packagesToScan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.bjsxt.pojo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置jpa的事务管理器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transactionManager<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.jpa.JpaTransactionManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entityManagerFactory<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entityManagerFactory<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置开启注解事务处理 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>annotation-driven</span> <span class="token attr-name">transaction-manager</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transactionManager<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置springIOC的注解扫描 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.bjsxt<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h2 id="Hibernate-JPA的CRUD"><a href="#Hibernate-JPA的CRUD" class="headerlink" title="Hibernate JPA的CRUD"></a>Hibernate JPA的CRUD</h2><h3 id="编写实体类-1"><a href="#编写实体类-1" class="headerlink" title="编写实体类"></a>编写实体类</h3><p>Users.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//strategy=GenerationType.IDENTITY 自增长</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"userid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"username"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"userage"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userage<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getUserid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserid</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userid <span class="token operator">=</span> userid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getUserage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserage</span><span class="token punctuation">(</span>Integer userage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userage <span class="token operator">=</span> userage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [userid="</span> <span class="token operator">+</span> userid <span class="token operator">+</span> <span class="token string">", username="</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">", userage="</span> <span class="token operator">+</span> userage <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写接口-1"><a href="#编写接口-1" class="headerlink" title="编写接口"></a>编写接口</h3><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">insertUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">updateUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">deleteUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">;</span>    Users <span class="token function">selectUsersById</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="编写实现类-1"><a href="#编写实现类-1" class="headerlink" title="编写实现类"></a>编写实现类</h3><p>UsersDaoImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>EntityManager<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>PersistenceContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Criteria<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Query<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>Session<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>criterion<span class="token punctuation">.</span>Restrictions<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>hibernate5<span class="token punctuation">.</span>HibernateTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersDaoImpl</span>  <span class="token keyword">implements</span> <span class="token class-name">UsersDao</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PersistenceContext</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"entityManagerFactory"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> EntityManager entityManager<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>entityManager<span class="token punctuation">.</span><span class="token function">persist</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>entityManager<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Users  u <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectUsersById</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span><span class="token function">getUserid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>entityManager<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Users <span class="token function">selectUsersById</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>entityManager<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> userid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写测试代码-4"><a href="#编写测试代码-4" class="headerlink" title="编写测试代码"></a>编写测试代码</h3><p>UsersDaoImplTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersDaoImplTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span><span class="token comment" spellcheck="true">// 在测试类对于事务提交方式默认的是回滚。</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//取消自动回滚</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"王小丽"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">insertUsers</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 更新用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdateUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserid</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">updateUsers</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据userid查询用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUsersById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">selectUsersById</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 删除用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDeleteUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserid</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">deleteUsers</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="HQL查询-1"><a href="#HQL查询-1" class="headerlink" title="HQL查询"></a>HQL查询</h2><h3 id="修改接口-3"><a href="#修改接口-3" class="headerlink" title="修改接口"></a>修改接口</h3><p>添加<code>HQL</code>查询方法</p><pre class=" language-java"><code class="language-java">    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="修改实现类-3"><a href="#修改实现类-3" class="headerlink" title="修改实现类"></a>修改实现类</h3><p>实现<code>HQL</code>查询接口方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByName</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>entityManager<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span><span class="token string">" from Users where username = :abc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="修改测试代码"><a href="#修改测试代码" class="headerlink" title="修改测试代码"></a>修改测试代码</h3><p>测试<code>HQL</code>查询</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * HQL测试     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUserByName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">selectUserByName</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h2 id="SQL查询-1"><a href="#SQL查询-1" class="headerlink" title="SQL查询"></a>SQL查询</h2><h3 id="修改接口-4"><a href="#修改接口-4" class="headerlink" title="修改接口"></a>修改接口</h3><p>添加<code>SQL</code>查询方法</p><pre class=" language-java"><code class="language-java">    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByNameUseSQL</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="修改实现类-4"><a href="#修改实现类-4" class="headerlink" title="修改实现类"></a>修改实现类</h3><p>实现<code>SQL</code>查询接口方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByNameUseSQL</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//在Hibernate JPA中 如果通过？方式来帮顶参数，那么他的查数是从1开始的。而hibernate中是从0开始的。</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>entityManager<span class="token punctuation">.</span><span class="token function">createNativeQuery</span><span class="token punctuation">(</span><span class="token string">"select * from t_users where username = ?"</span><span class="token punctuation">,</span> Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="修改测试代码-1"><a href="#修改测试代码-1" class="headerlink" title="修改测试代码"></a>修改测试代码</h3><p>测试<code>SQL</code>查询</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * SQL测试     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUserByNameUseSQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">selectUserByNameUseSQL</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h2 id="QBC查询-1"><a href="#QBC查询-1" class="headerlink" title="QBC查询"></a>QBC查询</h2><h3 id="修改接口-5"><a href="#修改接口-5" class="headerlink" title="修改接口"></a>修改接口</h3><p>添加<code>QBC</code>查询方法</p><pre class=" language-java"><code class="language-java">    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByNameUseCriteria</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="修改实现类-5"><a href="#修改实现类-5" class="headerlink" title="修改实现类"></a>修改实现类</h3><p>实现<code>QBC</code>查询接口方法</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUserByNameUseCriteria</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//CriteriaBuilder对象：创建一个CriteriaQuery,创建查询条件。</span>        CriteriaBuilder builber <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>entityManager<span class="token punctuation">.</span><span class="token function">getCriteriaBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//CriteriaQuery对象：执行查询的Criteria对象</span>        <span class="token comment" spellcheck="true">//select  * from t_users</span>        CriteriaQuery<span class="token operator">&lt;</span>Users<span class="token operator">></span> query <span class="token operator">=</span> builber<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取要查询的实体类的对象</span>        Root<span class="token operator">&lt;</span>Users<span class="token operator">></span> root <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//封装查询条件</span>        Predicate cate <span class="token operator">=</span> builber<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//select * from t_users where username = 张三</span>        query<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>cate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//执行查询</span>        TypedQuery<span class="token operator">&lt;</span>Users<span class="token operator">></span> typeQuery <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>entityManager<span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> typeQuery<span class="token punctuation">.</span><span class="token function">getResultList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="修改测试代码-2"><a href="#修改测试代码-2" class="headerlink" title="修改测试代码"></a>修改测试代码</h3><p>测试<code>QBC</code>查询</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * Criteria测试     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUserByNameUseCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">selectUserByNameUseCriteria</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><h1 id="Spring-Data-JPA-1"><a href="#Spring-Data-JPA-1" class="headerlink" title="Spring Data JPA"></a>Spring Data JPA</h1><p><code>Spring Data JPA：Spring Data JPA</code> 是<code>spring data</code>项目下的一个模块。提供了一套基于<code>JPA</code><br>标准操作数据库的简化方案。底层默认的是依赖 <code>Hibernate JPA</code>来实现的。<br><code>Spring Data JPA</code>的技术特点：我们只需要定义接口并集成<code>Spring Data JPA</code>中所提供的接<br>口就可以了。不需要编写接口实现类。</p><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><h3 id="导入jar包-2"><a href="#导入jar包-2" class="headerlink" title="导入jar包"></a>导入jar包</h3><p>在<code>spring</code>整合<code>hibernate、hibernate JPA</code>的基础<code>jar</code>包上添加</p><ul><li>spring-data-commons-1.11.0.RELEASE.jar</li><li>spring-data-jpa-1.9.0.RELEASE.jar</li><li>slf4j-api-1.6.1.jar</li><li>slf4j-log4j12-1.7.2.jar</li><li>log4j-1.2.16.jar</li></ul><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560736030901.png" alt="1560736030901"></p><h3 id="修改配置文件-2"><a href="#修改配置文件-2" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><ul><li><code>JPA</code>命名空间<code>xmlns:jpa=&quot;http://www.springframework.org/schema/data/jpa&quot;</code></li><li><code>Spring Data JPA</code> 的配置<code>&lt;jpa:repositories base-package=&quot;com.bjsxt.dao&quot;/&gt;</code></li></ul><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/tx<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>jpa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/data/jpa<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans.xsd    http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context.xsd    http://www.springframework.org/schema/aop    http://www.springframework.org/schema/aop/spring-aop.xsd    http://www.springframework.org/schema/data/jpa     http://www.springframework.org/schema/data/jpa/spring-jpa.xsd    http://www.springframework.org/schema/tx     http://www.springframework.org/schema/tx/spring-tx.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置读取properties文件的工具类 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置c3p0数据库连接池 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcUrl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.url}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClass<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.driver.class}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.username}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.password}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Spring整合JPA  配置EntityManagerFactory--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entityManagerFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jpaVendorAdapter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- hibernate相关的属性的注入 --></span>                <span class="token comment" spellcheck="true">&lt;!-- 配置数据库类型 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>database<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MYSQL<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 正向工程 自动创建表 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>generateDdl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 显示执行的SQL --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSql<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 扫描实体的包 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>packagesToScan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.bjsxt.pojo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置Hibernate的事务管理器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transactionManager<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.orm.jpa.JpaTransactionManager<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entityManagerFactory<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entityManagerFactory<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置开启注解事务处理 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>annotation-driven</span> <span class="token attr-name">transaction-manager</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transactionManager<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置springIOC的注解扫描 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.bjsxt<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Spring Data JPA 的配置 --></span>    <span class="token comment" spellcheck="true">&lt;!-- base-package：扫描dao接口所在的包 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">jpa:</span>repositories</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.bjsxt.dao<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h3 id="编写DAO"><a href="#编写DAO" class="headerlink" title="编写DAO"></a>编写DAO</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="编写测试代码-5"><a href="#编写测试代码-5" class="headerlink" title="编写测试代码"></a>编写测试代码</h3><ul><li><code>JUnit</code>单元测试，事务默认是回滚的</li><li></li></ul><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersDaoImplTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加用户     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span><span class="token comment" spellcheck="true">// 在测试类对于事务提交方式默认的是回滚。</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//取消自动回滚</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="接口继承结构"><a href="#接口继承结构" class="headerlink" title="接口继承结构"></a>接口继承结构</h2><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560737840689.png" alt="1560737840689"></p><h2 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h2><ul><li>入门编写测试代码时，我们注入了接口<code>UsersDao</code>,自己并没有实现<code>save</code>但是可以直接调用，实际上通过工厂对象<code>JpaRepositoryFactory</code>帮我们生成了代理对象</li></ul><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@PersistenceContext</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"entityManagerFactory"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> EntityManager em<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//org.springframework.data.jpa.repository.support.SimpleJpaRepository@fba8bf</span>    <span class="token comment" spellcheck="true">//System.out.println(this.usersDao);</span>    <span class="token comment" spellcheck="true">//class com.sun.proxy.$Proxy29 代理对象 是基于 JDK 的动态代理方式创建的</span>    <span class="token comment" spellcheck="true">//System.out.println(this.usersDao.getClass());</span>    JpaRepositoryFactory factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JpaRepositoryFactory</span><span class="token punctuation">(</span>em<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//getRepository(UsersDao.class);可以帮助我们为接口生成实现类。而这个实现类是 SimpleJpaRepository 的对象</span>    <span class="token comment" spellcheck="true">//要求：该接口必须要是继承 Repository 接口</span>    UsersDao ud <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span>UsersDao<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ud<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ud<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="Repository接口"><a href="#Repository接口" class="headerlink" title="Repository接口"></a>Repository接口</h2><p><code>Repository</code> 接口是 <code>Spring Data JPA</code> 中为我我们提供的所有接口中的顶层接口<br><code>Repository</code>提供了两种查询方式的支持</p><ul><li>基于方法名称命名规则查询</li><li>基于<code>@Query</code> 注解查询</li></ul><h3 id="方法名称命名规则查询"><a href="#方法名称命名规则查询" class="headerlink" title="方法名称命名规则查询"></a>方法名称命名规则查询</h3><ul><li>规则：<code>findBy</code>(关键字)+属性名称(属性名称的首字母大写)+查询条件(首字母大写)</li></ul><table><thead><tr><th>关键字</th><th>方法命名</th><th>sql where 子句</th></tr></thead><tbody><tr><td>And</td><td>findByNameAndPwd</td><td>where name= ? and pwd =?</td></tr><tr><td>Or</td><td>findByNameOrSex</td><td>where name= ? or sex=?</td></tr><tr><td>Is,Equal</td><td>findById,findByIdEquals</td><td>where id= ?</td></tr><tr><td>Between</td><td>findByIdBetween</td><td>where id between ?  and ?</td></tr><tr><td>LessThan</td><td>findByIdLessThan</td><td>where id &lt; ?</td></tr><tr><td>LessThanEqual</td><td>findByIdLessThanEquals</td><td>where id &lt;= ?</td></tr><tr><td>GreaterThan</td><td>findByIdGreaterThan</td><td>where id &gt; ?</td></tr><tr><td>GreaterThanEqual</td><td>findByIdGreaterThanEquals</td><td>where id &gt; = ?</td></tr><tr><td>After</td><td>findByIdAfter</td><td>where id &gt; ?</td></tr><tr><td>Before</td><td>findByIdBefore</td><td>where id &lt; ?</td></tr><tr><td>IsNull</td><td>findByNameIsNull</td><td>where name is null</td></tr><tr><td>isNotNull,NotNull</td><td>findByNameNotNull</td><td>where name is not null</td></tr><tr><td>Like</td><td>findByNameLike</td><td>whre name like ?</td></tr><tr><td>NotLike</td><td>findByNameNotLike</td><td>where name not like ?</td></tr><tr><td>StartingWith</td><td>findByNameStartingWith</td><td>where name like ‘?%’</td></tr><tr><td>EndingWith</td><td>findByNameEndingWith</td><td>where name like ‘%?’</td></tr><tr><td>Containing</td><td>findByNameContaining</td><td>where name like ‘%?%’</td></tr><tr><td>OrderBy</td><td>findByIdOrderByXDesc</td><td>where id=? order by x desc</td></tr><tr><td>Not</td><td>findByNameNot</td><td>where name &lt;&gt; ?</td></tr><tr><td>In</td><td>findByIdIn(Collection&lt;?&gt; c)</td><td>where id in (?)</td></tr><tr><td>NotIn</td><td>findByIdNotIn(Collection&lt;?&gt; c)</td><td>where id not in (?)</td></tr><tr><td>True</td><td>findByAaaTue</td><td>where aaa = true</td></tr><tr><td>False</td><td>findByAaaFalse</td><td>where aaa = false</td></tr><tr><td>IgnoreCase</td><td>findByNameIgnoreCase</td><td>where UPPER(name)=UPPER(?)</td></tr></tbody></table><h4 id="编写接口-2"><a href="#编写接口-2" class="headerlink" title="编写接口"></a>编写接口</h4><p>  UsersDao.java</p><pre class=" language-java"><code class="language-java">  <span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span>  <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * Repository接口讲解   * @author Administrator   *   */</span>  <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">Repository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span> <span class="token punctuation">{</span>      List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">findByUsernameIs</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span><span class="token punctuation">;</span>      List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">findByUsernameLike</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span><span class="token punctuation">;</span>      List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">findByUsernameAndUserageGreaterThanEqual</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span>Integer age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span></code></pre><h4 id="编写测试类"><a href="#编写测试类" class="headerlink" title="编写测试类"></a>编写测试类</h4><p>  RepositoryTest.java</p><pre class=" language-java"><code class="language-java">  <span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span>  <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span>  <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span>  <span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * Repository接口测试   * @author Administrator   *   */</span>  <span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Autowired</span>      <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/**       * 需求：使用用户名作为查询条件       */</span>      <span class="token annotation punctuation">@Test</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">/**           * 判断相等的条件，有三种表示方式           * 1,什么都不写，默认的就是做相等判断           * 2,Is           * 3,Equal           */</span>          List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findByUsernameIs</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>              System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">/**       * 需求：根据用户姓名做Like处理       * Like:条件关键字       */</span>      <span class="token annotation punctuation">@Test</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findByUsernameLike</span><span class="token punctuation">(</span><span class="token string">"王%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>              System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">/**       * 需求：查询名称为王五，并且他的年龄大于等于22岁       */</span>      <span class="token annotation punctuation">@Test</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findByUsernameAndUserageGreaterThanEqual</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>              System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span></code></pre><h3 id="Query-注解的查询"><a href="#Query-注解的查询" class="headerlink" title="@Query 注解的查询"></a>@Query 注解的查询</h3><h4 id="JPQL语句查询"><a href="#JPQL语句查询" class="headerlink" title="JPQL语句查询"></a>JPQL语句查询</h4><p><code>JPQL：</code>通过 <code>Hibernate</code> 的<code>HQL</code>演变过来的。他和 <code>HQL</code>语法及其相似</p><h5 id="编写接口-3"><a href="#编写接口-3" class="headerlink" title="编写接口"></a>编写接口</h5><ul><li><code>@Query(value=&quot;from Users where username = ?&quot;)</code>—&gt;表：实体对象，字段：属性</li></ul><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Query<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Repository接口讲解 * @author Administrator * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">Repository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//使用@Query注解查询</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"from Users where username = ?"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">queryUserByNameUseJPQL</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span><span class="token string">"from Users where username like ?"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">queryUserByLikeNameUseJPQL</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span><span class="token string">"from Users where username = ? and userage >= ?"</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">queryUserByNameAndAge</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span>Integer age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="编写测试类-1"><a href="#编写测试类-1" class="headerlink" title="编写测试类"></a>编写测试类</h5><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Repository接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 测试@Query查询 JPQL     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">queryUserByNameUseJPQL</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试@Query查询 JPQL     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">queryUserByLikeNameUseJPQL</span><span class="token punctuation">(</span><span class="token string">"王%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试@Query查询 JPQL     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">queryUserByNameAndAge</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="SQL语句查询"><a href="#SQL语句查询" class="headerlink" title="SQL语句查询"></a>SQL语句查询</h4><ul><li>原生<code>SQL</code>书写方式，<code>nativeQuery=true</code>表示不转义<code>SQL</code></li></ul><h5 id="编写接口-4"><a href="#编写接口-4" class="headerlink" title="编写接口"></a>编写接口</h5><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Query<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Repository接口讲解 * @author Administrator * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">Repository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//使用@Query注解查询SQL</span>    <span class="token comment" spellcheck="true">//nativeQuery:默认的是false.表示不开启sql查询。是否对value中的语句做转义。</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"select * from t_users where username = ?"</span><span class="token punctuation">,</span>nativeQuery<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">queryUserByNameUseSQL</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"select * from t_users where username like ?"</span><span class="token punctuation">,</span>nativeQuery<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">queryUserByLikeNameUseSQL</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"select * from t_users where username = ? and userage >= ?"</span><span class="token punctuation">,</span>nativeQuery<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span>    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">queryUserByNameAndAgeUseSQL</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span>Integer age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="编写测试类-2"><a href="#编写测试类-2" class="headerlink" title="编写测试类"></a>编写测试类</h5><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Repository接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 测试@Query查询 SQL     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">queryUserByNameUseSQL</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试@Query查询 SQL     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">queryUserByLikeNameUseSQL</span><span class="token punctuation">(</span><span class="token string">"王%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 测试@Query查询 SQL     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test9</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">queryUserByNameAndAgeUseSQL</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="Query注解的更新"><a href="#Query注解的更新" class="headerlink" title="@Query注解的更新"></a>@Query注解的更新</h3><h4 id="编写接口-5"><a href="#编写接口-5" class="headerlink" title="编写接口"></a>编写接口</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Modifying<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Query<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Repository接口讲解 * @author Administrator * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">Repository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span><span class="token string">"update Users set userage = ? where userid = ?"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Modifying</span> <span class="token comment" spellcheck="true">//@Modifying当前语句是一个更新语句</span>    <span class="token keyword">void</span> <span class="token function">updateUserAgeById</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">,</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试类-3"><a href="#编写测试类-3" class="headerlink" title="编写测试类"></a>编写测试类</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Repository接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 测试@Query update     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test10</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">updateUserAgeById</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="CrudRepository接口"><a href="#CrudRepository接口" class="headerlink" title="CrudRepository接口"></a>CrudRepository接口</h2><h3 id="编写接口-6"><a href="#编写接口-6" class="headerlink" title="编写接口"></a>编写接口</h3><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * CrudRepository接口讲解 * @author Administrator * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">CrudRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="编写测试类-4"><a href="#编写测试类-4" class="headerlink" title="编写测试类"></a>编写测试类</h3><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * CrudRepository接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加单条数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"赵小丽"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 批量添加数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"赵小丽"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Users user1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user1<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user1<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"王小虎"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据ID查询单条数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 查询全部数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 删除数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 更新数据 方式一     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"王小红"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 更新数据 方式二     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token annotation punctuation">@Transactional</span>    <span class="token annotation punctuation">@Rollback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test7</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//持久化状态的</span>        user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"王小小"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="PagingAndSortingRepository接口"><a href="#PagingAndSortingRepository接口" class="headerlink" title="PagingAndSortingRepository接口"></a>PagingAndSortingRepository接口</h2><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><h4 id="编写接口-7"><a href="#编写接口-7" class="headerlink" title="编写接口"></a>编写接口</h4><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * PagingAndSortingRepository接口讲解 * @author Administrator * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">PagingAndSortingRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试代码-6"><a href="#编写测试代码-6" class="headerlink" title="编写测试代码"></a>编写测试代码</h4><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * PagingAndSortingRepository接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 分页     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> page <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//page:当前页的索引。注意索引都是从0开始的。</span>        <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// size:每页显示3条数据</span>        Pageable pageable<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageRequest</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>        Page<span class="token operator">&lt;</span>Users<span class="token operator">></span> p <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数据的总条数："</span><span class="token operator">+</span>p<span class="token punctuation">.</span><span class="token function">getTotalElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总页数："</span><span class="token operator">+</span>p<span class="token punctuation">.</span><span class="token function">getTotalPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h4 id="编写接口-8"><a href="#编写接口-8" class="headerlink" title="编写接口"></a>编写接口</h4><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * PagingAndSortingRepository接口讲解 * @author Administrator * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">PagingAndSortingRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试代码-7"><a href="#编写测试代码-7" class="headerlink" title="编写测试代码"></a>编写测试代码</h4><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * PagingAndSortingRepository接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 对单列做排序处理     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//Sort:该对象封装了排序规则以及指定的排序字段(对象的属性来表示)</span>        <span class="token comment" spellcheck="true">//direction:排序规则</span>        <span class="token comment" spellcheck="true">//properties:指定做排序的属性</span>        Sort sort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sort</span><span class="token punctuation">(</span>Direction<span class="token punctuation">.</span>DESC<span class="token punctuation">,</span><span class="token string">"userid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>sort<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 多列的排序处理     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//Sort:该对象封装了排序规则以及指定的排序字段(对象的属性来表示)</span>        <span class="token comment" spellcheck="true">//direction:排序规则</span>        <span class="token comment" spellcheck="true">//properties:指定做排序的属性</span>        Order order1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span>Direction<span class="token punctuation">.</span>DESC<span class="token punctuation">,</span><span class="token string">"userage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Order order2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span>Direction<span class="token punctuation">.</span>ASC<span class="token punctuation">,</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Sort sort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sort</span><span class="token punctuation">(</span>order1<span class="token punctuation">,</span>order2<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>sort<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="JpaRepository接口"><a href="#JpaRepository接口" class="headerlink" title="JpaRepository接口"></a>JpaRepository接口</h2><p><code>JpaRepository</code>接口是我们开发时使用的最多的接口。其特点是可以帮助我们将其他接口<br>的方法的返回值做适配处理。可以使得我们在开发时更方便的使用这些方法。</p><h3 id="编写接口-9"><a href="#编写接口-9" class="headerlink" title="编写接口"></a>编写接口</h3><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaRepository接口讲解 * @author Administrator * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="编写测试类-5"><a href="#编写测试类-5" class="headerlink" title="编写测试类"></a>编写测试类</h3><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaRepository接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 查询全部数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list  <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="JpaSpecificationExecutor接口"><a href="#JpaSpecificationExecutor接口" class="headerlink" title="JpaSpecificationExecutor接口"></a>JpaSpecificationExecutor接口</h2><p>完成多条件查询，并且支持分页与排序</p><h3 id="单条件查询"><a href="#单条件查询" class="headerlink" title="单条件查询"></a>单条件查询</h3><h4 id="编写接口-10"><a href="#编写接口-10" class="headerlink" title="编写接口"></a>编写接口</h4><ul><li><code>JpaSpecificationExecutor&lt;Users&gt;:</code>不能单独使用，需要配合着<code>jpa</code>中的其他接口一起使用</li></ul><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaSpecificationExecutor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口讲解 * @author Administrator *注意：JpaSpecificationExecutor&lt;Users>:不能单独使用，需要配合着jpa中的其他接口一起使用 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">,</span>JpaSpecificationExecutor<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试类-6"><a href="#编写测试类-6" class="headerlink" title="编写测试类"></a>编写测试类</h4><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaQuery<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Predicate<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Root<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Specification<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 需求：根据用户姓名查询数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Specification<span class="token operator">&lt;</span>Users<span class="token operator">></span> spec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Specification</span><span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/**             * @return Predicate:定义了查询条件             * @param Root&lt;Users> root:根对象。封装了查询条件的对象             * @param CriteriaQuery&lt;?> query:定义了一个基本的查询。一般不使用             * @param CriteriaBuilder cb:创建一个查询条件             */</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Predicate <span class="token function">toPredicate</span><span class="token punctuation">(</span>Root<span class="token operator">&lt;</span>Users<span class="token operator">></span> root<span class="token punctuation">,</span> CriteriaQuery<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> query<span class="token punctuation">,</span> CriteriaBuilder cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Predicate pre <span class="token operator">=</span> cb<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> pre<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>spec<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="多条件查询"><a href="#多条件查询" class="headerlink" title="多条件查询"></a>多条件查询</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><h5 id="编写接口-11"><a href="#编写接口-11" class="headerlink" title="编写接口"></a>编写接口</h5><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaSpecificationExecutor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口讲解 * @author Administrator *注意：JpaSpecificationExecutor&lt;Users>:不能单独使用，需要配合着jpa中的其他接口一起使用 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">,</span>JpaSpecificationExecutor<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h5 id="编写测试类-7"><a href="#编写测试类-7" class="headerlink" title="编写测试类"></a>编写测试类</h5><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaQuery<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Predicate<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Root<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Specification<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 多条件查询 方式一     * 需求：使用用户姓名以及年龄查询数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Specification<span class="token operator">&lt;</span>Users<span class="token operator">></span> spec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Specification</span><span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Predicate <span class="token function">toPredicate</span><span class="token punctuation">(</span>Root<span class="token operator">&lt;</span>Users<span class="token operator">></span> root<span class="token punctuation">,</span> CriteriaQuery<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> query<span class="token punctuation">,</span> CriteriaBuilder cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>                List<span class="token operator">&lt;</span>Predicate<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userage"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//此时条件之间是没有任何关系的。</span>                Predicate<span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token punctuation">[</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> cb<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>spec<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><h5 id="编写接口-12"><a href="#编写接口-12" class="headerlink" title="编写接口"></a>编写接口</h5><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaSpecificationExecutor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口讲解 * @author Administrator *注意：JpaSpecificationExecutor&lt;Users>:不能单独使用，需要配合着jpa中的其他接口一起使用 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">,</span>JpaSpecificationExecutor<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h5 id="编写测试类-8"><a href="#编写测试类-8" class="headerlink" title="编写测试类"></a>编写测试类</h5><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaQuery<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Predicate<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Root<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Specification<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 多条件查询 方式二     * 需求：使用用户姓名或者年龄查询数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Specification<span class="token operator">&lt;</span>Users<span class="token operator">></span> spec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Specification</span><span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Predicate <span class="token function">toPredicate</span><span class="token punctuation">(</span>Root<span class="token operator">&lt;</span>Users<span class="token operator">></span> root<span class="token punctuation">,</span> CriteriaQuery<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> query<span class="token punctuation">,</span> CriteriaBuilder cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> cb<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cb<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"userage"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>spec<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="分页-1"><a href="#分页-1" class="headerlink" title="分页"></a>分页</h3><h4 id="编写接口-13"><a href="#编写接口-13" class="headerlink" title="编写接口"></a>编写接口</h4><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaSpecificationExecutor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口讲解 * @author Administrator *注意：JpaSpecificationExecutor&lt;Users>:不能单独使用，需要配合着jpa中的其他接口一起使用 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">,</span>JpaSpecificationExecutor<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试类-9"><a href="#编写测试类-9" class="headerlink" title="编写测试类"></a>编写测试类</h4><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaQuery<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Predicate<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Root<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Specification<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 需求：查询王姓用户，并且做分页处理     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//条件</span>        Specification<span class="token operator">&lt;</span>Users<span class="token operator">></span> spec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Specification</span><span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Predicate <span class="token function">toPredicate</span><span class="token punctuation">(</span>Root<span class="token operator">&lt;</span>Users<span class="token operator">></span> root<span class="token punctuation">,</span> CriteriaQuery<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> query<span class="token punctuation">,</span> CriteriaBuilder cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"王%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//分页</span>        Pageable pageable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageRequest</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Page<span class="token operator">&lt;</span>Users<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>spec<span class="token punctuation">,</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总条数："</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getTotalElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总页数："</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getTotalPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="排序-1"><a href="#排序-1" class="headerlink" title="排序"></a>排序</h3><h4 id="编写接口-14"><a href="#编写接口-14" class="headerlink" title="编写接口"></a>编写接口</h4><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaSpecificationExecutor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口讲解 * @author Administrator *注意：JpaSpecificationExecutor&lt;Users>:不能单独使用，需要配合着jpa中的其他接口一起使用 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">,</span>JpaSpecificationExecutor<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试类-10"><a href="#编写测试类-10" class="headerlink" title="编写测试类"></a>编写测试类</h4><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaQuery<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Predicate<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Root<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Specification<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 需求：查询数据库中王姓的用户，并且根据用户id做倒序排序     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//条件</span>        Specification<span class="token operator">&lt;</span>Users<span class="token operator">></span> spec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Specification</span><span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Predicate <span class="token function">toPredicate</span><span class="token punctuation">(</span>Root<span class="token operator">&lt;</span>Users<span class="token operator">></span> root<span class="token punctuation">,</span> CriteriaQuery<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> query<span class="token punctuation">,</span> CriteriaBuilder cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"王%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//排序</span>        Sort sort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sort</span><span class="token punctuation">(</span>Direction<span class="token punctuation">.</span>DESC<span class="token punctuation">,</span><span class="token string">"userid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>spec<span class="token punctuation">,</span> sort<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="分页与排序"><a href="#分页与排序" class="headerlink" title="分页与排序"></a>分页与排序</h3><h4 id="编写接口-15"><a href="#编写接口-15" class="headerlink" title="编写接口"></a>编写接口</h4><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaSpecificationExecutor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口讲解 * @author Administrator *注意：JpaSpecificationExecutor&lt;Users>:不能单独使用，需要配合着jpa中的其他接口一起使用 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">,</span>JpaSpecificationExecutor<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试类-11"><a href="#编写测试类-11" class="headerlink" title="编写测试类"></a>编写测试类</h4><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaQuery<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Predicate<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Root<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Specification<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaSpecificationExecutor接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 需求：查询数据库中王姓的用户，做分页处理，并且根据用户id做倒序排序     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//排序等定义</span>        Sort sort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sort</span><span class="token punctuation">(</span>Direction<span class="token punctuation">.</span>DESC<span class="token punctuation">,</span><span class="token string">"userid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//分页的定义</span>        Pageable pageable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageRequest</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span> sort<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//查询条件</span>        Specification<span class="token operator">&lt;</span>Users<span class="token operator">></span> spec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Specification</span><span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Predicate <span class="token function">toPredicate</span><span class="token punctuation">(</span>Root<span class="token operator">&lt;</span>Users<span class="token operator">></span> root<span class="token punctuation">,</span> CriteriaQuery<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> query<span class="token punctuation">,</span> CriteriaBuilder cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"王%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        Page<span class="token operator">&lt;</span>Users<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>spec<span class="token punctuation">,</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总条数："</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getTotalElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总页数："</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getTotalPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Users users <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="自定义-Repository-接口"><a href="#自定义-Repository-接口" class="headerlink" title="自定义 Repository 接口"></a>自定义 Repository 接口</h2><h3 id="编写接口-16"><a href="#编写接口-16" class="headerlink" title="编写接口"></a>编写接口</h3><p>UsersRepository.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersRepository</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> Users <span class="token function">findUserById</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="使用接口"><a href="#使用接口" class="headerlink" title="使用接口"></a>使用接口</h3><p>UsersDao.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>JpaSpecificationExecutor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>CrudRepository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>PagingAndSortingRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 用户自定义Repository接口讲解 * @author Administrator */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersDao</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Users<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">,</span>JpaSpecificationExecutor<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">,</span>UsersRepository<span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="编写接口实现类"><a href="#编写接口实现类" class="headerlink" title="编写接口实现类"></a>编写接口实现类</h3><p>UsersDaoImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>EntityManager<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>PersistenceContext<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersDaoImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UsersRepository</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PersistenceContext</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"entityManagerFactory"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> EntityManager em<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Users <span class="token function">findUserById</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"MyRepository......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>em<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> userid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写测试类-12"><a href="#编写测试类-12" class="headerlink" title="编写测试类"></a>编写测试类</h3><p>RepositoryTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>CriteriaQuery<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Predicate<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span>Root<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Sort<span class="token punctuation">.</span>Order<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Specification<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>TestPropertySource<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * JpaRepository接口测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepositoryTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 需求：根据用户ID查询数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findUserById</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="多表操作"><a href="#多表操作" class="headerlink" title="多表操作"></a>多表操作</h2><h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3><p>需求：用户与角色的一对一的关联关系<br>用户：一方<br>角色：一方</p><h4 id="编写Users实体"><a href="#编写Users实体" class="headerlink" title="编写Users实体"></a>编写Users实体</h4><p>Users.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>CascadeType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>JoinColumn<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToOne<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//strategy=GenerationType.IDENTITY 自增长</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"userid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"username"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"userage"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userage<span class="token punctuation">;</span>    <span class="token keyword">public</span> Roles <span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> roles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRoles</span><span class="token punctuation">(</span>Roles roles<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>roles <span class="token operator">=</span> roles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@OneToOne</span><span class="token punctuation">(</span>cascade<span class="token operator">=</span>CascadeType<span class="token punctuation">.</span>PERSIST<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//@JoinColumn：就是维护一个外键</span>    <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"roles_id"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Roles roles<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getUserid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserid</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userid <span class="token operator">=</span> userid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getUserage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserage</span><span class="token punctuation">(</span>Integer userage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userage <span class="token operator">=</span> userage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [userid="</span> <span class="token operator">+</span> userid <span class="token operator">+</span> <span class="token string">", username="</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">", userage="</span> <span class="token operator">+</span> userage <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写Roles实体"><a href="#编写Roles实体" class="headerlink" title="编写Roles实体"></a>编写Roles实体</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToOne<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_roles"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Roles</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"roleid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer roleid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"rolename"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String rolename<span class="token punctuation">;</span>    <span class="token annotation punctuation">@OneToOne</span><span class="token punctuation">(</span>mappedBy<span class="token operator">=</span><span class="token string">"roles"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Users users<span class="token punctuation">;</span>    <span class="token keyword">public</span> Users <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> users<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>users <span class="token operator">=</span> users<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getRoleid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> roleid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRoleid</span><span class="token punctuation">(</span>Integer roleid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>roleid <span class="token operator">=</span> roleid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getRolename</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> rolename<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRolename</span><span class="token punctuation">(</span>String rolename<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>rolename <span class="token operator">=</span> rolename<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Roles [roleid="</span> <span class="token operator">+</span> roleid <span class="token operator">+</span> <span class="token string">", rolename="</span> <span class="token operator">+</span> rolename <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试类-13"><a href="#编写测试类-13" class="headerlink" title="编写测试类"></a>编写测试类</h4><p>OneToOneTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Roles<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 一对一关联关系测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OneToOneTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加用户同时添加角色     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建角色</span>        Roles roles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        roles<span class="token punctuation">.</span><span class="token function">setRolename</span><span class="token punctuation">(</span><span class="token string">"管理员"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建用户</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"赵小刚"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//建立关系</span>        users<span class="token punctuation">.</span><span class="token function">setRoles</span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>        roles<span class="token punctuation">.</span><span class="token function">setUsers</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//保存数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据用户ID查询用户，同时查询用户角色     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户信息："</span><span class="token operator">+</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        Roles roles <span class="token operator">=</span> users<span class="token punctuation">.</span><span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><p>需求：从角色到用户的一对多的关联关系<br>角色：一方<br>用户：多方</p><h4 id="编写Users实体-1"><a href="#编写Users实体-1" class="headerlink" title="编写Users实体"></a>编写Users实体</h4><p>Users.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>CascadeType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>JoinColumn<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>ManyToOne<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToOne<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//strategy=GenerationType.IDENTITY 自增长</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"userid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"username"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"userage"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer userage<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ManyToOne</span><span class="token punctuation">(</span>cascade<span class="token operator">=</span>CascadeType<span class="token punctuation">.</span>PERSIST<span class="token punctuation">)</span>    <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"roles_id"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Roles roles<span class="token punctuation">;</span>    <span class="token keyword">public</span> Roles <span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> roles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRoles</span><span class="token punctuation">(</span>Roles roles<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>roles <span class="token operator">=</span> roles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getUserid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserid</span><span class="token punctuation">(</span>Integer userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userid <span class="token operator">=</span> userid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getUserage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserage</span><span class="token punctuation">(</span>Integer userage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userage <span class="token operator">=</span> userage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [userid="</span> <span class="token operator">+</span> userid <span class="token operator">+</span> <span class="token string">", username="</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">", userage="</span> <span class="token operator">+</span> userage <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写Roles实体-1"><a href="#编写Roles实体-1" class="headerlink" title="编写Roles实体"></a>编写Roles实体</h4><p>Roles.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashSet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToMany<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToOne<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_roles"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Roles</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"roleid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer roleid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"rolename"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String rolename<span class="token punctuation">;</span>    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy<span class="token operator">=</span><span class="token string">"roles"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Set<span class="token operator">&lt;</span>Users<span class="token operator">></span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> Set<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> users<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsers</span><span class="token punctuation">(</span>Set<span class="token operator">&lt;</span>Users<span class="token operator">></span> users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>users <span class="token operator">=</span> users<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getRoleid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> roleid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRoleid</span><span class="token punctuation">(</span>Integer roleid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>roleid <span class="token operator">=</span> roleid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getRolename</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> rolename<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRolename</span><span class="token punctuation">(</span>String rolename<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>rolename <span class="token operator">=</span> rolename<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Roles [roleid="</span> <span class="token operator">+</span> roleid <span class="token operator">+</span> <span class="token string">", rolename="</span> <span class="token operator">+</span> rolename <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试类-14"><a href="#编写测试类-14" class="headerlink" title="编写测试类"></a>编写测试类</h4><p>OneToManyTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Roles<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 一对多的关联关系测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OneToManyTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersDao usersDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加用户同时添加角色     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建角色</span>        Roles roles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        roles<span class="token punctuation">.</span><span class="token function">setRolename</span><span class="token punctuation">(</span><span class="token string">"管理员"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建用户</span>        Users users <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUserage</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"小王"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//建立关系</span>        roles<span class="token punctuation">.</span><span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setRoles</span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//保存数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 根据用户ID查询用户信息，同时查询角色     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersDao<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户姓名："</span><span class="token operator">+</span>users<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Roles roles <span class="token operator">=</span> users<span class="token punctuation">.</span><span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3><p>双向的一对多</p><p>需求：一个角色可以拥有多个菜单，一个菜单可以分配多个角色。多对多的关联关系<br>角色：多方<br>菜单：多方</p><h4 id="编写Roles实体-2"><a href="#编写Roles实体-2" class="headerlink" title="编写Roles实体"></a>编写Roles实体</h4><p>Roles.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashSet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>JoinColumn<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>JoinTable<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>ManyToMany<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToMany<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>OneToOne<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_roles"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Roles</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"roleid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer roleid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"rolename"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String rolename<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ManyToMany</span>    <span class="token comment" spellcheck="true">//@JoinTable:配置中间表信息</span>    <span class="token comment" spellcheck="true">//joinColumns:建立当前表在中间表中的外键字段</span>    <span class="token annotation punctuation">@JoinTable</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_roles_menus"</span><span class="token punctuation">,</span>joinColumns<span class="token operator">=</span><span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"role_id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>inverseJoinColumns<span class="token operator">=</span><span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"menu_id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Set<span class="token operator">&lt;</span>Menus<span class="token operator">></span> menus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> Set<span class="token operator">&lt;</span>Menus<span class="token operator">></span> <span class="token function">getMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> menus<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMenus</span><span class="token punctuation">(</span>Set<span class="token operator">&lt;</span>Menus<span class="token operator">></span> menus<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>menus <span class="token operator">=</span> menus<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getRoleid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> roleid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRoleid</span><span class="token punctuation">(</span>Integer roleid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>roleid <span class="token operator">=</span> roleid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getRolename</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> rolename<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRolename</span><span class="token punctuation">(</span>String rolename<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>rolename <span class="token operator">=</span> rolename<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Roles [roleid="</span> <span class="token operator">+</span> roleid <span class="token operator">+</span> <span class="token string">", rolename="</span> <span class="token operator">+</span> rolename <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写Menus实体"><a href="#编写Menus实体" class="headerlink" title="编写Menus实体"></a>编写Menus实体</h4><p>Menus.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashSet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>ManyToMany<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_menus"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Menus</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"menusid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer menusid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"menusname"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String menusname<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"menusurl"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String menusurl<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"fatherid"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer fatherid<span class="token punctuation">;</span>    <span class="token annotation punctuation">@ManyToMany</span><span class="token punctuation">(</span>mappedBy<span class="token operator">=</span><span class="token string">"menus"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Set<span class="token operator">&lt;</span>Roles<span class="token operator">></span> roles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> Set<span class="token operator">&lt;</span>Roles<span class="token operator">></span> <span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> roles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRoles</span><span class="token punctuation">(</span>Set<span class="token operator">&lt;</span>Roles<span class="token operator">></span> roles<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>roles <span class="token operator">=</span> roles<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getMenusid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> menusid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMenusid</span><span class="token punctuation">(</span>Integer menusid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>menusid <span class="token operator">=</span> menusid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMenusname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> menusname<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMenusname</span><span class="token punctuation">(</span>String menusname<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>menusname <span class="token operator">=</span> menusname<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMenusurl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> menusurl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMenusurl</span><span class="token punctuation">(</span>String menusurl<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>menusurl <span class="token operator">=</span> menusurl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getFatherid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> fatherid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFatherid</span><span class="token punctuation">(</span>Integer fatherid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fatherid <span class="token operator">=</span> fatherid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Menus [menusid="</span> <span class="token operator">+</span> menusid <span class="token operator">+</span> <span class="token string">", menusname="</span> <span class="token operator">+</span> menusname <span class="token operator">+</span> <span class="token string">", menusurl="</span> <span class="token operator">+</span> menusurl <span class="token operator">+</span> <span class="token string">", fatherid="</span>                <span class="token operator">+</span> fatherid <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写测试类-15"><a href="#编写测试类-15" class="headerlink" title="编写测试类"></a>编写测试类</h4><p>ManyToManyTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>RolesDao<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Menus<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Roles<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 多对多关联关系测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ManyToManyTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RolesDao rolesDao<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加角色同时添加菜单     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建角色对象</span>        Roles roles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        roles<span class="token punctuation">.</span><span class="token function">setRolename</span><span class="token punctuation">(</span><span class="token string">"超级管理员"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建菜单对象    XXX管理平台 --->用户管理</span>        Menus menus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        menus<span class="token punctuation">.</span><span class="token function">setMenusname</span><span class="token punctuation">(</span><span class="token string">"XXX管理平台"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        menus<span class="token punctuation">.</span><span class="token function">setFatherid</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        menus<span class="token punctuation">.</span><span class="token function">setMenusurl</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//用户管理菜单</span>        Menus menus1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        menus1<span class="token punctuation">.</span><span class="token function">setMenusname</span><span class="token punctuation">(</span><span class="token string">"用户管理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        menus1<span class="token punctuation">.</span><span class="token function">setFatherid</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        menus1<span class="token punctuation">.</span><span class="token function">setMenusurl</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//建立关系</span>        roles<span class="token punctuation">.</span><span class="token function">getMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>menus<span class="token punctuation">)</span><span class="token punctuation">;</span>        roles<span class="token punctuation">.</span><span class="token function">getMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>menus1<span class="token punctuation">)</span><span class="token punctuation">;</span>        menus<span class="token punctuation">.</span><span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>        menus1<span class="token punctuation">.</span><span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//保存数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>rolesDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 查询Roles     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Roles roles <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rolesDao<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"角色信息："</span><span class="token operator">+</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>        Set<span class="token operator">&lt;</span>Menus<span class="token operator">></span> menus <span class="token operator">=</span> roles<span class="token punctuation">.</span><span class="token function">getMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Menus menus2 <span class="token operator">:</span> menus<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"菜单信息："</span><span class="token operator">+</span>menus2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="Spring-Data-Redis-1"><a href="#Spring-Data-Redis-1" class="headerlink" title="Spring Data Redis"></a>Spring Data Redis</h1><p><a href="https://spring.io/projects/spring-data-redis#overview" target="_blank" rel="noopener">Spring Data Redis</a></p><p>Spring Data Redis, part of the larger Spring Data family, provides easy configuration and access to Redis from Spring applications. It offers both low-level and high-level abstractions for interacting with the store, freeing the user from infrastructural concerns.</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>Redis 版本：3.0.0<br>环境：Linux</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="安装-gcc-编译器"><a href="#安装-gcc-编译器" class="headerlink" title="安装 gcc 编译器"></a>安装 gcc 编译器</h4><pre><code>yum install gcc-c++</code></pre><h4 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h4><pre><code>tar -zxf redis-3.0.0.tar.gz</code></pre><h4 id="进入解压目录进行编译"><a href="#进入解压目录进行编译" class="headerlink" title="进入解压目录进行编译"></a>进入解压目录进行编译</h4><pre><code>cd redis-3.0.0make</code></pre><h4 id="将-Redis-安装到指定目录"><a href="#将-Redis-安装到指定目录" class="headerlink" title="将 Redis  安装到指定目录"></a>将 Redis  安装到指定目录</h4><pre><code>make PREFIX=/usr/local/redis install</code></pre><h4 id="启动-Redis"><a href="#启动-Redis" class="headerlink" title="启动 Redis"></a>启动 Redis</h4><ul><li><p>前置启动</p><pre><code>默认的是前置启动：./redis-server</code></pre></li><li><p>后置启动</p><ul><li>先将 redis.conf 文件拷贝到 redis 的安装目录<code>cp redis.conf /usr/local/redis/bin</code></li><li>编辑 redis.conf 文件修改：<code>daemonize yes</code></li><li>启动：<code>./redis-server redis.conf</code></li><li>查看 redis 进程：<code>ps aux|grep redis</code></li><li>关闭后置启动的 Redis：<code>./redis-cli shutdown</code></li></ul></li></ul><h2 id="搭建整合环境"><a href="#搭建整合环境" class="headerlink" title="搭建整合环境"></a>搭建整合环境</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><h4 id="导入jar包-3"><a href="#导入jar包-3" class="headerlink" title="导入jar包"></a>导入jar包</h4><h5 id="spring-ioc-1"><a href="#spring-ioc-1" class="headerlink" title="spring-ioc"></a>spring-ioc</h5><p>spring-beans-4.2.0.RELEASE.jar</p><p>spring-context-4.2.0.RELEASE.jar</p><p>spring-core-4.2.0.RELEASE.jar</p><p>spring-expression-4.2.0.RELEASE.jar</p><h5 id="spring-aop-1"><a href="#spring-aop-1" class="headerlink" title="spring-aop"></a>spring-aop</h5><p>aopalliance.jar</p><p>aspectjrt.jar</p><p>aspectjweaver.jar</p><p>spring-aop-4.2.0.RELEASE.jar</p><p>spring-aspects-4.2.0.RELEASE.jar</p><h5 id="spring-jdbc-1"><a href="#spring-jdbc-1" class="headerlink" title="spring-jdbc"></a>spring-jdbc</h5><p>spring-jdbc-4.2.0.RELEASE.jar(这里没有用到)</p><p>spring-tx-4.2.0.RELEASE.jar</p><h5 id="spring-orm-1"><a href="#spring-orm-1" class="headerlink" title="spring-orm"></a>spring-orm</h5><p>这里不需要用到</p><h5 id="spring-test-1"><a href="#spring-test-1" class="headerlink" title="spring test"></a>spring test</h5><p>spring-tx-4.2.0.RELEASE.jar</p><h5 id="apache-logging-1"><a href="#apache-logging-1" class="headerlink" title="apache-logging"></a>apache-logging</h5><p>commons-logging-1.1.1.jar</p><h5 id="spring-data-redis"><a href="#spring-data-redis" class="headerlink" title="spring-data-redis"></a>spring-data-redis</h5><p>commons-pool2-2.3.jar</p><p>jedis-2.7.2.jar</p><p>spring-data-redis-1.6.0.RELEASE.jar</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1561200447067.png" alt="1561200447067"></p><h4 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h4><ul><li>配置读取properties文件的工具类</li><li>Jedis连接池</li><li>Jedis连接工厂:创建Jedis对象的工厂</li><li>Redis模板对象:是SpringDataRedis提供的用户操作Redis的对象</li></ul><p>applicationContext.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>     <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans.xsd    http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置读取properties文件的工具类 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:redis.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Jedis连接池 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>poolConfig<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>redis.clients.jedis.JedisPoolConfig<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maxTotal<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${redis.pool.maxtTotal}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maxIdle<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${redis.pool.maxtIdle}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>minIdle<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${redis.pool.minIdle}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Jedis连接工厂:创建Jedis对象的工厂 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jedisConnectionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.data.redis.connection.jedis.JedisConnectionFactory<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- IP地址 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hostName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${redis.hostname}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 端口 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>port<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${redis.port}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 连接池 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>poolConfig<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>poolConfig<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Redis模板对象:是SpringDataRedis提供的用户操作Redis的对象 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>redisTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.data.redis.core.RedisTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 默认的序列化器：序列化器就是根据规则将存储的数据中的key与value做字符串的序列化处理 --></span>    <span class="token comment" spellcheck="true">&lt;!-- keySerializer、valueSerializer：对应的是Redis中的String类型 --></span>    <span class="token comment" spellcheck="true">&lt;!-- hashKeySerializer、hashValueSerializer：对应的是Redis中的Hash类型 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keySerializer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.data.redis.serializer.StringRedisSerializer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>valueSerializer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.data.redis.serializer.StringRedisSerializer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><p>redis.properties</p><pre><code>redis.pool.maxtTotal=20redis.pool.maxIdle=10redis.pool.minIdle=5redis.hostname=192.168.70.129redis.port=6379</code></pre><h3 id="编写测试类-16"><a href="#编写测试类-16" class="headerlink" title="编写测试类"></a>编写测试类</h3><p>RedisTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Redis测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加键值对     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取redis中的数据     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        String str <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="存储实体对象"><a href="#存储实体对象" class="headerlink" title="存储实体对象"></a>存储实体对象</h2><h3 id="编写实体类-2"><a href="#编写实体类-2" class="headerlink" title="编写实体类"></a>编写实体类</h3><p>要实现序列化接口<code>Serializable</code></p><p>Users.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [id="</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写测试类-17"><a href="#编写测试类-17" class="headerlink" title="编写测试类"></a>编写测试类</h3><p>默认序列化<code>StringRedisSerializer</code>在配置文件<code>applicationContext.xml</code>中指定，测试的时候可以更换序列化器</p><p>RedisTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>JdkSerializationRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Redis测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加Users     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//更换序列化器</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JdkSerializationRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取Users     *      */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//更换序列化器</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JdkSerializationRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Users users <span class="token operator">=</span> <span class="token punctuation">(</span>Users<span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="以-JSON格式存储对象"><a href="#以-JSON格式存储对象" class="headerlink" title="以 JSON格式存储对象"></a>以 JSON格式存储对象</h2><h3 id="导入jar包-4"><a href="#导入jar包-4" class="headerlink" title="导入jar包"></a>导入jar包</h3><p>jackson-annotations-2.8.0.jar</p><p>jackson-core-2.8.10.jar</p><p>jackson-databind-2.8.10.jar</p><h3 id="编写实体类-3"><a href="#编写实体类-3" class="headerlink" title="编写实体类"></a>编写实体类</h3><p>实现序列化接口</p><p>Users.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [id="</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写测试类-18"><a href="#编写测试类-18" class="headerlink" title="编写测试类"></a>编写测试类</h3><p>设置<code>json</code>序列化器<code>this.redisTemplate.setValueSerializer(new Jackson2JsonRedisSerializer&lt;&gt;(Users.class));</code></p><p>RedisTest.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>GenericJackson2JsonRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>Jackson2JsonRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>JdkSerializationRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ContextConfiguration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Redis测试 * @author Administrator * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加Users JSON格式     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"usersjson"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取Uesrs JSON格式     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Users users <span class="token operator">=</span> <span class="token punctuation">(</span>Users<span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"usersjson"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springdata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dubbo</title>
      <link href="/2019/06/13/dubbo/"/>
      <url>/2019/06/13/dubbo/</url>
      
        <content type="html"><![CDATA[<h1 id="dubbo环境搭建"><a href="#dubbo环境搭建" class="headerlink" title="dubbo环境搭建"></a>dubbo环境搭建</h1><h2 id="安装zookeeper"><a href="#安装zookeeper" class="headerlink" title="安装zookeeper"></a>安装zookeeper</h2><h3 id="下载zookeeper"><a href="#下载zookeeper" class="headerlink" title="下载zookeeper"></a>下载zookeeper</h3><p><a href="https://archive.apache.org/dist/zookeeper/zookeeper-3.4.13/" target="_blank" rel="noopener">Index of /dist/zookeeper/zookeeper-3.4.13</a></p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560396996149.png" alt="1560396996149"></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>进入<code>C:\Users\shenlibing\Downloads\zookeeper-3.4.13\conf</code>将<code>conf</code>下的<code>zoo_sample.cfg</code>复制一份改名为<code>zoo.cfg</code>即可</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560406178201.png" alt="1560406178201"></p><ul><li><p><code>dataDir</code> 临时数据存储的目录（可写相对路径）</p></li><li><p><code>clientPort=2181</code>   <code>zookeeper</code>的端口号</p></li></ul><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560396968926.png" alt="1560396968926"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560406513211.png" alt="1560406513211"></p><h4 id="开启服务端"><a href="#开启服务端" class="headerlink" title="开启服务端"></a>开启服务端</h4><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560397123787.png" alt="1560397123787"></p><h4 id="开启客户端"><a href="#开启客户端" class="headerlink" title="开启客户端"></a>开启客户端</h4><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560406459868.png" alt="1560406459868"></p><h2 id="安装dubbo-admin管理控制台"><a href="#安装dubbo-admin管理控制台" class="headerlink" title="安装dubbo-admin管理控制台"></a>安装dubbo-admin管理控制台</h2><p><code>dubbo</code>本身并不是一个服务软件。它其实就是一个<code>jar</code>包能够帮你的<code>java</code>程序连接到<code>zookeeper</code>，并利用<code>zookeeper</code>消费、提供服务。</p><p>但是为了让用户更好的管理监控众多的<code>dubbo</code>服务，官方提供了一个可视化的监控程序，不过这个监控即使不装也不影响使用。</p><h3 id="下载dubbo-admin"><a href="#下载dubbo-admin" class="headerlink" title="下载dubbo-admin"></a>下载dubbo-admin</h3><p><a href="https://github.com/apache/dubbo-admin/tree/master" target="_blank" rel="noopener">apache/dubbo-admin at master</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560406775445.png" alt="1560406775445"></p><h3 id="解压-1"><a href="#解压-1" class="headerlink" title="解压"></a>解压</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560407418522.png" alt="1560407418522"></p><h3 id="修改dubbo-admin配置"><a href="#修改dubbo-admin配置" class="headerlink" title="修改dubbo-admin配置"></a>修改dubbo-admin配置</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560407528940.png" alt="1560407528940"></p><p>指定<code>zookeeper</code>地址</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560407565437.png" alt="1560407565437"></p><h3 id="打包dubbo-admin"><a href="#打包dubbo-admin" class="headerlink" title="打包dubbo-admin"></a>打包dubbo-admin</h3><pre><code>mvn clean package -Dmaven.test.skip=true </code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560407882961.png" alt="1560407882961"></p><h3 id="运行dubbo-admin"><a href="#运行dubbo-admin" class="headerlink" title="运行dubbo-admin"></a>运行dubbo-admin</h3><pre><code>java -jar dubbo-admin-0.0.1-SNAPSHOT.jar</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560407980878.png" alt="1560407980878"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560408182379.png" alt="1560408182379"></p><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p><a href="http://localhost:7001，默认使用`root/root" target="_blank" rel="noopener">http://localhost:7001，默认使用`root/root</a> `登陆</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560408254046.png" alt="1560408254046"></p><h2 id="dubbo-helloworld"><a href="#dubbo-helloworld" class="headerlink" title="dubbo-helloworld"></a>dubbo-helloworld</h2><h3 id="创建订单服务web模块"><a href="#创建订单服务web模块" class="headerlink" title="创建订单服务web模块"></a>创建订单服务web模块</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560412993991.png" alt="1560412993991"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560413153432.png" alt="1560413153432"></p><h3 id="用户服务service模块"><a href="#用户服务service模块" class="headerlink" title="用户服务service模块"></a>用户服务service模块</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560412993991.png" alt="1560412993991"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560413103016.png" alt="1560413103016"></p><h3 id="分包"><a href="#分包" class="headerlink" title="分包"></a>分包</h3><h4 id="版本一"><a href="#版本一" class="headerlink" title="版本一"></a>版本一</h4><ul><li>order-service-consumer订单消费层</li><li>user-service-provider用户服务提供层</li></ul><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560413314279.png" alt="1560413314279"></p><h4 id="版本二"><a href="#版本二" class="headerlink" title="版本二"></a>版本二</h4><p>将公共的地址实体、订单接口、用户接口提取到公共接口层，新建一个公共接口层</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560413460737.png" alt="1560413460737"></p><ul><li>gmall-interface公共接口层</li><li>order-service-consumer订单消费层</li><li>user-service-provider用户服务提供层</li></ul><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560413803648.png" alt="1560413803648"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="公共接口层代码"><a href="#公共接口层代码" class="headerlink" title="公共接口层代码"></a>公共接口层代码</h4><p>UserAddress.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>bean<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 用户地址 * @author lfy * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAddress</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String userAddress<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//用户地址</span>    <span class="token keyword">private</span> String userId<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//用户id</span>    <span class="token keyword">private</span> String consignee<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//收货人</span>    <span class="token keyword">private</span> String phoneNum<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//电话号码</span>    <span class="token keyword">private</span> String isDefault<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否为默认地址    Y-是     N-否</span>    <span class="token keyword">public</span> <span class="token function">UserAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated constructor stub</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">UserAddress</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">,</span> String userAddress<span class="token punctuation">,</span> String userId<span class="token punctuation">,</span> String consignee<span class="token punctuation">,</span> String phoneNum<span class="token punctuation">,</span>            String isDefault<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userAddress <span class="token operator">=</span> userAddress<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userId <span class="token operator">=</span> userId<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>consignee <span class="token operator">=</span> consignee<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>phoneNum <span class="token operator">=</span> phoneNum<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isDefault <span class="token operator">=</span> isDefault<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUserAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userAddress<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserAddress</span><span class="token punctuation">(</span>String userAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userAddress <span class="token operator">=</span> userAddress<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserId</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userId <span class="token operator">=</span> userId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getConsignee</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> consignee<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setConsignee</span><span class="token punctuation">(</span>String consignee<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>consignee <span class="token operator">=</span> consignee<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getPhoneNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> phoneNum<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPhoneNum</span><span class="token punctuation">(</span>String phoneNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>phoneNum <span class="token operator">=</span> phoneNum<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getIsDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> isDefault<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setIsDefault</span><span class="token punctuation">(</span>String isDefault<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isDefault <span class="token operator">=</span> isDefault<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>OrderService.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>UserAddress<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 初始化订单     * @param userId     */</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>UserAddress<span class="token operator">></span> <span class="token function">initOrder</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>UserService.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>UserAddress<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 用户服务 * @author lfy * */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 按照用户id返回所有的收货地址     * @param userId     * @return     */</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>UserAddress<span class="token operator">></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="订单消费层代码"><a href="#订单消费层代码" class="headerlink" title="订单消费层代码"></a>订单消费层代码</h4><p>OrderServiceImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>UserAddress<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>OrderService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UserService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 1、将服务提供者注册到注册中心（暴露服务） *         1）、导入dubbo依赖（2.6.2）\操作zookeeper的客户端(curator) *         2）、配置服务提供者 *  * 2、让服务消费者去注册中心订阅服务提供者的服务地址 * @author lfy * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>    UserService userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>UserAddress<span class="token operator">></span> <span class="token function">initOrder</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户id："</span><span class="token operator">+</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//1、查询用户的收货地址</span>        List<span class="token operator">&lt;</span>UserAddress<span class="token operator">></span> addressList <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getUserAddressList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>UserAddress userAddress <span class="token operator">:</span> addressList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userAddress<span class="token punctuation">.</span><span class="token function">getUserAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> addressList<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="用户服务提供层代码"><a href="#用户服务提供层代码" class="headerlink" title="用户服务提供层代码"></a>用户服务提供层代码</h4><p>UserServiceImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>UserAddress<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UserService<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>UserAddress<span class="token operator">></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        UserAddress address1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"北京市昌平区宏福科技园综合楼3层"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"李老师"</span><span class="token punctuation">,</span> <span class="token string">"010-56253825"</span><span class="token punctuation">,</span> <span class="token string">"Y"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        UserAddress address2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"深圳市宝安区西部硅谷大厦B座3层（深圳分校）"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"王老师"</span><span class="token punctuation">,</span> <span class="token string">"010-56253825"</span><span class="token punctuation">,</span> <span class="token string">"N"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>address1<span class="token punctuation">,</span>address2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="依赖配置"><a href="#依赖配置" class="headerlink" title="依赖配置"></a>依赖配置</h3><p>订单消费层需要引用公共接口层</p><p>pom.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.gmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>order-service-consumer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.gmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gmall-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><p>用户服务提供层需要引用公共接口层</p><p>pom.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.gmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>user-service-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.gmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gmall-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><h3 id="dubbo通信"><a href="#dubbo通信" class="headerlink" title="dubbo通信"></a>dubbo通信</h3><p>为了让订单消费层和用户服务提供层可以通信，使用dubbo进行配置</p><h4 id="用户服务提供层"><a href="#用户服务提供层" class="headerlink" title="用户服务提供层"></a>用户服务提供层</h4><h5 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h5><ul><li>导入<code>dubbo</code>依赖（2.6.2）</li><li>操作<code>zookeeper</code>的客户端<code>(curator)</code>依赖</li></ul><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.gmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>user-service-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.gmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gmall-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入dubbo --></span>    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/dubbo --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 注册中心使用的是zookeeper，引入操作zookeeper的客户端端 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><h5 id="配置服务提供者"><a href="#配置服务提供者" class="headerlink" title="配置服务提供者"></a>配置服务提供者</h5><p>新建<code>provider.xml</code>文件</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560416196643.png" alt="1560416196643"></p><ul><li>指定当前服务/应用的名字</li><li>指定注册中心的位置</li><li>指定通信规则（通信协议？通信端口）</li><li>暴露服务</li></ul><p>provider.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>dubbo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://code.alibabatech.com/schema/dubbo<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 1、指定当前服务/应用的名字（同样的服务名字相同，不要和别的服务同名） --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user-service-provider<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 2、指定注册中心的位置 --></span>    <span class="token comment" spellcheck="true">&lt;!-- &lt;dubbo:registry address="zookeeper://127.0.0.1:2181">&lt;/dubbo:registry> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zookeeper<span class="token punctuation">"</span></span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>127.0.0.1:2181<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>registry</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 3、指定通信规则（通信协议？通信端口） --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>protocol</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dubbo<span class="token punctuation">"</span></span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20882<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>protocol</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 4、暴露服务   ref：指向服务的真正的实现对象 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.gmall.service.UserService<span class="token punctuation">"</span></span>         <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userServiceImpl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>service</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 服务的实现 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userServiceImpl<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.gmall.service.impl.UserServiceImpl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h5 id="测试服务提供者"><a href="#测试服务提供者" class="headerlink" title="测试服务提供者"></a>测试服务提供者</h5><p>新建<code>MainApplication.java</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560416741955.png" alt="1560416741955"></p><p>MainApplication.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>ApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        ClassPathXmlApplicationContext ioc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"provider.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ioc<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在<code>dubbo</code>控制台进行查看,可以看到有一个服务提供者</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560416905173.png" alt="1560416905173"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560416842863.png" alt="1560416842863"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560416860686.png" alt="1560416860686"></p><h4 id="订单消费层"><a href="#订单消费层" class="headerlink" title="订单消费层"></a>订单消费层</h4><h5 id="导入依赖-1"><a href="#导入依赖-1" class="headerlink" title="导入依赖"></a>导入依赖</h5><p>pom.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.gmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>order-service-consumer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.atguigu.gmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gmall-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 引入dubbo --></span>        <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/dubbo --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 注册中心使用的是zookeeper，引入操作zookeeper的客户端端 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></code></pre><h5 id="配置订单消费者"><a href="#配置订单消费者" class="headerlink" title="配置订单消费者"></a>配置订单消费者</h5><p>新建consumer.xml文件</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560417509618.png" alt="1560417509618"></p><p>consumer.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>dubbo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://dubbo.apache.org/schema/dubbo<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd        http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.gmall.service.impl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>order-service-consumer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zookeeper://127.0.0.1:2181<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>registry</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--声明需要调用的远程服务的接口；生成远程服务代理  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.gmall.service.UserService<span class="token punctuation">"</span></span>         <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userService<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h5 id="测试订单消费者"><a href="#测试订单消费者" class="headerlink" title="测试订单消费者"></a>测试订单消费者</h5><p>新建MainApplication.java</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560417802317.png" alt="1560417802317"></p><p>MainApplication.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ClassPathXmlApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>gmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>OrderService<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainApplication</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"resource"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        ClassPathXmlApplicationContext applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"consumer.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        OrderService orderService <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>OrderService<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        orderService<span class="token punctuation">.</span><span class="token function">initOrder</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"调用完成...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>运行MainApplication.java</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560417933975.png" alt="1560417933975"></p><p>扫描订单消费层</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560494281945.png" alt="1560494281945"></p><p>修改订单消费代码，将消费实现加入到容器，并把<code>UserService</code>注入进来</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560418003061.png" alt="1560418003061"></p><p>查看dubbo控制台，服务数：1，应用数：2，提供者数：1，消费者数：1</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560418137215.png" alt="1560418137215"></p><h2 id="安装dubbo-monitor-simple"><a href="#安装dubbo-monitor-simple" class="headerlink" title="安装dubbo-monitor-simple"></a>安装dubbo-monitor-simple</h2><p>简单的监控中心</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://github.com/apache/dubbo-admin/tree/master" target="_blank" rel="noopener">apache/dubbo-admin at master</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560495820794.png" alt="1560495820794"></p><h3 id="解压-2"><a href="#解压-2" class="headerlink" title="解压"></a>解压</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560495743361.png" alt="1560495743361"></p><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>进入<code>C:\Users\shenlibing\Downloads\dubbo-admin-master\dubbo-monitor-simple\src\main\resources\conf</code>目录，编辑<code>dubbo.properties</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560496227527.png" alt="1560496227527"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560496200232.png" alt="1560496200232"></p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><pre><code>mvn clean package -Dmaven.test.skip=true</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560496299065.png" alt="1560496299065"></p><h3 id="解压-3"><a href="#解压-3" class="headerlink" title="解压"></a>解压</h3><p>解压<code>dubbo-monitor-simple-2.0.0-assembly.tar.gz</code>—&gt;<code>dubbo-monitor-simple-2.0.0-assembly.tar</code>—&gt;<code>dubbo-monitor-simple-2.0.0</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560496424160.png" alt="1560496424160"></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560496611658.png" alt="1560496611658"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560496620775.png" alt="1560496620775"></p><h3 id="访问-1"><a href="#访问-1" class="headerlink" title="访问"></a>访问</h3><p><a href="http://localhost:8080,如下图所示" target="_blank" rel="noopener">http://localhost:8080,如下图所示</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560496776113.png" alt="1560496776113"></p>]]></content>
      
      
      <categories>
          
          <category> 分布式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql</title>
      <link href="/2019/06/08/mysql/"/>
      <url>/2019/06/08/mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://downloads.mysql.com/archives/community/" target="_blank" rel="noopener">MySQL :: Download MySQL Community Server (Archived Versions)</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1559999836333.png" alt="1559999836333"></p><h2 id="rzsz"><a href="#rzsz" class="headerlink" title="rzsz"></a>rzsz</h2><pre><code>[root@192 modules]# yum -y  install lrzsz</code></pre><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><pre><code>[root@192 modules]# lltotal 66632-rw-r--r--. 1 root root 17855952 Jun  8 20:04 MySQL-client-5.5.48-1.linux2.6.x86_64.rpm-rw-r--r--. 1 root root 50372369 Jun  8 20:24 MySQL-server-5.5.48-1.linux2.6.x86_64.rpm</code></pre><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><pre><code>[root@192 modules]# rpm -qa | grep -i mysqlmysql-libs-5.1.73-7.el6.x86_64[root@192 modules]# rpm -e --nodeps mysql-libs-5.1.73-7.el6.x86_64</code></pre><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><pre><code>[root@192 modules]# yum -y remove mysql-libs-5.1.73-7.el6.x86_64</code></pre><p>如果提示<code>“GPG keys...”</code>安装失败，解决方案：<code>rpm -ivh rpm软件名  --force --nodoeps</code></p><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><pre><code>[root@192 modules]# rpm -ivh MySQL-server-5.5.48-1.linux2.6.x86_64.rpm warning: MySQL-server-5.5.48-1.linux2.6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing...                ########################################### [100%]   1:MySQL-server           ########################################### [100%]190608 20:32:37 [Note] /usr/sbin/mysqld (mysqld 5.5.48) starting as process 26375 ...190608 20:32:37 [Note] /usr/sbin/mysqld (mysqld 5.5.48) starting as process 26382 ...PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !To do so, start the server, then issue the following commands:/usr/bin/mysqladmin -u root password &#39;new-password&#39;/usr/bin/mysqladmin -u root -h 192.168.1.101 password &#39;new-password&#39;Alternatively you can run:/usr/bin/mysql_secure_installationwhich will also give you the option of removing the testdatabases and anonymous user created by default.  This isstrongly recommended for production servers.See the manual for more instructions.Please report any problems at http://bugs.mysql.com/</code></pre><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><pre><code>[root@192 modules]# rpm -ivh MySQL-client-5.5.48-1.linux2.6.x86_64.rpm warning: MySQL-client-5.5.48-1.linux2.6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing...                ########################################### [100%]   1:MySQL-client           ########################################### [100%]</code></pre><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><pre><code>[root@192 mysql]# mysqladmin --versionmysqladmin  Ver 8.42 Distrib 5.5.48, for Linux on x86_64</code></pre><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><h3 id="方式一-1"><a href="#方式一-1" class="headerlink" title="方式一"></a>方式一</h3><pre><code>[root@192 mysql]# service mysql start;Starting MySQL..                                           [  OK  ]</code></pre><h3 id="方式二-1"><a href="#方式二-1" class="headerlink" title="方式二"></a>方式二</h3><ul><li>在计算机<code>reboot</code>后 登陆<code>MySQL</code> : <code>mysql</code>可能会报错：  <code>&quot;/var/lib/mysql/mysql.sock不存在&quot;</code><ul><li>原因：是<code>Mysql</code>服务没有启动</li><li>解决 ：  启动服务<ol><li>每次使用前 手动启动服务  <code>/etc/init.d/mysql start</code> </li><li>开机自启  <code>chkconfig mysql on</code>    ,<code>chkconfig mysql off</code></li></ol></li></ul></li></ul><pre><code>[root@192 modules]# /etc/init.d/mysql startStarting MySQL..                                           [  OK  ]</code></pre><h3 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h3><ul><li>开启自启<code>mysql</code>服务</li></ul><pre><code>[root@192 mysql]# chkconfig mysql on[root@192 mysql]# chkconfig mysql --listmysql              0:off    1:off    2:on    3:on    4:on    5:on    6:off</code></pre><h2 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h2><pre><code>[root@192 mysql]# service mysql stopShutting down MySQL...                                     [  OK  ]</code></pre><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><pre><code>[root@192 mysql]# service mysql restart;Shutting down MySQL.                                       [  OK  ]Starting MySQL..                                           [  OK  ]</code></pre><h2 id="检查开机是否自动启动mysql服务"><a href="#检查开机是否自动启动mysql服务" class="headerlink" title="检查开机是否自动启动mysql服务"></a>检查开机是否自动启动mysql服务</h2><pre><code>[root@192 mysql]# ntsysv</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560149842747.png" alt="1560149842747"></p><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><pre><code>[root@192 modules]# /usr/bin/mysqladmin -u root password &#39;000000&#39;</code></pre><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><pre><code>[root@192 modules]# mysql -uroot -pEnter password: Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 2Server version: 5.5.48 MySQL Community Server (GPL)Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.mysql&gt; </code></pre><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><pre><code>mysql&gt; grant all privileges  on *.* to root@&#39;%&#39; identified by &quot;000000&quot;;Query OK, 0 rows affected (0.00 sec)mysql&gt; FLUSH PRIVILEGES;Query OK, 0 rows affected (0.00 sec)</code></pre><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><ul><li><p>客户端连接不上</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560004124502.png" alt="1560004124502"></p><ul><li><p>关闭防火墙</p><pre><code>[root@192 ~]# service iptables stop;iptables: Setting chains to policy ACCEPT: filter          [  OK  ]iptables: Flushing firewall rules:                         [  OK  ]iptables: Unloading modules:                               [  OK  ][root@192 ~]# service iptables status;iptables: Firewall is not running.</code></pre></li></ul></li><li><p><code>rpm</code>安装<code>mysql</code>，找不到<code>/etc/my.cnf</code></p><ul><li>复制<code>/usr/share/mysql</code>目录下的<code>my-huge.cnf</code>文件到<code>/etc</code>目录，并改名为<code>my.cnf</code>即可</li></ul></li></ul><pre><code>[root@192 mysql]# cp /usr/share/mysql/my-huge.cnf /etc/my.cnf</code></pre><h1 id="数据库存放目录"><a href="#数据库存放目录" class="headerlink" title="数据库存放目录"></a>数据库存放目录</h1><pre><code>[root@192 mysql]# ps -ef|grep mysqlroot       5790   3618  0 14:13 pts/1    00:00:00 mysql -uroot -proot       5802   4605  0 14:24 pts/3    00:00:00 mysql -uroot -proot       7266      1  0 14:46 pts/0    00:00:00 /bin/sh /usr/bin/mysqld_safe --datadir=/var/lib/mysql --pid-file=/var/lib/mysql/192.168.1.101.pidmysql      7615   7266  0 14:46 pts/0    00:00:00 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib64/mysql/plugin --user=mysql --log-error=/var/lib/mysql/192.168.1.101.err --pid-file=/var/lib/mysql/192.168.1.101.pid --socket=/var/lib/mysql/mysql.sock --port=3306root       7672   4519  0 15:02 pts/0    00:00:00 grep mysql</code></pre><ul><li>数据库目录<code>datadir=/var/lib/mysql</code></li><li><code>pid</code>文件目录：<code>--pid-file=/var/lib/mysql/bigdata01.pid</code></li></ul><h2 id="MySQL核心目录"><a href="#MySQL核心目录" class="headerlink" title="MySQL核心目录"></a>MySQL核心目录</h2><ul><li>/var/lib/mysql :mysql 安装目录</li><li>/usr/share/mysql:  配置文件</li><li>/usr/bin：命令目录（mysqladmin、mysqldump等）</li><li>/etc/init.d/mysql启停脚本</li></ul><h2 id="MySQL配置文件"><a href="#MySQL配置文件" class="headerlink" title="MySQL配置文件"></a>MySQL配置文件</h2><ul><li>my-huge.cnf    高端服务器  1-2G内存</li><li>my-large.cnf   中等规模</li><li>my-medium.cnf  一般</li><li>my-small.cnf   较小</li></ul><p>但是，以上配置文件<code>mysql</code>默认不能识别，默认只能识别<code>/etc/my.cnf</code>，因此需要拷贝一份以上配置文件</p><pre><code>[root@192 mysql]# cp /usr/share/mysql/my-huge.cnf /etc/my.cnf</code></pre><p>注意：<code>mysql5.5</code>默认配置文件<code>/etc/my.cnf</code>；<code>Mysql5.6</code>默认配置文件<code>/etc/mysql-default.cnf</code></p><h1 id="mysql字符编码"><a href="#mysql字符编码" class="headerlink" title="mysql字符编码"></a>mysql字符编码</h1><h2 id="查看字符编码"><a href="#查看字符编码" class="headerlink" title="查看字符编码"></a>查看字符编码</h2><pre><code>mysql&gt; show variables like &#39;%char%&#39;;+--------------------------+----------------------------+| Variable_name            | Value                      |+--------------------------+----------------------------+| character_set_client     | utf8                       || character_set_connection | utf8                       || character_set_database   | latin1                     || character_set_filesystem | binary                     || character_set_results    | utf8                       || character_set_server     | latin1                     || character_set_system     | utf8                       || character_sets_dir       | /usr/share/mysql/charsets/ |+--------------------------+----------------------------+8 rows in set (0.00 sec)</code></pre><h2 id="安装NPPFTP"><a href="#安装NPPFTP" class="headerlink" title="安装NPPFTP"></a>安装NPPFTP</h2><p>设置—导入—-导入插件</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560301765932.png" alt="1560301765932"></p><h2 id="修改字符编码为utf8"><a href="#修改字符编码为utf8" class="headerlink" title="修改字符编码为utf8"></a>修改字符编码为utf8</h2><p>编辑配置文件<code>vim /etc/my.cnf</code>，追加</p><pre><code>[mysql]default-character-set=utf8[client]default-character-set=utf8[mysqld]character_set_server=utf8character_set_client=utf8collation_server=utf8_general_ci</code></pre><p>再次查看字符编码</p><pre><code>mysql&gt; show variables like &#39;%char%&#39;;+--------------------------+----------------------------+| Variable_name            | Value                      |+--------------------------+----------------------------+| character_set_client     | utf8                       || character_set_connection | utf8                       || character_set_database   | utf8                       || character_set_filesystem | binary                     || character_set_results    | utf8                       || character_set_server     | utf8                       || character_set_system     | utf8                       || character_sets_dir       | /usr/share/mysql/charsets/ |+--------------------------+----------------------------+8 rows in set (0.00 sec)</code></pre><h2 id="清屏"><a href="#清屏" class="headerlink" title="清屏"></a>清屏</h2><ul><li>Ctrl+L</li><li>system clear</li></ul><h1 id="SQL语句查询"><a href="#SQL语句查询" class="headerlink" title="SQL语句查询"></a>SQL语句查询</h1><p><a href="https://www.cnblogs.com/annsshadow/p/5037667.html" target="_blank" rel="noopener">步步深入：MySQL架构总览-&gt;查询执行流程-&gt;SQL解析顺序 - AnnsShadoW - 博客园</a></p><h2 id="语法顺序"><a href="#语法顺序" class="headerlink" title="语法顺序"></a>语法顺序</h2><ol><li>SELECT</li><li>FROM</li><li>LEFT JOIN</li><li>ON</li><li>WHERE</li><li>GROUP BY</li><li>HAVING</li><li>ORDER BY</li><li>LIMIT</li></ol><h2 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span> <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> <span class="token keyword">order</span> <span class="token keyword">ON</span> <span class="token keyword">user</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token keyword">order</span><span class="token punctuation">.</span>uid <span class="token keyword">WHERE</span> <span class="token keyword">order</span><span class="token punctuation">.</span>price <span class="token operator">></span> <span class="token number">1000</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">user</span><span class="token punctuation">.</span>name <span class="token keyword">HAVING</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">user</span><span class="token punctuation">.</span>name <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span></code></pre><ol><li>FROM（将最近的两张表，进行笛卡尔积），得到临时结果集VT1</li><li>ON（将VT1按照它的条件进行过滤）—VT2</li><li>LEFT JOIN（保留左表的记录）—VT3</li><li>WHERE（过滤VT3中的记录）–VT4…VTn</li><li>GROUP BY（对VT4的记录进行分组）—VT5</li><li>HAVING（对VT5中的记录进行过滤）—VT6</li><li>SELECT（对VT6中的记录，选取指定的列）–VT7</li><li>ORDER BY（对VT7的记录进行排序）–游标</li><li>LIMIT（对排序之后的值进行分页）</li></ol><h2 id="WHERE条件执行顺序（影响性能）"><a href="#WHERE条件执行顺序（影响性能）" class="headerlink" title="WHERE条件执行顺序（影响性能）"></a>WHERE条件执行顺序（影响性能）</h2><ul><li>MYSQL：从左往右去执行WHERE条件的。</li><li>Oracle：从右往左去执行WHERE条件的。</li></ul><p>结论：写WHERE条件的时候，优先级高的部分要去编写过滤力度最大的条件语句。</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560151970456.png" alt="1560151970456"></p><h1 id="多表之间关系"><a href="#多表之间关系" class="headerlink" title="多表之间关系"></a>多表之间关系</h1><h2 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h2><h2 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h2><p><strong>从表</strong>是：<strong>分类表</strong>。从表中，应该有一个字段去关联主表，而这个关联字段就是<strong>主键</strong>。</p><p><strong>主表</strong>是：<strong>商品表</strong>。主表中，应该有一个字段去关联从表，而这个关联字段就是<strong>外键</strong>。</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560045917048.png" alt="1560045917048"></p><p> 在互联网项目中，一般情况下，<strong>不建议建立外键关系</strong>。</p><h2 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h2><ul><li>双向的一对多</li></ul><h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><ul><li>存储引擎是针对表的,MySQL 5.5之后，默认的存储引擎由MyISAM变为<strong>InnoDB</strong>。</li></ul><h2 id="查询数据库支持哪些引擎"><a href="#查询数据库支持哪些引擎" class="headerlink" title="查询数据库支持哪些引擎"></a>查询数据库支持哪些引擎</h2><pre><code>mysql&gt; show engines;+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         || MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         || CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         || BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         || MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         || InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        || ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         || MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         || FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+9 rows in set (0.00 sec)</code></pre><h2 id="查看当前使用的引擎"><a href="#查看当前使用的引擎" class="headerlink" title="查看当前使用的引擎"></a>查看当前使用的引擎</h2><pre><code>mysql&gt; show variables like &#39;%storage_engine%&#39; ;+------------------------+--------+| Variable_name          | Value  |+------------------------+--------+| default_storage_engine | InnoDB || storage_engine         | InnoDB |+------------------------+--------+2 rows in set (0.00 sec)</code></pre><h2 id="指定数据库对象的引擎"><a href="#指定数据库对象的引擎" class="headerlink" title="指定数据库对象的引擎"></a>指定数据库对象的引擎</h2><pre class=" language-sql"><code class="language-sql">    <span class="token keyword">create</span> <span class="token keyword">table</span> tb<span class="token punctuation">(</span>        id <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">auto_increment</span> <span class="token punctuation">,</span>        name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        dept <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span>MyISAM <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span>     <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8   <span class="token punctuation">;</span></code></pre><h1 id="日志文件、数据文件"><a href="#日志文件、数据文件" class="headerlink" title="日志文件、数据文件"></a>日志文件、数据文件</h1><h2 id="日志位置"><a href="#日志位置" class="headerlink" title="日志位置"></a>日志位置</h2><pre><code>mysql&gt; SHOW  GLOBAL VARIABLES LIKE &#39;%log%&#39;;+-----------------------------------------+----------------------------------+| Variable_name                           | Value                            |+-----------------------------------------+----------------------------------+| back_log                                | 50                               || binlog_cache_size                       | 32768                            || binlog_direct_non_transactional_updates | OFF                              || binlog_format                           | MIXED                            || binlog_stmt_cache_size                  | 32768                            || expire_logs_days                        | 0                                || general_log                             | OFF                              || general_log_file                        | /var/lib/mysql/192.log           || innodb_flush_log_at_trx_commit          | 1                                || innodb_locks_unsafe_for_binlog          | OFF                              || innodb_log_buffer_size                  | 8388608                          || innodb_log_file_size                    | 5242880                          || innodb_log_files_in_group               | 2                                || innodb_log_group_home_dir               | ./                               || innodb_mirrored_log_groups              | 1                                || log                                     | OFF                              || log_bin                                 | ON                               || log_bin_trust_function_creators         | OFF                              || log_error                               | /var/lib/mysql/192.168.1.101.err || log_output                              | FILE                             || log_queries_not_using_indexes           | OFF                              || log_slave_updates                       | OFF                              || log_slow_queries                        | OFF                              || log_warnings                            | 1                                || max_binlog_cache_size                   | 18446744073709547520             || max_binlog_size                         | 1073741824                       || max_binlog_stmt_cache_size              | 18446744073709547520             || max_relay_log_size                      | 0                                || relay_log                               |                                  || relay_log_index                         |                                  || relay_log_info_file                     | relay-log.info                   || relay_log_purge                         | ON                               || relay_log_recovery                      | OFF                              || relay_log_space_limit                   | 0                                || slow_query_log                          | OFF                              || slow_query_log_file                     | /var/lib/mysql/192-slow.log      || sql_log_bin                             | ON                               || sql_log_off                             | OFF                              || sync_binlog                             | 0                                || sync_relay_log                          | 0                                || sync_relay_log_info                     | 0                                |+-----------------------------------------+----------------------------------+41 rows in set (0.00 sec)</code></pre><h3 id="二进制日志"><a href="#二进制日志" class="headerlink" title="二进制日志"></a>二进制日志</h3><ul><li>记录了<strong>数据库所有的ddl语句和dml语句</strong>，但不包括select语句内容</li><li>用于恢复数据</li></ul><pre><code>mysql&gt; SHOW VARIABLES LIKE &#39;log_bin%&#39;;+---------------------------------+-------+| Variable_name                   | Value |+---------------------------------+-------+| log_bin                         | ON    || log_bin_trust_function_creators | OFF   |+---------------------------------+-------+2 rows in set (0.00 sec)</code></pre><h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><pre><code>mysql&gt;  SHOW VARIABLES LIKE &#39;log_error%&#39;;+---------------+----------------------------------+| Variable_name | Value                            |+---------------+----------------------------------+| log_error     | /var/lib/mysql/192.168.1.101.err |+---------------+----------------------------------+1 row in set (0.00 sec)</code></pre><h3 id="查询日志"><a href="#查询日志" class="headerlink" title="查询日志"></a>查询日志</h3><pre><code>mysql&gt;  SHOW VARIABLES LIKE &#39;general_log%&#39;;+------------------+------------------------+| Variable_name    | Value                  |+------------------+------------------------+| general_log      | OFF                    || general_log_file | /var/lib/mysql/192.log |+------------------+------------------------+2 rows in set (0.00 sec)</code></pre><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><pre><code>mysql&gt; SHOW VARIABLES LIKE &#39;slow_query_log%&#39;;+---------------------+-----------------------------+| Variable_name       | Value                       |+---------------------+-----------------------------+| slow_query_log      | OFF                         || slow_query_log_file | /var/lib/mysql/192-slow.log |+---------------------+-----------------------------+2 rows in set (0.00 sec)mysql&gt; SHOW VARIABLES LIKE &#39;long_query_time%&#39;;+-----------------+-----------+| Variable_name   | Value     |+-----------------+-----------+| long_query_time | 10.000000 |+-----------------+-----------+1 row in set (0.00 sec)</code></pre><h2 id="数据位置"><a href="#数据位置" class="headerlink" title="数据位置"></a>数据位置</h2><pre><code>mysql&gt; SHOW VARIABLES LIKE &#39;%datadir%&#39;;+---------------+-----------------+| Variable_name | Value           |+---------------+-----------------+| datadir       | /var/lib/mysql/ |+---------------+-----------------+1 row in set (0.00 sec)</code></pre><h1 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h1><p><a href="https://en.wikipedia.org/wiki/B-tree" target="_blank" rel="noopener">B-tree - Wikipedia</a></p><p><a href="https://dev.mysql.com/doc/refman/5.5/en/optimization.html" target="_blank" rel="noopener">MySQL :: MySQL 5.5 Reference Manual :: 8 Optimization</a></p><p><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html" target="_blank" rel="noopener">MySQL索引背后的数据结构及算法原理</a></p><p><a href="https://blog.csdn.net/endlu/article/details/51720299" target="_blank" rel="noopener">BTree和B+Tree详解</a></p><p>SQL优化， 主要就是 在<strong>优化索引</strong>，索引就 相当于书的目录</p><p>索引(index)是帮助MYSQL高效获取数据的数据结构。<strong>索引是数据结构</strong>（树：B树(默认)、Hash树…）</p><h2 id="B树索引"><a href="#B树索引" class="headerlink" title="B树索引"></a>B树索引</h2><ul><li><code>select * from student where age = 33</code>如果不加索引，从上往下查找需要查找5次，而加了索引，查找的节点处于第三层，所以只需要查找3次</li></ul><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560241574572.png" alt="1560241574572"></p><h2 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B+Tree"></a>B+Tree</h2><ul><li><code>Btree</code>数据全部放在叶子节点</li></ul><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560241687522.png" alt="1560241687522"></p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul><li>主键索引：  不能重复，是一种特殊的唯一索引，不允许有空值</li><li>唯一索引  ：不能重复，允许为空值</li><li>单值索引  ： 单列， age ;一个表可以多个单值索引,name。</li><li>组合索引  ：多个列构成的索引 ，只有在查询条件中使用了这些字段的左边字段时，索引才会被使用，使用组合索引时遵循<strong>最左前缀集合</strong>。</li></ul><h2 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h2><p>如果一个字段是主键<code>primary key</code>，则该字段默认就是主键索引,需要注意的是<code>DDL</code>语句会自动提交,我们不需要手动<code>commit</code></p><h3 id="方式一-2"><a href="#方式一-2" class="headerlink" title="方式一"></a>方式一</h3><p><code>create 索引类型  索引名  on 表(字段)</code></p><ul><li>单值索引</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">index</span>   dept_index <span class="token keyword">on</span>  tb<span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>唯一索引</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">unique</span> <span class="token keyword">index</span>  name_index <span class="token keyword">on</span> tb<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">;</span></code></pre><ul><li>组合索引</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">index</span> dept_name_index <span class="token keyword">on</span> tb<span class="token punctuation">(</span>dept<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="方式二-2"><a href="#方式二-2" class="headerlink" title="方式二"></a>方式二</h3><p><code>alter table 表名 索引类型  索引名（字段）</code></p><ul><li>单值索引</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> tb <span class="token keyword">add</span> <span class="token keyword">index</span> dept_index<span class="token punctuation">(</span>dept<span class="token punctuation">)</span> <span class="token punctuation">;</span></code></pre><ul><li>唯一索引</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> tb <span class="token keyword">add</span> <span class="token keyword">unique</span> <span class="token keyword">index</span> name_index<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>组合索引</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> tb <span class="token keyword">add</span> <span class="token keyword">index</span> dept_name_index<span class="token punctuation">(</span>dept<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h2><p><code>drop index 索引名 on 表名 ;</code></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">index</span> name_index <span class="token keyword">on</span> tb <span class="token punctuation">;</span></code></pre><h2 id="查询索引"><a href="#查询索引" class="headerlink" title="查询索引"></a>查询索引</h2><ul><li><code>show index from 表名 ;</code></li><li><code>show index from 表名 \G</code></li></ul><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> tb<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> <span class="token keyword">Table</span> <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name   <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> Index_type <span class="token operator">|</span> <span class="token keyword">Comment</span> <span class="token operator">|</span> Index_comment <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> tb    <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>    <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> id          <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>      <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> tb    <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> dept_index <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> dept        <span class="token operator">|</span> A         <span class="token operator">|</span>        <span class="token boolean">NULL</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ul><li>提高查询效率（降低IO使用率）</li><li>降低CPU使用率 （<code>...order by age desc</code>,因为 B树索引 本身就是一个 好排序的结构，因此在排序时  可以直接使用）</li></ul><h2 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h2><ul><li>索引本身很大， 可以存放在内存/硬盘（通常为 硬盘）</li><li>索引不是所有情况均适用<ul><li>少量数据 </li><li>频繁更新的字段 </li><li>很少使用的字段</li></ul></li><li>索引会降低增删改的效率（增删改  查）</li></ul><h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><ul><li>尽量创建组合索引（组合索引其实会默认按照最左前缀原则帮我们创建多组索引）</li><li>组合索引（id,name,sex）会帮我们创建多组索引—–&gt;[id],[id,name],[id,sex],[id,name,sex],[name,sex]</li></ul><h1 id="SQL故障排除"><a href="#SQL故障排除" class="headerlink" title="SQL故障排除"></a>SQL故障排除</h1><ul><li>慢查询日志:MySQL提供的一种日志记录，用于记录MySQL种响应时间超过阀值的SQL语句 （long_query_time，默认10秒）</li><li>慢查询日志默认是关闭的；建议一般开发调优时是打开，而最终部署时关闭。</li><li>性能优化思路<ul><li>首先需要使用慢查询功能，去获取所有查询时间比较长的SQL语句</li><li>其次使用explain命令去查看有问题的SQL的执行计划</li><li>最后可以使用show profile[s] 查看有问题的SQL的性能使用情况</li></ul></li></ul><h2 id="查看慢查询"><a href="#查看慢查询" class="headerlink" title="查看慢查询"></a>查看慢查询</h2><h3 id="临时开启"><a href="#临时开启" class="headerlink" title="临时开启"></a>临时开启</h3><h4 id="方式一-3"><a href="#方式一-3" class="headerlink" title="方式一"></a>方式一</h4><pre><code>mysql&gt; show variables like &#39;%slow_query_log%&#39; ;+---------------------+-----------------------------+| Variable_name       | Value                       |+---------------------+-----------------------------+| slow_query_log      | OFF                         || slow_query_log_file | /var/lib/mysql/192-slow.log |+---------------------+-----------------------------+2 rows in set (0.00 sec)mysql&gt; set global slow_query_log = ON;Query OK, 0 rows affected (0.00 sec)mysql&gt; show variables like &#39;%slow_query_log%&#39; ;+---------------------+-----------------------------+| Variable_name       | Value                       |+---------------------+-----------------------------+| slow_query_log      | ON                          || slow_query_log_file | /var/lib/mysql/192-slow.log |+---------------------+-----------------------------+2 rows in set (0.00 sec)</code></pre><h4 id="方式二-3"><a href="#方式二-3" class="headerlink" title="方式二"></a>方式二</h4><pre><code>mysql&gt; show variables like &#39;%slow_query_log%&#39; ;+---------------------+-----------------------------+| Variable_name       | Value                       |+---------------------+-----------------------------+| slow_query_log      | OFF                         || slow_query_log_file | /var/lib/mysql/192-slow.log |+---------------------+-----------------------------+2 rows in set (0.00 sec)mysql&gt; set global slow_query_log = 1 ;Query OK, 0 rows affected (0.00 sec)mysql&gt; show variables like &#39;%slow_query_log%&#39; ;+---------------------+-----------------------------+| Variable_name       | Value                       |+---------------------+-----------------------------+| slow_query_log      | ON                          || slow_query_log_file | /var/lib/mysql/192-slow.log |+---------------------+-----------------------------+2 rows in set (0.00 sec)</code></pre><h3 id="永久开启"><a href="#永久开启" class="headerlink" title="永久开启"></a>永久开启</h3><p>编辑<code>/etc/my.cnf</code> 中追加配置：</p><pre><code>vi /etc/my.cnf [mysqld]slow_query_log=1slow_query_log_file=/var/lib/mysql/localhost-slow.log</code></pre><h3 id="查看慢查询阀值"><a href="#查看慢查询阀值" class="headerlink" title="查看慢查询阀值"></a>查看慢查询阀值</h3><pre><code>mysql&gt; show variables like &#39;%long_query_time%&#39; ;+-----------------+-----------+| Variable_name   | Value     |+-----------------+-----------+| long_query_time | 10.000000 |+-----------------+-----------+1 row in set (0.00 sec)</code></pre><h3 id="临时设置阀值"><a href="#临时设置阀值" class="headerlink" title="临时设置阀值"></a>临时设置阀值</h3><ul><li>设置完毕后，重新登陆后起效 （不需要重启服务）</li></ul><pre><code>mysql&gt; show variables like &#39;%long_query_time%&#39; ;+-----------------+-----------+| Variable_name   | Value     |+-----------------+-----------+| long_query_time | 10.000000 |+-----------------+-----------+1 row in set (0.00 sec)mysql&gt; set global long_query_time = 5 ;Query OK, 0 rows affected (0.00 sec)mysql&gt; show variables like &#39;%long_query_time%&#39; ;+-----------------+-----------+| Variable_name   | Value     |+-----------------+-----------+| long_query_time | 10.000000 |+-----------------+-----------+1 row in set (0.00 sec)mysql&gt; exit;Bye[root@192 ~]# mysql -uroot -pEnter password: Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 4Server version: 5.5.48-log MySQL Community Server (GPL)Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.mysql&gt; show variables like &#39;%long_query_time%&#39; ;+-----------------+----------+| Variable_name   | Value    |+-----------------+----------+| long_query_time | 5.000000 |+-----------------+----------+1 row in set (0.00 sec)</code></pre><h3 id="永久设置阀值"><a href="#永久设置阀值" class="headerlink" title="永久设置阀值"></a>永久设置阀值</h3><p>编辑<code>/etc/my.cnf</code>中追加配置：</p><pre><code>vi /etc/my.cnf [mysqld]long_query_time=3</code></pre><h2 id="查看SQL执行计划"><a href="#查看SQL执行计划" class="headerlink" title="查看SQL执行计划"></a>查看SQL执行计划</h2><p><code>explain +SQL语句</code></p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span>  <span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> tb <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+---------------+------+---------+------+------+---------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span>   <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+---------------+------+---------+------+------+---------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> tb    <span class="token operator">|</span> system <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">0</span> <span class="token operator">|</span> const <span class="token keyword">row</span> <span class="token operator">not</span> found <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+---------------+------+---------+------+------+---------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><ul><li>id : 编号                </li><li>select_type ：查询类型</li><li>table ：表</li><li>type   ：类型</li><li>possible_keys ：预测用到的索引 </li><li>key  ：实际使用的索引</li><li>key_len ：实际使用索引的长度     </li><li>ref  :表之间的引用</li><li>rows ：通过索引查询到的数据量 </li><li>Extra     :额外的信息</li></ul><h3 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h3><ul><li>课程表<code>(course)</code></li><li>教师表<code>(teacher)</code></li><li>教师课程描述表<code>(teacherCard)</code></li></ul><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1560245341475.png" alt="1560245341475"></p><h3 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> course<span class="token punctuation">(</span>cid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> teacher<span class="token punctuation">(</span>tid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tcid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> teacherCard<span class="token punctuation">(</span>tcid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>tcdesc <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> course <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'java'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> course <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'html'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> course <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'sql'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> course <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'web'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'tz'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'tw'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'tl'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> teacherCard <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'tzdesc'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> teacherCard <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'twdesc'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> teacherCard <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'tldesc'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></code></pre><h3 id="id"><a href="#id" class="headerlink" title="id"></a>id</h3><h4 id="id值相同"><a href="#id值相同" class="headerlink" title="id值相同"></a>id值相同</h4><ul><li><p><code>id</code>值相同，从上往下 顺序执行。</p></li><li><p>数据小的表优先查询</p></li><li><p>用<code>wehre</code>连接表之间的关系，表的执行顺序是因数量的个数改变而改变，当教师表新插入3条数据，教师表变成了最后执行的原因是遵循笛卡儿积，尽管<code>3*4*6=72</code>和<code>6*4*3=72</code>最终的条数是一样的，但是它们的中间结果是不一样的，查询<code>3*4=12</code>条效率明显比<code>6*4=24</code>高</p></li></ul><p>查询课程编号为2或教师证编号为3的老师信息</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">EXPLAIN</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> teacher t<span class="token punctuation">,</span>course <span class="token number">c</span><span class="token punctuation">,</span>teacherCard tc <span class="token keyword">where</span> t<span class="token punctuation">.</span>tid<span class="token operator">=</span><span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token operator">and</span> t<span class="token punctuation">.</span>tcid<span class="token operator">=</span>tc<span class="token punctuation">.</span>tcid <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">.</span>cid<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">or</span> tc<span class="token punctuation">.</span>tcid<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                          <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>                                <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> tc    <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">join</span> buffer <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">join</span> buffer <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'ts'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'tw'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">insert</span> <span class="token keyword">into</span> teacher <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'tl'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">EXPLAIN</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> teacher t<span class="token punctuation">,</span>course <span class="token number">c</span><span class="token punctuation">,</span>teacherCard tc <span class="token keyword">where</span> t<span class="token punctuation">.</span>tid<span class="token operator">=</span><span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token operator">and</span> t<span class="token punctuation">.</span>tcid<span class="token operator">=</span>tc<span class="token punctuation">.</span>tcid <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">.</span>cid<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">or</span> tc<span class="token punctuation">.</span>tcid<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                          <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> tc    <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>                                <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">join</span> buffer <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">6</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">join</span> buffer <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h4 id="id值不同"><a href="#id值不同" class="headerlink" title="id值不同"></a>id值不同</h4><ul><li><code>id</code>值越大越优先查询 (本质上在嵌套子查询时，先查内层 再查外层)</li></ul><p>查询教授SQL课程的老师的描述（desc）</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> tc<span class="token punctuation">.</span>tcdesc <span class="token keyword">from</span> teacherCard tc<span class="token punctuation">,</span>course <span class="token number">c</span><span class="token punctuation">,</span>teacher t <span class="token keyword">where</span> <span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token operator">=</span> t<span class="token punctuation">.</span>tid    <span class="token operator">-</span><span class="token operator">></span> <span class="token operator">and</span> t<span class="token punctuation">.</span>tcid <span class="token operator">=</span> tc<span class="token punctuation">.</span>tcid <span class="token operator">and</span> <span class="token number">c</span><span class="token punctuation">.</span>cname <span class="token operator">=</span> <span class="token string">'sql'</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                          <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> tc    <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>                                <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">join</span> buffer <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">6</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">join</span> buffer <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> tc<span class="token punctuation">.</span>tcdesc <span class="token keyword">from</span> teacherCard tc <span class="token keyword">where</span> tc<span class="token punctuation">.</span>tcid <span class="token operator">=</span>     <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>tcid <span class="token keyword">from</span> teacher t <span class="token keyword">where</span>  t<span class="token punctuation">.</span>tid <span class="token operator">=</span>      <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token keyword">from</span> course <span class="token number">c</span> <span class="token keyword">where</span> <span class="token number">c</span><span class="token punctuation">.</span>cname <span class="token operator">=</span> <span class="token string">'sql'</span><span class="token punctuation">)</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>     <span class="token operator">|</span> tc    <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> SUBQUERY    <span class="token operator">|</span> t     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">6</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> SUBQUERY    <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h4 id="id值有相同，又有不同"><a href="#id值有相同，又有不同" class="headerlink" title="id值有相同，又有不同"></a>id值有相同，又有不同</h4><ul><li>id值越大越优先；id值相同，从上往下 顺序执行</li></ul><p>子查询+多表</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> t<span class="token punctuation">.</span>tname <span class="token punctuation">,</span>tc<span class="token punctuation">.</span>tcdesc <span class="token keyword">from</span> teacher t<span class="token punctuation">,</span>teacherCard tc <span class="token keyword">where</span> t<span class="token punctuation">.</span>tcid<span class="token operator">=</span> tc<span class="token punctuation">.</span>tcid    <span class="token operator">-</span><span class="token operator">></span> <span class="token operator">and</span> t<span class="token punctuation">.</span>tid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token keyword">from</span> course <span class="token number">c</span> <span class="token keyword">where</span> cname <span class="token operator">=</span> <span class="token string">'sql'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                          <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>     <span class="token operator">|</span> tc    <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>                                <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>     <span class="token operator">|</span> t     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">6</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">join</span> buffer <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> SUBQUERY    <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span>                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h3 id="select-type"><a href="#select-type" class="headerlink" title="select_type"></a>select_type</h3><p>查询类型</p><ul><li><p>PRIMARY:包含子查询SQL中的 主查询 （最外层）</p></li><li><p>SUBQUERY：包含子查询SQL中的 子查询 （非最外层）</p></li><li><p>simple:简单查询（不包含子查询、union）</p></li><li><p>derived:衍生查询(使用到了临时表)</p><ul><li><p>在from子查询中只有一张表</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span>  cr<span class="token punctuation">.</span>cname <span class="token keyword">from</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> tid <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> cr <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+------------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>      <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+------------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>     <span class="token operator">|</span> <span class="token operator">&lt;</span>derived2<span class="token operator">></span> <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>             <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> DERIVED     <span class="token operator">|</span> course     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+------------+------+---------------+------+---------+------+------+-------------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre></li></ul></li></ul><ul><li><p>在from子查询中， 如果有table1 union table2 ，则table1 就是derived,table2就是union</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span>  cr<span class="token punctuation">.</span>cname <span class="token keyword">from</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> tid <span class="token operator">=</span> <span class="token number">1</span>  <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token keyword">where</span> tid <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">)</span> cr <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+--------------+------------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type  <span class="token operator">|</span> <span class="token keyword">table</span>      <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+--------------+------------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>      <span class="token operator">|</span> <span class="token operator">&lt;</span>derived2<span class="token operator">></span> <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span>             <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> DERIVED      <span class="token operator">|</span> course     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> <span class="token keyword">UNION</span>        <span class="token operator">|</span> course     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token keyword">UNION</span> RESULT <span class="token operator">|</span> <span class="token operator">&lt;</span>union2<span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">></span> <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>             <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+--------------+------------+------+---------------+------+---------+------+------+-------------+</span><span class="token number">4</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre></li></ul><ul><li><p>union:上例</p></li><li><p>union result :告知开发人员，那些表之间存在union查询</p></li></ul><h3 id="type"><a href="#type" class="headerlink" title="type"></a>type</h3><p>索引类型、类型</p><ul><li>对type进行优化的前提：有索引</li></ul><p><code>system &gt; const &gt; eq_ref &gt; ref &gt; fulltext &gt; ref_or_null &gt; index_merge &gt; unique_subquery &gt; index_subquery &gt; range &gt; index &gt; ALL</code></p><p>比较常见的<code>system&gt;const&gt;eq_ref&gt;ref&gt;range&gt;index&gt;all</code>,其中<code>system,const</code>只是理想情况；实际能达到 的是<code>ref&gt;range</code></p><h4 id="system"><a href="#system" class="headerlink" title="system"></a>system</h4><ul><li><p>可以忽略: 只有一条数据的系统表 ；或 衍生表只有一条数据的主查询</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">table</span> test01    <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">(</span>    <span class="token operator">-</span><span class="token operator">></span> tid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> tname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> mysql<span class="token operator">></span> <span class="token keyword">insert</span> <span class="token keyword">into</span> test01 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">commit</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+</span><span class="token operator">|</span> Tables_in_kkb <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+</span><span class="token operator">|</span> course        <span class="token operator">|</span><span class="token operator">|</span> <span class="token keyword">lock</span>          <span class="token operator">|</span><span class="token operator">|</span> tb            <span class="token operator">|</span><span class="token operator">|</span> teacher       <span class="token operator">|</span><span class="token operator">|</span> teacherCard   <span class="token operator">|</span><span class="token operator">|</span> test01        <span class="token operator">|</span><span class="token operator">|</span> <span class="token keyword">user</span>          <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+</span><span class="token number">7</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test01 <span class="token keyword">add</span> <span class="token keyword">constraint</span> tid_pk <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">1</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test01 <span class="token punctuation">)</span>t <span class="token keyword">where</span> tid <span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+------------+--------+---------------+------+---------+------+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>      <span class="token operator">|</span> <span class="token keyword">type</span>   <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+------------+--------+---------------+------+---------+------+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>     <span class="token operator">|</span> <span class="token operator">&lt;</span>derived2<span class="token operator">></span> <span class="token operator">|</span> system <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>       <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> DERIVED     <span class="token operator">|</span> test01     <span class="token operator">|</span> <span class="token keyword">ALL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+------------+--------+---------------+------+---------+------+------+-------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h4 id="const"><a href="#const" class="headerlink" title="const"></a>const</h4><p>仅仅能查到一条数据的<code>SQL</code> ,用于<code>Primary key</code>或<code>unique</code>索引 （类型 与索引类型有关）</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> tid <span class="token keyword">from</span> test01 <span class="token keyword">where</span> tid <span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+---------+---------+-------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>     <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+---------+---------+-------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test01 <span class="token operator">|</span> const <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>       <span class="token operator">|</span> <span class="token keyword">PRIMARY</span> <span class="token operator">|</span> <span class="token number">4</span>       <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+---------+---------+-------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test01 <span class="token keyword">drop</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">1</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> tid <span class="token keyword">from</span> test01 <span class="token keyword">where</span> tid <span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test01 <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">index</span> test01_index <span class="token keyword">on</span> test01<span class="token punctuation">(</span>tid<span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> tid <span class="token keyword">from</span> test01 <span class="token keyword">where</span> tid <span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>          <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test01 <span class="token operator">|</span> ref  <span class="token operator">|</span> test01_index  <span class="token operator">|</span> test01_index <span class="token operator">|</span> <span class="token number">4</span>       <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><pre><code>#### eq_ref唯一性索引：对于每个索引键的查询，返回匹配唯一行数据（有且只有1个，不能多 、不能0）```sqlmysql&gt; select * from teacher;+------+-------+------+| tid  | tname | tcid |+------+-------+------+|    1 | tz    |    1 ||    2 | tw    |    2 ||    3 | tl    |    3 |+------+-------+------+3 rows in set (0.00 sec)mysql&gt; select * from teacherCard;+------+--------+| tcid | tcdesc |+------+--------+|    1 | tzdesc ||    2 | twdesc ||    3 | tldesc |+------+--------+3 rows in set (0.00 sec)mysql&gt; explain select t.tcid from teacher t,teacherCard tc where t.tcid = tc.tcid ;+----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra                          |+----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+|  1 | SIMPLE      | t     | ALL  | NULL          | NULL | NULL    | NULL |    3 |                                ||  1 | SIMPLE      | tc    | ALL  | NULL          | NULL | NULL    | NULL |    3 | Using where; Using join buffer |+----+-------------+-------+------+---------------+------+---------+------+------+--------------------------------+2 rows in set (0.00 sec)mysql&gt; alter table teacherCard add constraint pk_tcid primary key(tcid);Query OK, 0 rows affected (0.02 sec)Records: 0  Duplicates: 0  Warnings: 0mysql&gt; alter table teacher add constraint uk_tcid unique index(tcid) ;Query OK, 0 rows affected (0.02 sec)Records: 0  Duplicates: 0  Warnings: 0mysql&gt; explain select t.tcid from teacher t,teacherCard tc where t.tcid = tc.tcid ;+----+-------------+-------+--------+---------------+---------+---------+------------+------+-------------+| id | select_type | table | type   | possible_keys | key     | key_len | ref        | rows | Extra       |+----+-------------+-------+--------+---------------+---------+---------+------------+------+-------------+|  1 | SIMPLE      | t     | index  | uk_tcid       | uk_tcid | 5       | NULL       |    3 | Using index ||  1 | SIMPLE      | tc    | eq_ref | PRIMARY       | PRIMARY | 4       | kkb.t.tcid |    1 | Using index |+----+-------------+-------+--------+---------------+---------+---------+------------+------+-------------+2 rows in set (0.00 sec)</code></pre></li></ul><pre><code>  以上`SQL`，用到的索引是 `t.tcid`,即`teacher`表中的`tcid`字段；  如果`teacher`表的数据个数 和 连接查询的数据个数一致（都是3条数据），则有可能满足`eq_ref`级别；否则无法满足。#### ref非唯一性索引，对于每个索引键的查询，返回匹配的所有行（0行或者多行）```sqlmysql&gt; insert into teacher values(4,&#39;tz&#39;,4) ;Query OK, 1 row affected (0.00 sec)mysql&gt;  insert into teacherCard values(4,&#39;tz222&#39;);Query OK, 1 row affected (0.00 sec)mysql&gt; select * from teacher;+------+-------+------+| tid  | tname | tcid |+------+-------+------+|    1 | tz    |    1 ||    2 | tw    |    2 ||    3 | tl    |    3 ||    4 | tz    |    4 |+------+-------+------+4 rows in set (0.00 sec)mysql&gt; select * from teacherCard;+------+--------+| tcid | tcdesc |+------+--------+|    1 | tzdesc ||    2 | twdesc ||    3 | tldesc ||    4 | tz222  |+------+--------+4 rows in set (0.00 sec)mysql&gt; alter table teacher add index index_name (tname) ;Query OK, 0 rows affected (0.02 sec)Records: 0  Duplicates: 0  Warnings: 0mysql&gt; explain select * from teacher where tname = &#39;tz&#39;;+----+-------------+---------+------+---------------+------------+---------+-------+------+-------------+| id | select_type | table   | type | possible_keys | key        | key_len | ref   | rows | Extra       |+----+-------------+---------+------+---------------+------------+---------+-------+------+-------------+|  1 | SIMPLE      | teacher | ref  | index_name    | index_name | 63      | const |    2 | Using where |+----+-------------+---------+------+---------------+------------+---------+-------+------+-------------+1 row in set (0.00 sec)</code></pre><h4 id="range"><a href="#range" class="headerlink" title="range"></a>range</h4><p>检索指定范围的行 ,<code>where</code>后面是一个范围查询</p><ul><li>between</li><li>&lt; &gt;=    </li><li>特殊的情况，<code>in</code>有时候会失效 ，从而转为 无索引，进行全表扫描<code>all</code>)</li></ul><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> teacher <span class="token keyword">add</span> <span class="token keyword">index</span> tid_index <span class="token punctuation">(</span>tid<span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span> tid  <span class="token operator">|</span> tname <span class="token operator">|</span> tcid <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> tz    <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> tw    <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> tl    <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> tz    <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token number">4</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> <span class="token keyword">Table</span>   <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name   <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> Index_type <span class="token operator">|</span> <span class="token keyword">Comment</span> <span class="token operator">|</span> Index_comment <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span> uk_tcid    <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tcid        <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> index_name <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tname       <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> tid_index  <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tid         <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> teacher t <span class="token keyword">where</span> t<span class="token punctuation">.</span>tid <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> tid_index     <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> teacher t <span class="token keyword">where</span> t<span class="token punctuation">.</span>tid <span class="token operator">&lt;</span><span class="token number">3</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>       <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> range <span class="token operator">|</span> tid_index     <span class="token operator">|</span> tid_index <span class="token operator">|</span> <span class="token number">5</span>       <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h4 id="index"><a href="#index" class="headerlink" title="index"></a>index</h4><p>查询全部索引中数据，<code>tid</code> 是索引， 只需要扫描索引表，不需要所有表中的所有数据</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> <span class="token keyword">Table</span>   <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name   <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> Index_type <span class="token operator">|</span> <span class="token keyword">Comment</span> <span class="token operator">|</span> Index_comment <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span> uk_tcid    <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tcid        <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> index_name <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tname       <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> tid_index  <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tid         <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span> tid  <span class="token operator">|</span> tname <span class="token operator">|</span> tcid <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> tz    <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> tw    <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> tl    <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> tz    <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token number">4</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> tid <span class="token keyword">from</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>   <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>       <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> teacher <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> tid_index <span class="token operator">|</span> <span class="token number">5</span>       <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h4 id="all"><a href="#all" class="headerlink" title="all"></a>all</h4><p>查询全部表中的数据</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> course<span class="token punctuation">;</span>Empty <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span> cid  <span class="token operator">|</span> cname <span class="token operator">|</span> tid  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> java  <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> html  <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> sql   <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> web   <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token number">4</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> course <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span>       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h3 id="possible-keys"><a href="#possible-keys" class="headerlink" title="possible_keys"></a>possible_keys</h3><p>可能用到的索引，是一种预测，不准</p><pre><code>mysql&gt; alter table  course add index cname_index (cname);Query OK, 0 rows affected (0.04 sec)Records: 0  Duplicates: 0  Warnings: 0mysql&gt; select * from course;+------+-------+------+| cid  | cname | tid  |+------+-------+------+|    1 | java  |    1 ||    2 | html  |    1 ||    3 | sql   |    2 ||    4 | web   |    3 |+------+-------+------+4 rows in set (0.00 sec)mysql&gt; show index from course;+--------+------------+-------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| Table  | Non_unique | Key_name    | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |+--------+------------+-------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| course |          1 | cname_index |            1 | cname       | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |+--------+------------+-------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+1 row in set (0.00 sec)mysql&gt; show index from teacher;+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| Table   | Non_unique | Key_name   | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| teacher |          0 | uk_tcid    |            1 | tcid        | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               || teacher |          1 | index_name |            1 | tname       | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               || teacher |          1 | tid_index  |            1 | tid         | A         |           4 |     NULL | NULL   | YES  | BTREE      |         |               |+---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+3 rows in set (0.00 sec)mysql&gt; show index from teacherCard;+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| Table       | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| teacherCard |          0 | PRIMARY  |            1 | tcid        | A         |           4 |     NULL | NULL   |      | BTREE      |         |               |+-------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+1 row in set (0.00 sec)mysql&gt; explain select t.tname ,tc.tcdesc from teacher t,teacherCard tc    -&gt;  where t.tcid= tc.tcid    -&gt; and t.tid = (select c.tid from course c where cname = &#39;sql&#39;) ;+----+-------------+-------+--------+-------------------+-------------+---------+------------+------+-------------+| id | select_type | table | type   | possible_keys     | key         | key_len | ref        | rows | Extra       |+----+-------------+-------+--------+-------------------+-------------+---------+------------+------+-------------+|  1 | PRIMARY     | t     | ref    | uk_tcid,tid_index | tid_index   | 5       | const      |    1 | Using where ||  1 | PRIMARY     | tc    | eq_ref | PRIMARY           | PRIMARY     | 4       | kkb.t.tcid |    1 |             ||  2 | SUBQUERY    | c     | ref    | cname_index       | cname_index | 63      |            |    1 | Using where |+----+-------------+-------+--------+-------------------+-------------+---------+------------+------+-------------+3 rows in set (0.00 sec)</code></pre><p>如果 <code>possible_key/key</code>是<code>NULL</code>，则说明没用索引</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> tc<span class="token punctuation">.</span>tcdesc <span class="token keyword">from</span> teacherCard tc<span class="token punctuation">,</span>course <span class="token number">c</span><span class="token punctuation">,</span>teacher t <span class="token keyword">where</span> <span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token operator">=</span> t<span class="token punctuation">.</span>tid    <span class="token operator">-</span><span class="token operator">></span> <span class="token operator">and</span> t<span class="token punctuation">.</span>tcid <span class="token operator">=</span> tc<span class="token punctuation">.</span>tcid <span class="token operator">and</span> <span class="token number">c</span><span class="token punctuation">.</span>cname <span class="token operator">=</span> <span class="token string">'sql'</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+-------------------+-------------+---------+------------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span>   <span class="token operator">|</span> possible_keys     <span class="token operator">|</span> <span class="token keyword">key</span>         <span class="token operator">|</span> key_len <span class="token operator">|</span> ref        <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+-------------------+-------------+---------+------------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> ref    <span class="token operator">|</span> cname_index       <span class="token operator">|</span> cname_index <span class="token operator">|</span> <span class="token number">63</span>      <span class="token operator">|</span> const      <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> ref    <span class="token operator">|</span> uk_tcid<span class="token punctuation">,</span>tid_index <span class="token operator">|</span> tid_index   <span class="token operator">|</span> <span class="token number">5</span>       <span class="token operator">|</span> kkb<span class="token number">.c</span><span class="token punctuation">.</span>tid  <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> tc    <span class="token operator">|</span> eq_ref <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>           <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>     <span class="token operator">|</span> <span class="token number">4</span>       <span class="token operator">|</span> kkb<span class="token punctuation">.</span>t<span class="token punctuation">.</span>tcid <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>             <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+-------------------+-------------+---------+------------+------+-------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">index</span> cname_index <span class="token keyword">on</span> course<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> tc<span class="token punctuation">.</span>tcdesc <span class="token keyword">from</span> teacherCard tc<span class="token punctuation">,</span>course <span class="token number">c</span><span class="token punctuation">,</span>teacher t <span class="token keyword">where</span> <span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token operator">=</span> t<span class="token punctuation">.</span>tid <span class="token operator">and</span> t<span class="token punctuation">.</span>tcid <span class="token operator">=</span> tc<span class="token punctuation">.</span>tcid <span class="token operator">and</span> <span class="token number">c</span><span class="token punctuation">.</span>cname <span class="token operator">=</span> <span class="token string">'sql'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+-------------------+---------+---------+------------+------+--------------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span>   <span class="token operator">|</span> possible_keys     <span class="token operator">|</span> <span class="token keyword">key</span>     <span class="token operator">|</span> key_len <span class="token operator">|</span> ref        <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                          <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+-------------------+---------+---------+------------+------+--------------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> <span class="token keyword">ALL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span>              <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span>       <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span>                    <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> <span class="token keyword">ALL</span>    <span class="token operator">|</span> uk_tcid<span class="token punctuation">,</span>tid_index <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span>       <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">join</span> buffer <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> tc    <span class="token operator">|</span> eq_ref <span class="token operator">|</span> <span class="token keyword">PRIMARY</span>           <span class="token operator">|</span> <span class="token keyword">PRIMARY</span> <span class="token operator">|</span> <span class="token number">4</span>       <span class="token operator">|</span> kkb<span class="token punctuation">.</span>t<span class="token punctuation">.</span>tcid <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>                                <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+--------+-------------------+---------+---------+------------+------+--------------------------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h3 id="key"><a href="#key" class="headerlink" title="key"></a>key</h3><p>实际使用到的索引</p><h3 id="key-len"><a href="#key-len" class="headerlink" title="key_len"></a>key_len</h3><ul><li>utf8:1个字符3个字节</li><li>gbk:1个字符2个字节</li><li>latin:1个字符1个字节</li></ul><p>索引的长度, 用于判断复合索引是否被完全使用,<code>key_len为60，在utf8：1个字符占3个字节</code></p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">table</span> test_kl    <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">(</span>    <span class="token operator">-</span><span class="token operator">></span> name char<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span> <span class="token string">''</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test_kl <span class="token keyword">add</span> <span class="token keyword">index</span> index_name<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test_kl <span class="token keyword">where</span> name <span class="token operator">=</span><span class="token string">''</span> <span class="token punctuation">;</span> <span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+------------+---------+-------+------+--------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>   <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>        <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+------------+---------+-------+------+--------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test_kl <span class="token operator">|</span> ref  <span class="token operator">|</span> index_name    <span class="token operator">|</span> index_name <span class="token operator">|</span> <span class="token number">60</span>      <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+------------+---------+-------+------+--------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span></code></pre><p>如果索引字段可以为<code>Null</code>,则会使用1个字节用于标识。因此<code>key_len为61</code></p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test_kl <span class="token keyword">add</span> <span class="token keyword">column</span> name1 char<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test_kl <span class="token keyword">add</span> <span class="token keyword">index</span> index_name1<span class="token punctuation">(</span>name1<span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test_kl <span class="token keyword">where</span> name1 <span class="token operator">=</span><span class="token string">''</span> <span class="token punctuation">;</span> <span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+-------------+---------+-------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>   <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>         <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+-------------+---------+-------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test_kl <span class="token operator">|</span> ref  <span class="token operator">|</span> index_name1   <span class="token operator">|</span> index_name1 <span class="token operator">|</span> <span class="token number">61</span>      <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+-------------+---------+-------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><p>增加一个复合索引 ,根据最左前缀原则，两次<code>key_len</code>分别为121和60</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">index</span> index_name <span class="token keyword">on</span> test_kl <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">index</span> index_name1 <span class="token keyword">on</span> test_kl <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test_kl <span class="token keyword">add</span> <span class="token keyword">index</span> name_name1_index <span class="token punctuation">(</span>name<span class="token punctuation">,</span>name1<span class="token punctuation">)</span> <span class="token punctuation">;</span> Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> test_kl<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> <span class="token keyword">Table</span>   <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name         <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> Index_type <span class="token operator">|</span> <span class="token keyword">Comment</span> <span class="token operator">|</span> Index_comment <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> test_kl <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> name_name1_index <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> name        <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>      <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> test_kl <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> name_name1_index <span class="token operator">|</span>            <span class="token number">2</span> <span class="token operator">|</span> name1       <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test_kl <span class="token keyword">where</span> name1 <span class="token operator">=</span> <span class="token string">''</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+-------+---------------+------------------+---------+------+------+--------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>   <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>              <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+-------+---------------+------------------+---------+------+------+--------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test_kl <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> name_name1_index <span class="token operator">|</span> <span class="token number">121</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+-------+---------------+------------------+---------+------+------+--------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test_kl <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">''</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+------------------+------------------+---------+-------+------+--------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>   <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys    <span class="token operator">|</span> <span class="token keyword">key</span>              <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+------------------+------------------+---------+-------+------+--------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test_kl <span class="token operator">|</span> ref  <span class="token operator">|</span> name_name1_index <span class="token operator">|</span> name_name1_index <span class="token operator">|</span> <span class="token number">60</span>      <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+------------------+------------------+---------+-------+------+--------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><p>索引字段为可变<code>varchar</code>类型,用2个字节 标识可变长度,1字节标识Null,因此<code>20*3=60 +  1(null)  +2(用2个字节 标识可变长度)  =63</code></p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test_kl <span class="token keyword">add</span> <span class="token keyword">column</span> name2 <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test_kl <span class="token keyword">add</span> <span class="token keyword">index</span> name2_index <span class="token punctuation">(</span>name2<span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test_kl <span class="token keyword">where</span> name2 <span class="token operator">=</span> <span class="token string">''</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+-------------+---------+-------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>   <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>         <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+-------------+---------+-------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test_kl <span class="token operator">|</span> ref  <span class="token operator">|</span> name2_index   <span class="token operator">|</span> name2_index <span class="token operator">|</span> <span class="token number">63</span>      <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+---------+------+---------------+-------------+---------+-------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h3 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h3><p>表之间的引用，注意与<code>type</code>中的<code>ref</code>值区分</p><p>指明当前表所参照的字段<code>select ....where a.c = b.x ;(其中b.x可以是常量，const)</code></p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">desc</span> course<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+------+-----+---------+-------+</span><span class="token operator">|</span> Field <span class="token operator">|</span> <span class="token keyword">Type</span>        <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> <span class="token keyword">Key</span> <span class="token operator">|</span> <span class="token keyword">Default</span> <span class="token operator">|</span> Extra <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+------+-----+---------+-------+</span><span class="token operator">|</span> cid   <span class="token operator">|</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>      <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span><span class="token operator">|</span> cname <span class="token operator">|</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span><span class="token operator">|</span> tid   <span class="token operator">|</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>      <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+------+-----+---------+-------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> course  <span class="token keyword">add</span> <span class="token keyword">index</span> tid_index <span class="token punctuation">(</span>tid<span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.04</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token number">c</span><span class="token punctuation">,</span>teacher t <span class="token keyword">where</span> <span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token operator">=</span> t<span class="token punctuation">.</span>tid  <span class="token operator">and</span> t<span class="token punctuation">.</span>tname <span class="token operator">=</span><span class="token string">'tw'</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+----------------------+------------+---------+-----------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys        <span class="token operator">|</span> <span class="token keyword">key</span>        <span class="token operator">|</span> key_len <span class="token operator">|</span> ref       <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+----------------------+------------+---------+-----------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> ref  <span class="token operator">|</span> index_name<span class="token punctuation">,</span>tid_index <span class="token operator">|</span> index_name <span class="token operator">|</span> <span class="token number">63</span>      <span class="token operator">|</span> const     <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> ref  <span class="token operator">|</span> tid_index            <span class="token operator">|</span> tid_index  <span class="token operator">|</span> <span class="token number">5</span>       <span class="token operator">|</span> kkb<span class="token punctuation">.</span>t<span class="token punctuation">.</span>tid <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+----------------------+------------+---------+-----------+------+-------------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h3 id="rows"><a href="#rows" class="headerlink" title="rows"></a>rows</h3><p>被索引优化查询的 数据个数 (实际通过索引而查询到的 数据个数)</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span> cid  <span class="token operator">|</span> cname <span class="token operator">|</span> tid  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> java  <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> html  <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> sql   <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> web   <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token number">4</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span> tid  <span class="token operator">|</span> tname <span class="token operator">|</span> tcid <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> tz    <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> tw    <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> tl    <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> tz    <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+</span><span class="token number">4</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> course<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> <span class="token keyword">Table</span>  <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name  <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> Index_type <span class="token operator">|</span> <span class="token keyword">Comment</span> <span class="token operator">|</span> Index_comment <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> course <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> tid_index <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tid         <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> <span class="token keyword">Table</span>   <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name   <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> Index_type <span class="token operator">|</span> <span class="token keyword">Comment</span> <span class="token operator">|</span> Index_comment <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span> uk_tcid    <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tcid        <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> index_name <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tname       <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> teacher <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> tid_index  <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> tid         <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">4</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token number">c</span><span class="token punctuation">,</span>teacher t  <span class="token keyword">where</span> <span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token operator">=</span> t<span class="token punctuation">.</span>tid <span class="token operator">and</span> t<span class="token punctuation">.</span>tname <span class="token operator">=</span> <span class="token string">'tz'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+------+-------+------+</span><span class="token operator">|</span> cid  <span class="token operator">|</span> cname <span class="token operator">|</span> tid  <span class="token operator">|</span> tid  <span class="token operator">|</span> tname <span class="token operator">|</span> tcid <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+------+-------+------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> java  <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> tz    <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> html  <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> tz    <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+------+------+-------+------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course <span class="token number">c</span><span class="token punctuation">,</span>teacher t  <span class="token keyword">where</span> <span class="token number">c</span><span class="token punctuation">.</span>tid <span class="token operator">=</span> t<span class="token punctuation">.</span>tid <span class="token operator">and</span> t<span class="token punctuation">.</span>tname <span class="token operator">=</span> <span class="token string">'tz'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+----------------------+------------+---------+-----------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span> <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys        <span class="token operator">|</span> <span class="token keyword">key</span>        <span class="token operator">|</span> key_len <span class="token operator">|</span> ref       <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+----------------------+------------+---------+-----------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> t     <span class="token operator">|</span> ref  <span class="token operator">|</span> index_name<span class="token punctuation">,</span>tid_index <span class="token operator">|</span> index_name <span class="token operator">|</span> <span class="token number">63</span>      <span class="token operator">|</span> const     <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> <span class="token number">c</span>     <span class="token operator">|</span> ref  <span class="token operator">|</span> tid_index            <span class="token operator">|</span> tid_index  <span class="token operator">|</span> <span class="token number">5</span>       <span class="token operator">|</span> kkb<span class="token punctuation">.</span>t<span class="token punctuation">.</span>tid <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+-------+------+----------------------+------------+---------+-----------+------+-------------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h3 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h3><h4 id="using-filesort"><a href="#using-filesort" class="headerlink" title="using filesort"></a>using filesort</h4><p><code>using filesort</code> ： 性能消耗大；需要“额外”的一次排序（查询）  。常见于 <code>order by</code> 语句中。</p><p>对于单索引， 如果排序和查找是同一个字段，则不会出现<code>using filesort</code>；如果排序和查找不是同一个字段，则会出现<code>using filesort</code>；，平常使用的话，<code>where</code>哪些字段，就<code>order by</code>那些字段</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">create</span> <span class="token keyword">table</span> test02    <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">(</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token number">a1</span> char<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token number">a2</span> char<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token number">a3</span> char<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token keyword">index</span> idx_a1<span class="token punctuation">(</span><span class="token number">a1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token keyword">index</span> idx_a2<span class="token punctuation">(</span><span class="token number">a2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token keyword">index</span> idx_a3<span class="token punctuation">(</span><span class="token number">a3</span><span class="token punctuation">)</span>    <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span> <span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">a1</span> <span class="token punctuation">;</span>Empty <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span> <span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">a1</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------+---------+-------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>    <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------+---------+-------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> ref  <span class="token operator">|</span> idx_a1        <span class="token operator">|</span> idx_a1 <span class="token operator">|</span> <span class="token number">10</span>      <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------+---------+-------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span> <span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">a2</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------+---------+-------+------+-----------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>    <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------+---------+-------+------+-----------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> ref  <span class="token operator">|</span> idx_a1        <span class="token operator">|</span> idx_a1 <span class="token operator">|</span> <span class="token number">10</span>      <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> filesort <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------+---------+-------+------+-----------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><p>复合索引：不能跨列（最佳左前缀），<code>where和order by</code>按照复合索引的顺序使用，不要跨列或无序使用。</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">index</span> idx_a1 <span class="token keyword">on</span> test02<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">index</span> idx_a2 <span class="token keyword">on</span> test02<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">index</span> idx_a3 <span class="token keyword">on</span> test02<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test02 <span class="token keyword">add</span> <span class="token keyword">index</span> idx_a1_a2_a3 <span class="token punctuation">(</span><span class="token number">a1</span><span class="token punctuation">,</span><span class="token number">a2</span><span class="token punctuation">,</span><span class="token number">a3</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> test02<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> <span class="token keyword">Table</span>  <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name     <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> Index_type <span class="token operator">|</span> <span class="token keyword">Comment</span> <span class="token operator">|</span> Index_comment <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> test02 <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a1</span>          <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> test02 <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span>            <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">a2</span>          <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> test02 <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span>            <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">a3</span>          <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span><span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">a3</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+------------------------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>          <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+------------------------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> ref  <span class="token operator">|</span> idx_a1_a2_a3  <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span> <span class="token number">10</span>      <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> filesort <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+------------------------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a2</span><span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">a3</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+------------------------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>          <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+------------------------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span> <span class="token number">30</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> filesort <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+------------------------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span><span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">a2</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+--------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>          <span class="token operator">|</span> key_len <span class="token operator">|</span> ref   <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+--------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> ref  <span class="token operator">|</span> idx_a1_a2_a3  <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span> <span class="token number">10</span>      <span class="token operator">|</span> const <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+--------------+---------+-------+------+--------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a2</span><span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">a1</span> <span class="token punctuation">;</span> <span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>          <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span> <span class="token number">30</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h4 id="using-temporary"><a href="#using-temporary" class="headerlink" title="using temporary"></a>using temporary</h4><p><code>using temporary:</code>性能损耗大 ，用到了临时表。一般出现在<code>group by</code> 语句中。</p><p>查询那些列，就根据那些列 <code>group by</code></p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token number">a1</span> <span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">)</span> <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token number">a1</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>          <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> idx_a1_a2_a3  <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span> <span class="token number">30</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token number">a1</span> <span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">)</span> <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token number">a2</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+-----------------------------------------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>          <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                                                     <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+-----------------------------------------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> idx_a1_a2_a3  <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span> <span class="token number">30</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">temporary</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> filesort <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+-----------------------------------------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h4 id="using-index"><a href="#using-index" class="headerlink" title="using index"></a>using index</h4><p>性能提升; 索引覆盖（覆盖索引）。原因：不读取原文件，只从索引文件中获取数据 （不需要回表查询）</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> test02<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> <span class="token keyword">Table</span>  <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name     <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> Index_type <span class="token operator">|</span> <span class="token keyword">Comment</span> <span class="token operator">|</span> Index_comment <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token operator">|</span> test02 <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a1</span>          <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> test02 <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span>            <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">a2</span>          <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">|</span> test02 <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span>            <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">a3</span>          <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">0</span> <span class="token operator">|</span>     <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span> <span class="token keyword">BTREE</span>      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token number">a1</span><span class="token punctuation">,</span><span class="token number">a2</span> <span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span><span class="token operator">=</span><span class="token string">''</span> <span class="token operator">or</span> <span class="token number">a2</span><span class="token operator">=</span> <span class="token string">''</span> <span class="token punctuation">;</span> <span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>          <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> idx_a1_a2_a3  <span class="token operator">|</span> idx_a1_a2_a3 <span class="token operator">|</span> <span class="token number">30</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+--------------+---------+------+------+--------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">drop</span> <span class="token keyword">index</span> idx_a1_a2_a3 <span class="token keyword">on</span> test02<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">table</span> test02 <span class="token keyword">add</span> <span class="token keyword">index</span> idx_a1_a2<span class="token punctuation">(</span><span class="token number">a1</span><span class="token punctuation">,</span><span class="token number">a2</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span>Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token number">a1</span><span class="token punctuation">,</span><span class="token number">a3</span> <span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span><span class="token operator">=</span><span class="token string">''</span> <span class="token operator">or</span> <span class="token number">a3</span><span class="token operator">=</span> <span class="token string">''</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span> <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>  <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> <span class="token keyword">ALL</span>  <span class="token operator">|</span> idx_a1_a2     <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+------+---------------+------+---------+------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><p>如果用到了索引覆盖<code>(using index时)</code>，会对<code>possible_keys</code>和<code>key</code>造成影响：</p><p>如果没有<code>where</code>，则索引只出现在<code>key</code>中；如果有<code>where</code>，则索引 出现在<code>key</code>和<code>possible_keys</code>中。</p><pre class=" language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token number">a1</span><span class="token punctuation">,</span><span class="token number">a2</span> <span class="token keyword">from</span> test02 <span class="token keyword">where</span> <span class="token number">a1</span><span class="token operator">=</span><span class="token string">''</span> <span class="token operator">or</span> <span class="token number">a2</span><span class="token operator">=</span> <span class="token string">''</span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+-----------+---------+------+------+--------------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>       <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra                    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+-----------+---------+------+------+--------------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> idx_a1_a2     <span class="token operator">|</span> idx_a1_a2 <span class="token operator">|</span> <span class="token number">20</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">where</span><span class="token punctuation">;</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+-----------+---------+------+------+--------------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> mysql<span class="token operator">></span> <span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token number">a1</span><span class="token punctuation">,</span><span class="token number">a2</span> <span class="token keyword">from</span> test02  <span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> select_type <span class="token operator">|</span> <span class="token keyword">table</span>  <span class="token operator">|</span> <span class="token keyword">type</span>  <span class="token operator">|</span> possible_keys <span class="token operator">|</span> <span class="token keyword">key</span>       <span class="token operator">|</span> key_len <span class="token operator">|</span> ref  <span class="token operator">|</span> <span class="token keyword">rows</span> <span class="token operator">|</span> Extra       <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">SIMPLE</span>      <span class="token operator">|</span> test02 <span class="token operator">|</span> <span class="token keyword">index</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>          <span class="token operator">|</span> idx_a1_a2 <span class="token operator">|</span> <span class="token number">20</span>      <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> <span class="token keyword">Using</span> <span class="token keyword">index</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-------------+--------+-------+---------------+-----------+---------+------+------+-------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></code></pre><h2 id="查看SQL性能使用情况"><a href="#查看SQL性能使用情况" class="headerlink" title="查看SQL性能使用情况"></a>查看SQL性能使用情况</h2><pre><code>mysql&gt; select @@profiling;+-------------+| @@profiling |+-------------+|           0 |+-------------+1 row in set (0.00 sec)mysql&gt; set profiling=1; Query OK, 0 rows affected (0.00 sec)mysql&gt; select @@profiling;+-------------+| @@profiling |+-------------+|           1 |+-------------+1 row in set (0.00 sec)mysql&gt; select sleep(20);+-----------+| sleep(20) |+-----------+|         0 |+-----------+1 row in set (20.00 sec)mysql&gt; show profiles;+----------+-------------+--------------------+| Query_ID | Duration    | Query              |+----------+-------------+--------------------+|        1 |  0.00007700 | select @@profiling ||        2 | 20.00080200 | select sleep(20)   |+----------+-------------+--------------------+2 rows in set (0.00 sec)mysql&gt; show profile;+----------------------+-----------+| Status               | Duration  |+----------------------+-----------+| starting             |  0.000033 || checking permissions |  0.000002 || Opening tables       |  0.000004 || init                 |  0.000006 || optimizing           |  0.000002 || executing            |  0.000006 || User sleep           | 20.000621 || end                  |  0.000012 || query end            |  0.000002 || closing tables       |  0.000002 || freeing items        |  0.000042 || logging slow query   |  0.000003 || logging slow query   |  0.000065 || cleaning up          |  0.000004 |+----------------------+-----------+14 rows in set (0.00 sec)mysql&gt; show profile cpu,swaps for query 2;+----------------------+-----------+----------+------------+-------+| Status               | Duration  | CPU_user | CPU_system | Swaps |+----------------------+-----------+----------+------------+-------+| starting             |  0.000033 | 0.000000 |   0.000000 |     0 || checking permissions |  0.000002 | 0.000000 |   0.000000 |     0 || Opening tables       |  0.000004 | 0.000000 |   0.000000 |     0 || init                 |  0.000006 | 0.000000 |   0.000000 |     0 || optimizing           |  0.000002 | 0.000000 |   0.000000 |     0 || executing            |  0.000006 | 0.000000 |   0.000000 |     0 || User sleep           | 20.000621 | 0.006000 |   0.005999 |     0 || end                  |  0.000012 | 0.000000 |   0.000000 |     0 || query end            |  0.000002 | 0.000000 |   0.000000 |     0 || closing tables       |  0.000002 | 0.000000 |   0.000000 |     0 || freeing items        |  0.000042 | 0.000000 |   0.000000 |     0 || logging slow query   |  0.000003 | 0.000000 |   0.000000 |     0 || logging slow query   |  0.000065 | 0.000000 |   0.000000 |     0 || cleaning up          |  0.000004 | 0.000000 |   0.000000 |     0 |+----------------------+-----------+----------+------------+-------+14 rows in set (0.00 sec)</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.hollischuang.com/archives/3818" target="_blank" rel="noopener">我以为我对Mysql索引很了解，直到我遇到了阿里的面试官-HollisChuang’s Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5特性_CSS3基础_HTML5移动端基础_touch事件基础_touch多点触摸事件</title>
      <link href="/2019/05/25/html5-te-xing-css3-ji-chu-html5-yi-dong-duan-ji-chu-touch-shi-jian-ji-chu-touch-duo-dian-hong-mo-shi-jian/"/>
      <url>/2019/05/25/html5-te-xing-css3-ji-chu-html5-yi-dong-duan-ji-chu-touch-shi-jian-ji-chu-touch-duo-dian-hong-mo-shi-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h1><h2 id="定位geolocation"><a href="#定位geolocation" class="headerlink" title="定位geolocation"></a>定位<code>geolocation</code></h2><ul><li><code>PC</code>端,主要是获取<code>IP</code>地址进行定位，精度非常差</li><li>移动端，主要通过<code>GPS</code>定位，精度很高</li></ul><h3 id="geolocation"><a href="#geolocation" class="headerlink" title="geolocation"></a>geolocation</h3><ul><li>getCurrentPosition 获取位置(1次)<ul><li>坐标信息 <code>res.coords</code></li></ul></li><li>watchPosition 不断获取位置</li><li>clearWatch</li></ul><p>定位.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.bmap</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">600</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://api.map.baidu.com/api?v<span class="token punctuation">=</span>1.2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">var</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//getCurrentPosition(成功, 失败, 参数)</span>        navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>coords<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//创建和初始化地图函数：</span>          <span class="token keyword">function</span> <span class="token function">initMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建地图</span>            <span class="token function">setMapEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置地图事件</span>            <span class="token function">addMapControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向地图添加控件</span>            <span class="token function">addMapOverlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向地图添加覆盖物</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token string">"bmap"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">centerAndZoom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>longitude<span class="token punctuation">,</span>res<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>latitude<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">setMapEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            map<span class="token punctuation">.</span><span class="token function">enableScrollWheelZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">enableKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">enableDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">enableDoubleClickZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">addClickHandler</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>window<span class="token punctuation">)</span><span class="token punctuation">{</span>            target<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              target<span class="token punctuation">.</span><span class="token function">openInfoWindow</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">function</span> <span class="token function">addMapOverlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> markers <span class="token operator">=</span> <span class="token punctuation">[</span>              <span class="token punctuation">{</span>content<span class="token punctuation">:</span><span class="token string">"来找我啊"</span><span class="token punctuation">,</span>title<span class="token punctuation">:</span><span class="token string">"我的位置"</span><span class="token punctuation">,</span>imageOffset<span class="token punctuation">:</span> <span class="token punctuation">{</span>width<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>height<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>position<span class="token punctuation">:</span><span class="token punctuation">{</span>lat<span class="token punctuation">:</span>res<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>latitude<span class="token punctuation">,</span>lng<span class="token punctuation">:</span>res<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>longitude<span class="token punctuation">}</span><span class="token punctuation">}</span>            <span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> markers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token keyword">var</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>lng<span class="token punctuation">,</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>lat<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">var</span> marker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span><span class="token punctuation">{</span>icon<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Icon</span><span class="token punctuation">(</span><span class="token string">"http://api.map.baidu.com/lbsapi/createmap/images/icon.png"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span>                imageOffset<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>imageOffset<span class="token punctuation">.</span>width<span class="token punctuation">,</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>imageOffset<span class="token punctuation">.</span>height<span class="token punctuation">)</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">var</span> label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span><span class="token punctuation">{</span>offset<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">var</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span>                width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>                title<span class="token punctuation">:</span> markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span>                enableMessage<span class="token punctuation">:</span> <span class="token boolean">false</span>              <span class="token punctuation">}</span><span class="token punctuation">;</span>              <span class="token keyword">var</span> infoWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>InfoWindow</span><span class="token punctuation">(</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>content<span class="token punctuation">,</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span>              marker<span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token function">addClickHandler</span><span class="token punctuation">(</span>marker<span class="token punctuation">,</span>infoWindow<span class="token punctuation">)</span><span class="token punctuation">;</span>              map<span class="token punctuation">.</span><span class="token function">addOverlay</span><span class="token punctuation">(</span>marker<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token comment" spellcheck="true">//向地图添加控件</span>          <span class="token keyword">function</span> <span class="token function">addMapControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> scaleControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>ScaleControl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>anchor<span class="token punctuation">:</span>BMAP_ANCHOR_BOTTOM_LEFT<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            scaleControl<span class="token punctuation">.</span><span class="token function">setUnit</span><span class="token punctuation">(</span>BMAP_UNIT_IMPERIAL<span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>scaleControl<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> navControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>NavigationControl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>anchor<span class="token punctuation">:</span>BMAP_ANCHOR_TOP_LEFT<span class="token punctuation">,</span>type<span class="token punctuation">:</span>BMAP_NAVIGATION_CONTROL_LARGE<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>navControl<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> overviewControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>OverviewMapControl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>anchor<span class="token punctuation">:</span>BMAP_ANCHOR_BOTTOM_RIGHT<span class="token punctuation">,</span>isOpen<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>overviewControl<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">var</span> map<span class="token punctuation">;</span>            <span class="token function">initMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>定位<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bmap<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bmap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="百度地图生成器"><a href="#百度地图生成器" class="headerlink" title="百度地图生成器"></a>百度地图生成器</h3><ul><li><a href="http://api.map.baidu.com/lbsapi/createmap/index.html" target="_blank" rel="noopener">创建地图-百度地图生成器</a><ul><li>定位中心点</li><li>设置地图</li><li>添加标注</li><li>获取代码</li></ul></li><li><code>src=&quot;http://api.map.baidu.com/api?v=1.2&quot;</code>版本用1.2，不然需要申请密钥，麻烦</li></ul><p>bmap.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>百度地图,百度地图API，百度地图自定义工具，百度地图所见即所得工具<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>百度地图API自定义地图，帮助用户在可视化操作下生成百度地图<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>百度地图API自定义地图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--引用百度地图API--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://api.map.baidu.com/api?v<span class="token punctuation">=</span>1.2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--百度地图容器--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">700</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">550</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token hexcode">#ccc</span> solid <span class="token number">1</span>px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">12</span>px</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span><span class="token number">600</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>地图生成工具基于百度地图JS api v2.0版本开发，使用请申请密匙。      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://developer.baidu.com/map/index.php?title<span class="token punctuation">=</span>jspopular/guide/introduction<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#2f83c7</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>了解如何申请密匙<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://lbsyun.baidu.com/apiconsole/key?application<span class="token punctuation">=</span>key<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#2f83c7</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>申请密匙<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">//创建和初始化地图函数：</span>    <span class="token keyword">function</span> <span class="token function">initMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建地图</span>      <span class="token function">setMapEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置地图事件</span>      <span class="token function">addMapControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向地图添加控件</span>      <span class="token function">addMapOverlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向地图添加覆盖物</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token string">"map"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      map<span class="token punctuation">.</span><span class="token function">centerAndZoom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span><span class="token number">116.403963</span><span class="token punctuation">,</span><span class="token number">39.917167</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">setMapEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      map<span class="token punctuation">.</span><span class="token function">enableScrollWheelZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      map<span class="token punctuation">.</span><span class="token function">enableKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      map<span class="token punctuation">.</span><span class="token function">enableDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      map<span class="token punctuation">.</span><span class="token function">enableDoubleClickZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">addClickHandler</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>window<span class="token punctuation">)</span><span class="token punctuation">{</span>      target<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        target<span class="token punctuation">.</span><span class="token function">openInfoWindow</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">addMapOverlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">var</span> markers <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>content<span class="token punctuation">:</span><span class="token string">"来找我啊"</span><span class="token punctuation">,</span>title<span class="token punctuation">:</span><span class="token string">"我的位置"</span><span class="token punctuation">,</span>imageOffset<span class="token punctuation">:</span> <span class="token punctuation">{</span>width<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>height<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>position<span class="token punctuation">:</span><span class="token punctuation">{</span>lat<span class="token punctuation">:</span><span class="token number">39.914898</span><span class="token punctuation">,</span>lng<span class="token punctuation">:</span><span class="token number">116.404035</span><span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> markers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>lng<span class="token punctuation">,</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>lat<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> marker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span><span class="token punctuation">{</span>icon<span class="token punctuation">:</span><span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Icon</span><span class="token punctuation">(</span><span class="token string">"http://api.map.baidu.com/lbsapi/createmap/images/icon.png"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span>          imageOffset<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>imageOffset<span class="token punctuation">.</span>width<span class="token punctuation">,</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>imageOffset<span class="token punctuation">.</span>height<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Label</span><span class="token punctuation">(</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span><span class="token punctuation">{</span>offset<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>Size</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span>          width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>          title<span class="token punctuation">:</span> markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span>          enableMessage<span class="token punctuation">:</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> infoWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>InfoWindow</span><span class="token punctuation">(</span>markers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>content<span class="token punctuation">,</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span>        marker<span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">addClickHandler</span><span class="token punctuation">(</span>marker<span class="token punctuation">,</span>infoWindow<span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">addOverlay</span><span class="token punctuation">(</span>marker<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//向地图添加控件</span>    <span class="token keyword">function</span> <span class="token function">addMapControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">var</span> scaleControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>ScaleControl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>anchor<span class="token punctuation">:</span>BMAP_ANCHOR_BOTTOM_LEFT<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      scaleControl<span class="token punctuation">.</span><span class="token function">setUnit</span><span class="token punctuation">(</span>BMAP_UNIT_IMPERIAL<span class="token punctuation">)</span><span class="token punctuation">;</span>      map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>scaleControl<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> navControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>NavigationControl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>anchor<span class="token punctuation">:</span>BMAP_ANCHOR_TOP_LEFT<span class="token punctuation">,</span>type<span class="token punctuation">:</span>BMAP_NAVIGATION_CONTROL_LARGE<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>navControl<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> overviewControl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMap<span class="token punctuation">.</span>OverviewMapControl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>anchor<span class="token punctuation">:</span>BMAP_ANCHOR_BOTTOM_RIGHT<span class="token punctuation">,</span>isOpen<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span>overviewControl<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> map<span class="token punctuation">;</span>      <span class="token function">initMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="localStorage"><a href="#localStorage" class="headerlink" title="localStorage"></a>localStorage</h2><ul><li><p>cookie</p><ul><li>存储内容比较小，只有4K</li><li>浏览器和服务器共享</li></ul></li><li><p>localStorage</p><ul><li>存储内容比较大，有5M</li><li>永久存储</li><li>浏览器独享，存在跨域问题</li><li>主要用途：记录用户名、保存草稿</li></ul></li><li><p>sessionStorage</p><ul><li>会话期间存储，浏览器一关就没了</li></ul></li></ul><h3 id="存和取"><a href="#存和取" class="headerlink" title="存和取"></a>存和取</h3><p>localStorage.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">//localStorage.a=12;        //存</span>    <span class="token comment" spellcheck="true">//alert(localStorage.a);    //取</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//localStorage.b=5;</span>    <span class="token comment" spellcheck="true">//localStorage.c=99;</span>    <span class="token comment" spellcheck="true">//遍历</span>    <span class="token comment" spellcheck="true">/*for(let name in localStorage){      alert(`${name}: ${localStorage[name]}`);    }*/</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>localStorage<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> key<span class="token operator">=</span>localStorage<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>localStorage<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>localStorage2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">delete</span> localStorage<span class="token punctuation">.</span>a<span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="WebWorker"><a href="#WebWorker" class="headerlink" title="WebWorker"></a>WebWorker</h2><ul><li>多进程，更充分发挥计算机资源（内存×、IO×、网络×、CPU√），这里指<code>CPU</code></li><li>主进程也称为UI进程</li><li>子进程也称为工作进程，子进程不能再创建子进程</li><li>不能控制<code>UI</code>的东西，但是可以进行数据交互</li><li>也存在跨域问题</li></ul><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><ul><li>发送数据<code>oW.postMessage({n1: 25, n2: 99})</code></li><li>接收数据<code>oW.onmessage=function</code></li></ul><p>1.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">this</span><span class="token punctuation">.</span>onmessage<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">let</span> <span class="token punctuation">{</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">}</span><span class="token operator">=</span>ev<span class="token punctuation">.</span>data<span class="token punctuation">;</span>  <span class="token keyword">let</span> result<span class="token operator">=</span>n1<span class="token operator">+</span>n2<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>webworker.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> oW<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">'1.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oW<span class="token punctuation">.</span>onmessage<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    oW<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>n1<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> n2<span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>webworker2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> oW<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">'1.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oW<span class="token punctuation">.</span>onmessage<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    oW<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="canvas"><a href="#canvas" class="headerlink" title="canvas"></a>canvas</h2><h3 id="canvas-1"><a href="#canvas-1" class="headerlink" title="canvas"></a>canvas</h3><ul><li>位图,放大会失真</li><li><code>HTML5</code>标准</li></ul><h3 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h3><ul><li>矢量图，可以无限缩放</li><li>不是<code>HTML5</code>的东西，是一个独立标准</li></ul><h3 id="VML"><a href="#VML" class="headerlink" title="VML"></a>VML</h3><ul><li>矢量图，可以无限缩放</li><li><code>IE</code>的矢量图，搭配<code>SVG</code>可以解决所有浏览器兼容</li></ul><h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><ul><li>路径操作,相当于<code>PS</code>的选区操作，没有效果，还需后续操作，需要闭合，一定要用<code>closePath</code></li><li>边线 <code>stroke()</code></li><li>填充<code>fill()</code></li></ul><h4 id="版本一"><a href="#版本一" class="headerlink" title="版本一"></a>版本一</h4><p>canvas.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">body </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#c1</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oC<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'c1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//图形上下文——接口：所有绘图方法、属性</span>      <span class="token keyword">let</span> gd<span class="token operator">=</span>oC<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//路径操作——类似PS的选区</span>      <span class="token comment" spellcheck="true">//起点</span>      gd<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">470</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">778</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">532</span><span class="token punctuation">,</span> <span class="token number">411</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">312</span><span class="token punctuation">,</span> <span class="token number">259</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">470</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//?</span>      gd<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//gd.fill();</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本二"><a href="#版本二" class="headerlink" title="版本二"></a>版本二</h4><ul><li>手动闭合<code>gd.lineTo(470, 81)</code>，如果有线宽<code>lineWidth</code>的话，会导致闭合不完整，推荐使用自带的闭合方法<code>closePath</code></li></ul><p>canvas2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">body </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#c1</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oC<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'c1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//图形上下文——接口：所有绘图方法、属性</span>      <span class="token keyword">let</span> gd<span class="token operator">=</span>oC<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//路径操作——类似PS的选区</span>      <span class="token comment" spellcheck="true">//起点</span>      gd<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">470</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">778</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">532</span><span class="token punctuation">,</span> <span class="token number">411</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">312</span><span class="token punctuation">,</span> <span class="token number">259</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//gd.lineTo(470, 81);     //?</span>      gd<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//gd.fill();</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本三"><a href="#版本三" class="headerlink" title="版本三"></a>版本三</h4><ul><li>线宽：lineWidth</li><li>线色：strokeStyle</li><li>填充颜色：fillStyle</li></ul><p>canvas3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">body </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#c1</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oC<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'c1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//图形上下文——接口：所有绘图方法、属性</span>      <span class="token keyword">let</span> gd<span class="token operator">=</span>oC<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//路径操作——类似PS的选区</span>      <span class="token comment" spellcheck="true">//起点</span>      gd<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">470</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">778</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">532</span><span class="token punctuation">,</span> <span class="token number">411</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">312</span><span class="token punctuation">,</span> <span class="token number">259</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//gd.lineTo(470, 81);     //?</span>      gd<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//gd.lineWidth=20;</span>      <span class="token comment" spellcheck="true">//gd.strokeStyle='green';</span>      <span class="token comment" spellcheck="true">//gd.stroke();</span>      gd<span class="token punctuation">.</span>fillStyle<span class="token operator">=</span><span class="token string">'yellow'</span><span class="token punctuation">;</span>      gd<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h1 id="CSS3基础"><a href="#CSS3基础" class="headerlink" title="CSS3基础"></a>CSS3基础</h1><h2 id="圆角"><a href="#圆角" class="headerlink" title="圆角"></a>圆角</h2><ul><li>CSS3圆角只需设置一个属性<code>border-radius</code>（含义是”边框半径”）</li></ul><h3 id="版本一-1"><a href="#版本一-1" class="headerlink" title="版本一"></a>版本一</h3><ul><li><code>border-radius</code>属性提供一个值，就能同时设置四个圆角的半径</li><li>圆角的”水平半径”（<code>horizontal radius</code>）和”垂直半径”（<code>vertical radius</code>）都设置为<code>10px</code></li></ul><p>圆角.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-1"><a href="#版本二-1" class="headerlink" title="版本二"></a>版本二</h3><ul><li>4个角的水平半径是<code>10px</code>,垂直半径是<code>50px</code></li></ul><p>圆角2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">10</span>px/<span class="token number">50</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558852291253.png" alt="1558852291253"></p><h3 id="版本三-1"><a href="#版本三-1" class="headerlink" title="版本三"></a>版本三</h3><ul><li>用斜杠区分，第一组值表示水平半径，第二组值表示垂直半径</li></ul><p>圆角3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">10</span>px <span class="token number">50</span>px <span class="token number">100</span>px <span class="token number">200</span>px/<span class="token number">200</span>px <span class="token number">100</span>px <span class="token number">50</span>px <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558853206854.png" alt="1558853206854"></p><pre><code>border-radius: 1em/5em;/* 等价于： */border-top-left-radius:     1em 5em;border-top-right-radius:    1em 5em;border-bottom-right-radius: 1em 5em;border-bottom-left-radius:  1em 5em;border-radius: 4px 3px 6px / 2px 4px;/* 等价于： */border-top-left-radius:     4px 2px;border-top-right-radius:    3px 4px;border-bottom-right-radius: 6px 2px;border-bottom-left-radius:  3px 4px;</code></pre><h3 id="版本四"><a href="#版本四" class="headerlink" title="版本四"></a>版本四</h3><ul><li>4个角，水平半径是宽度的50%和垂直半径是高度的50%</li></ul><p>圆角4.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h2><ul><li>文字阴影<code>text-shadow</code></li><li>盒模型阴影<code>box-shadow</code></li></ul><h3 id="版本一-2"><a href="#版本一-2" class="headerlink" title="版本一"></a>版本一</h3><ul><li>文字阴影，<code>text-shadow:5px 50px 1px red</code>,水平<code>5px</code>,垂直<code>50px</code>,阴影程度<code>1px</code>,阴影颜色红色</li></ul><p>阴影.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">text-shadow</span><span class="token punctuation">:</span><span class="token number">5</span>px <span class="token number">50</span>px <span class="token number">1</span>px red<span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      这是一些字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-2"><a href="#版本二-2" class="headerlink" title="版本二"></a>版本二</h3><ul><li>阴影类型 <code>inset</code>投影为内阴影，可选</li><li>X轴偏移量<code>5px</code></li><li>Y轴偏移量<code>50px</code></li><li>阴影模糊半径<code>5px</code></li><li>阴影扩展半径，可选 </li><li>阴影颜色红色</li></ul><p>阴影2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span>inset <span class="token number">5</span>px <span class="token number">50</span>px <span class="token number">5</span>px red<span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      这是一些字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本三-2"><a href="#版本三-2" class="headerlink" title="版本三"></a>版本三</h3><p>阴影3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span><span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">2</span>px black<span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">box-shadow</span><span class="token punctuation">:</span>inset <span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">2</span>px black<span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      这是一些字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本四-1"><a href="#版本四-1" class="headerlink" title="版本四"></a>版本四</h3><ul><li><code>box-shadow:2px 2px 20px 50px black</code>，分别代表水平偏移<code>2px</code>,垂直偏移<code>2px</code>,阴影模糊度<code>20px</code>,阴影扩展半径<code>50px</code>，阴影颜色黑色</li></ul><p>阴影4.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span><span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">20</span>px <span class="token number">50</span>px black<span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      这是一些字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Using_CSS_gradients" target="_blank" rel="noopener">使用 CSS 渐变 - Web 开发者指南 | MDN</a></p><ul><li>类型 <ul><li>线性渐变<code>Linear Gradients</code></li><li>径向渐变<code>Radial Gradients</code></li><li>圆锥渐变<code>conic-gradient</code></li></ul></li><li>渐变属于背景图片中的一种</li></ul><h3 id="版本一-3"><a href="#版本一-3" class="headerlink" title="版本一"></a>版本一</h3><ul><li>要创建最基本的渐变类型，只需指定两种颜色即可。 这些被称为色标。 至少指定两个色标，</li></ul><p>渐变.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">background-image</span><span class="token punctuation">:</span><span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>red, green<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-3"><a href="#版本二-3" class="headerlink" title="版本二"></a>版本二</h3><ul><li>使用多种颜色渐变，默认情况下，所设置颜色会均匀分布在渐变路径中</li></ul><p>渐变2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">background-image</span><span class="token punctuation">:</span><span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>red, green, yellow, black, blue, green<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本三-3"><a href="#版本三-3" class="headerlink" title="版本三"></a>版本三</h3><ul><li><code>-webkit-linear-gradient(red 50%, green 50%)</code>红色占50%，绿色占50%，即没有渐变效果</li></ul><p>渐变3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">background-image</span><span class="token punctuation">:</span><span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>red <span class="token number">50%</span>, green <span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558856260223.png" alt="1558856260223"></p><h3 id="版本四-2"><a href="#版本四-2" class="headerlink" title="版本四"></a>版本四</h3><ul><li><p>径向渐变</p></li><li><p>一个中心点向外围进行颜色渐变</p></li><li><p><code>-webkit-radial-gradient(left top, 100px 100px, red 30%, green 30%)</code>渐变中心点在<code>left top</code></p></li></ul><p>4.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">background-image</span><span class="token punctuation">:</span><span class="token function">-webkit-radial-gradient</span><span class="token punctuation">(</span>left top, <span class="token number">100</span>px <span class="token number">100</span>px, red <span class="token number">30%</span>, green <span class="token number">30%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558856637969.png" alt="1558856637969"></p><h2 id="rgba"><a href="#rgba" class="headerlink" title="rgba"></a>rgba</h2><ul><li><code>rgba</code>色彩模式与<code>RGB</code>相同，只是在<code>GB</code>模式上新增了<code>Alpha</code>透明度</li><li>R：红色值。正整数 <code>0 - 255</code>| 百分数<code>0.0% - 100.0%</code></li><li>G：绿色值</li><li>B：蓝色值</li><li>A：<code>Alpha</code>透明度,取值<code>0~1</code>之间。</li></ul><p>rgba.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">body </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#F0F</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      放一些文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="transform"><a href="#transform" class="headerlink" title="transform"></a>transform</h2><ul><li>transform一定要加初始值</li><li>类型<ul><li>translate  平移</li><li>rotate 旋转</li><li>scale  缩放</li><li>skew  倾斜</li></ul></li></ul><h3 id="版本一-4"><a href="#版本一-4" class="headerlink" title="版本一"></a>版本一</h3><ul><li>点击时，顺时针旋转90度</li></ul><p>transform-rotate.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span></span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      放一些文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-4"><a href="#版本二-4" class="headerlink" title="版本二"></a>版本二</h3><ul><li>点击时,元素在 X轴上拉伸2倍，在 Y轴上拉伸2部</li></ul><p>transform-scale.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span>,<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span></span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">2</span>,<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      放一些文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本三-4"><a href="#版本三-4" class="headerlink" title="版本三"></a>版本三</h3><p>transform-scale2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span>,<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span></span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span>,-<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      放一些文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本四-3"><a href="#版本四-3" class="headerlink" title="版本四"></a>版本四</h3><p>transform-scale3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span>,<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span></span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      放一些文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本五"><a href="#版本五" class="headerlink" title="版本五"></a>版本五</h3><ul><li>设置 X轴和 Y轴的倾斜角度</li></ul><p>transform-skew.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">skew</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span></span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">skew</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">30</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      放一些文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本六"><a href="#版本六" class="headerlink" title="版本六"></a>版本六</h3><ul><li>元素沿着 X轴正方向平移<code>100px</code>，沿着 Y轴正方向平移 <code>200px</code></li></ul><p>transform-translate.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span></span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">100</span>px,<span class="token number">200</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      放一些文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本七"><a href="#版本七" class="headerlink" title="版本七"></a>版本七</h3><ul><li>CSS3的样式不改变盒模型</li><li>盒模型，物体占据的空间</li><li>CSS3样式(尤其是translate)不会引起重排、重绘，性能更高</li><li>DOM操作——越大越慢<ul><li>重排</li><li>重绘</li></ul></li></ul><p>不改变盒模型.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> li </span><span class="token punctuation">{</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">40</span>px black<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> li<span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ul1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="transform高级"><a href="#transform高级" class="headerlink" title="transform高级"></a>transform高级</h2><h3 id="版本一-5"><a href="#版本一-5" class="headerlink" title="版本一"></a>版本一</h3><ul><li>可以多个变换一起用，<code>{transform:scale(2,1) rotate(45deg)}</code>先旋转45度，再横向拉伸2倍，顺序是”反的”，看似是反的，其实是正的：矩阵乘法</li></ul><p>多个变换一起用.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">2</span>,<span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-5"><a href="#版本二-5" class="headerlink" title="版本二"></a>版本二</h3><ul><li>2d<ul><li>rotate</li><li>translate</li></ul></li><li>3d<ul><li>rotateX/rotateY/rotateZ</li><li>translateX/translateY/translateZ</li></ul></li><li>景深/透视<code>perspective</code>,数值越小代表3d效果越明显</li></ul><p>3d变换.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">10000</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">10000</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">60</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h3 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h3><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions" target="_blank" rel="noopener">使用 CSS transitions - CSS（层叠样式表） | MDN</a></p></li><li><p>简单、容易、方便，比较常用</p></li></ul><h4 id="版本一-6"><a href="#版本一-6" class="headerlink" title="版本一"></a>版本一</h4><ul><li><code>transition:1s all ease</code>时间、样式、形式</li></ul><p>transition.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*.box:active {width:400px; height:400px; background:yellow; font-size:30px;}*/</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token string">'400px'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      sdfasdf    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本二-6"><a href="#版本二-6" class="headerlink" title="版本二"></a>版本二</h4><p>transition2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      sdfasdf    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本三-5"><a href="#版本三-5" class="headerlink" title="版本三"></a>版本三</h4><p>transition3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">5</span>s all ease    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      sdfasdf    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="animation"><a href="#animation" class="headerlink" title="animation"></a>animation</h3><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation" target="_blank" rel="noopener">animation - CSS（层叠样式表） | MDN</a></p></li><li><p>强大、麻烦 ，复杂的链式动画</p></li></ul><h4 id="版本一-7"><a href="#版本一-7" class="headerlink" title="版本一"></a>版本一</h4><ul><li>定义<code>@keyframes aaa</code></li><li>调用</li></ul><p>animation.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token atrule"><span class="token rule">@keyframes</span> aaa</span> <span class="token punctuation">{</span>      <span class="token selector">0%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">}</span>      <span class="token selector">25%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector">50%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector">75%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector">100%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span>      <span class="token property">animation-name</span><span class="token punctuation">:</span> aaa<span class="token punctuation">;</span>      <span class="token property">animation-duration</span><span class="token punctuation">:</span> <span class="token number">10</span>s<span class="token punctuation">;</span>      <span class="token property">animation-timing-function</span><span class="token punctuation">:</span>ease<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/*      animation-fill-mode: ;      animation-delay: ;      animation-iteration-count: ;      animation-direction: ;      animation-play-state: ;      */</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      sdfasdf    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本二-7"><a href="#版本二-7" class="headerlink" title="版本二"></a>版本二</h4><p>animation2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token atrule"><span class="token rule">@keyframes</span> aaa</span> <span class="token punctuation">{</span>      <span class="token selector">0%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">}</span>      <span class="token selector">25%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector">50%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">14</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector">75%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector">100%</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">animation-name</span><span class="token punctuation">:</span> aaa<span class="token punctuation">;</span>      <span class="token property">animation-duration</span><span class="token punctuation">:</span> <span class="token number">2</span>s<span class="token punctuation">;</span>      <span class="token property">animation-timing-function</span><span class="token punctuation">:</span>ease<span class="token punctuation">;</span>      <span class="token property">animation-fill-mode</span><span class="token punctuation">:</span>forwards<span class="token punctuation">;</span>      <span class="token property">animation-iteration-count</span><span class="token punctuation">:</span>infinite<span class="token punctuation">;</span>      <span class="token property">animation-direction</span><span class="token punctuation">:</span>alternate<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span>      <span class="token property">animation-play-state</span><span class="token punctuation">:</span>paused<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/*      animation-delay: 2s;      */</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      sdfasdf    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本三-6"><a href="#版本三-6" class="headerlink" title="版本三"></a>版本三</h4><p>animation3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token atrule"><span class="token rule">@keyframes</span> aaa</span> <span class="token punctuation">{</span>      <span class="token selector">0%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">10%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">20</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">20%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">20</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">30%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">70%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">80%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">340</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">90%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">380</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">100%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>      <span class="token property">animation-name</span><span class="token punctuation">:</span> aaa<span class="token punctuation">;</span>      <span class="token property">animation-duration</span><span class="token punctuation">:</span> <span class="token number">1</span>s<span class="token punctuation">;</span>      <span class="token property">animation-timing-function</span><span class="token punctuation">:</span>ease<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      sdfasdf    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本四-4"><a href="#版本四-4" class="headerlink" title="版本四"></a>版本四</h4><p>animation4.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token atrule"><span class="token rule">@keyframes</span> aaa</span> <span class="token punctuation">{</span>      <span class="token selector">0%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">10%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">20</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">20%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">20</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">30%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">70%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">80%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">340</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">90%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">380</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>      <span class="token selector">100%</span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.active</span> </span><span class="token punctuation">{</span>      <span class="token property">animation-name</span><span class="token punctuation">:</span> aaa<span class="token punctuation">;</span>      <span class="token property">animation-duration</span><span class="token punctuation">:</span> <span class="token number">2</span>s<span class="token punctuation">;</span>      <span class="token property">animation-timing-function</span><span class="token punctuation">:</span>ease<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>this.className<span class="token punctuation">=</span><span class="token punctuation">'</span>box active<span class="token punctuation">'</span>;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      sdfasdf    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h1 id="HTML5移动端基础"><a href="#HTML5移动端基础" class="headerlink" title="HTML5移动端基础"></a>HTML5移动端基础</h1><h2 id="transform-3D"><a href="#transform-3D" class="headerlink" title="transform 3D"></a>transform 3D</h2><ul><li><p>X/Y/Z坐标轴</p></li><li><p>透视</p><ul><li><code>perspective</code>,只需要给最外层(<strong>根</strong>父元素)加一次</li><li><code>preserve-3d</code>添加在子元素的<strong>直接</strong>父元素，使得子元素可以脱离元素，每个需要自己出来的地方都得加</li></ul></li></ul><h3 id="版本一-8"><a href="#版本一-8" class="headerlink" title="版本一"></a>版本一</h3><ul><li><code>transform:perspective(700px) rotateZ(0deg);</code>要有初始值</li><li><code>perspective(700px)</code>要有透视，才能产生3d效果</li><li>Z轴旋转，圆圈顺时针旋转</li></ul><p>坐标轴.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-8"><a href="#版本二-8" class="headerlink" title="版本二"></a>版本二</h3><ul><li>X轴旋转，前后旋转</li></ul><p>坐标轴2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本三-7"><a href="#版本三-7" class="headerlink" title="版本三"></a>版本三</h3><ul><li>Y轴旋转，左右旋转</li></ul><p>坐标轴3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      文字    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本四-5"><a href="#版本四-5" class="headerlink" title="版本四"></a>版本四</h3><ul><li><p><code>transform:perspective(700px) rotateX(60deg) rotateZ(40deg)</code>只有用了<code>transform</code>,就必须指定初始值，点击前的<code>transform</code>和点击后的<code>transform</code></p></li><li><p>父元素<code>.box</code>处于最外层，给自己加<code>perspective(700px)</code>景深,使得自己产生透视效果</p><ul><li>为了让子元素脱离父元素产生<code>3d</code>效果，需要给父元素加上<code>transform-style: preserve-3d;</code>，因此<code>.child</code>元素为了脱离父元素<code>.box</code>,需要给父元素<code>.box</code>加上<code>transform-style: preserve-3d;</code>；同样，<code>.child2</code>元素为了脱离父元素<code>.child</code>元素，需要给父元素<code>.child</code>加上<code>transform-style: preserve-3d;</code>；</li></ul></li><li><p>点击元素<code>child</code>向上平移100高度，<code>.child:active {transform: translateZ(100px)}</code></p></li><li><p>点击元素<code>child2</code>向上平移50高度，<code>.child:active {transform: translateZ(50px)}</code></p></li></ul><p>坐标轴4.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">60</span>deg<span class="token punctuation">)</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span><span class="token number">40</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/*给父级去掉限制*/</span>      <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-<span class="token number">3</span>d<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.child</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-<span class="token number">3</span>d<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.child</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">100</span>px<span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.child2</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span>      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.child2</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">50</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>child2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          文字        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本五-1"><a href="#版本五-1" class="headerlink" title="版本五"></a>版本五</h3><p>3D盒子.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">150</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">5</span>s all ease<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-<span class="token number">3</span>d<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">198</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">198</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">255</span>,<span class="token number">0</span>,<span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div<span class="token class">.front</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">100</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div<span class="token class">.back</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">100</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div<span class="token class">.left</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">100</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div<span class="token class">.right</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">100</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div<span class="token class">.top</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">100</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div<span class="token class">.down</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">100</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>前<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>back<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>后<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本六-1"><a href="#版本六-1" class="headerlink" title="版本六"></a>版本六</h3><ul><li>点击元素<code>.box</code>盒子向右旋转180度<code>transform:perspective(700px) rotateY(180deg);</code></li><li>元素<code>.front</code>向上平移<code>transform:translateZ(1px);</code>,使得该元素放置在上面<code>transform:translateZ(1px);</code></li><li>元素<code>.back</code>向下平移<code>transform:translateZ(-1px) scaleX(-1);</code>，使得该元素放置在下面</li></ul><p>翻转.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>      <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-<span class="token number">3</span>d<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div </span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div<span class="token class">.front</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">1</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> div<span class="token class">.back</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">1</span>px<span class="token punctuation">)</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>-<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>前<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>back<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>后<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本七-1"><a href="#版本七-1" class="headerlink" title="版本七"></a>版本七</h3><ul><li>第二页<code>.child</code>旋转中心轴靠左<code>transform-origin:left;</code></li><li>点击第二页<code>.child</code>向左旋转180度<code>transform:rotateY(-180deg)</code></li></ul><p>翻书.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">600</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">transform-style</span><span class="token punctuation">:</span>preserve-<span class="token number">3</span>d<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">perspective</span><span class="token punctuation">(</span><span class="token number">700</span>px<span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">20</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> <span class="token class">.page</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">298</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">398</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> <span class="token class">.page1</span> </span><span class="token punctuation">{</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> <span class="token class">.page4</span> </span><span class="token punctuation">{</span><span class="token property">right</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> <span class="token class">.child</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">transform-style</span><span class="token punctuation">:</span>preserve-<span class="token number">3</span>d<span class="token punctuation">;</span> <span class="token property">transform-origin</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> <span class="token class">.page2</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">1</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> <span class="token class">.page3</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">1</span>px<span class="token punctuation">)</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>-<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> <span class="token class">.child</span> </span><span class="token punctuation">{</span><span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">1</span>s all ease<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span><span class="token pseudo-class">:active</span> <span class="token class">.child</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page page1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        3月5日，深圳市住房公积金管理中心公众号发文称，从2018年1月起，深圳市住建局联合市规划国土委推出六项维护公积金缴存职工购房权益的措施，在全市范围内开展专项整治行动，对拒绝职工使用公积金贷款购房的房地产开发商和中介机构依法查处。      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page page2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          据深圳市住房公积金管理中心介绍，从行动开始到3月初，全市有21个新建商品房项目到市公积金中心办理了公积金贷款房源入库工作，新建商品房项目入库率达到95%。        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page page3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          文中明确，开发商不得拒绝公积金贷款。深圳市规划国土委将加强市场监管，要求房地产开发企业在销售商品房时，提供不拒绝购房人使用公积金贷款的书面承诺，并在项目销售现场对外公示。        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page page4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        与此同时，房地产开发企业和房屋销售中介机构拒绝公积金贷款，或者房地产开发企业未在楼盘销售现场公示不拒绝购房人使用公积金贷款书面承诺的，职工可电话举报违规楼盘。      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="移动端开发"><a href="#移动端开发" class="headerlink" title="移动端开发"></a>移动端开发</h2><ul><li><a href="https://www.cnblogs.com/axl234/p/5156956.html" target="_blank" rel="noopener">移动端适配：font-size设置的思考 - axl234 - 博客园</a></li></ul><h3 id="移动端适配"><a href="#移动端适配" class="headerlink" title="移动端适配"></a>移动端适配</h3><h4 id="版本一-9"><a href="#版本一-9" class="headerlink" title="版本一"></a>版本一</h4><ul><li><code>viewport</code>的宽度等于物理设备上的真实分辨率，不允许用户缩放</li></ul><p>移动端页面.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width,initial-scale<span class="token punctuation">=</span>1.0,user-scalable<span class="token punctuation">=</span>no,maximum-scale<span class="token punctuation">=</span>1.0,minimum-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>按钮<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-sizing" target="_blank" rel="noopener">box-sizing - CSS（层叠样式表） | MDN</a></p></li><li><p><code>box-sizing</code> 属性,</p><ul><li>默认,属性值是<code>content-box</code>,意味着该盒子是一个普通盒子,盒子的<code>width=width + padding + border</code>，如果你设置一个元素的宽为    <code>100px</code>，那么这个元素的内容区会有<code>100px</code>宽，并且任何边框和内边距的宽度都会被增加到最后绘制出来的元素宽度中</li><li>属性值是<code>border-box</code> ,告诉浏览器你设置的边框和内边距的值是包含在<code>width</code>内的</li></ul></li></ul><h4 id="版本一-10"><a href="#版本一-10" class="headerlink" title="版本一"></a>版本一</h4><p>盒模型.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">box-sizing</span><span class="token punctuation">:</span>border-box<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">10</span>px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      dfsdfdsf    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本二-9"><a href="#版本二-9" class="headerlink" title="版本二"></a>版本二</h4><ul><li>设置<code>box-sizing:border-box;</code>元素<code>li</code>不会被挤到第二排</li></ul><p>border-box.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">ul </span><span class="token punctuation">{</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">ul li </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">20%</span><span class="token punctuation">;</span> <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span> <span class="token property">box-sizing</span><span class="token punctuation">:</span>border-box<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">5</span>px solid black<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>bbb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>ccc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>ddd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>eee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="flex-弹性盒模型"><a href="#flex-弹性盒模型" class="headerlink" title="flex-弹性盒模型"></a>flex-弹性盒模型</h3><ul><li>具备<code>border-box</code>的能力</li><li>对<code>border、padding和margin</code>都好用,可以使得盒子根据比例自适应<ul><li>浮动，可以使得元素排在一行，但是需要清除浮动</li><li><code>flex</code>弹性盒模型可以使得元素排放置一行，自适应</li></ul></li><li>跟<code>max-width、min-width</code>配合</li></ul><h4 id="版本一-11"><a href="#版本一-11" class="headerlink" title="版本一"></a>版本一</h4><p>弹性盒模型.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> </span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> li </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">10</span>px solid black<span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ul1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本二-10"><a href="#版本二-10" class="headerlink" title="版本二"></a>版本二</h4><ul><li>第一个<code>li</code>设置<code>style=&quot;min-width:400px;&quot;</code>，屏幕缩小时，第一个<code>li</code>的最小宽度为<code>400px</code></li></ul><p>弹性盒模型2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> </span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> li </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ul1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">min-width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="版本三-8"><a href="#版本三-8" class="headerlink" title="版本三"></a>版本三</h4><ul><li>中间固定，两边自适应</li></ul><p>弹性盒模型3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> </span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> li </span><span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ul1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">max-width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span> <span class="token property">min-width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h3><ul><li><code>px</code>设置了多少就是多少 </li><li><code>em</code>相对于自身字体大小</li><li><code>rem</code>相对于<code>root</code>字体大小即相对于<code>html</code>的<code>font-size</code>，在不同的屏幕尺寸下，只需要调整HTML元素的<code>font-size</code> 方便、性能高,  一切尺寸都用<code>rem</code>,<strong>推荐使用</strong></li></ul><h1 id="touch事件基础"><a href="#touch事件基础" class="headerlink" title="touch事件基础"></a>touch事件基础</h1><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Touch_events" target="_blank" rel="noopener">触摸事件 - Web API 接口参考 | MDN</a></li></ul><h2 id="移动端布局"><a href="#移动端布局" class="headerlink" title="移动端布局"></a>移动端布局</h2><ul><li><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</code></li><li><code>flex</code></li><li>使用<code>rem</code>,绝对不要用<code>px</code></li></ul><h2 id="HTML5标签"><a href="#HTML5标签" class="headerlink" title="HTML5标签"></a>HTML5标签</h2><ul><li>有特殊作用无法替代的标签<ul><li><code>canvas</code>画图</li><li><code>video</code>播放视频</li><li><code>input</code>输入框</li><li><code>form</code>表单，收集数据并提交到后台</li></ul></li><li>其它的标签没啥区别，<code>HTML5</code>的大部分新标签仅仅只是为了更加的<strong>语义化</strong>，用合适的标签装合适的东西<ul><li>新标签：<code>section、header、footer、nav、aside、figure、legend</code></li><li><code>div</code>和<code>section</code>二者之间没啥区别，一个没有语义，一个有语义</li></ul></li></ul><h2 id="CSS3实现slideUp"><a href="#CSS3实现slideUp" class="headerlink" title="CSS3实现slideUp"></a>CSS3实现slideUp</h2><h3 id="版本一-12"><a href="#版本一-12" class="headerlink" title="版本一"></a>版本一</h3><ul><li>点击按钮时，判断盒子<code>.box</code>是否包含<code>.slideUp</code>类名，有则取消，没有则添加</li><li><code>transition:0.5s all ease</code>设置动画时间<code>0.5s</code></li></ul><p>1.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">transition</span><span class="token punctuation">:</span><span class="token number">0.5</span>s all ease<span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.slideUp</span> </span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">0</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oDiv<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'div1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>classList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'slideUp'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oDiv<span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">'box'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>          oDiv<span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">'box slideUp'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>按钮<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>div1<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="touch事件"><a href="#touch事件" class="headerlink" title="touch事件"></a>touch事件</h2><p>手指触摸</p><ul><li><code>PC</code>端,主要有<code>mouse</code>事件，只能有一个，就算笔记本插入2个鼠标，移动也只有一个光标点<ul><li>mousedown</li><li>move</li><li>up </li></ul></li><li>移动端，主要是<code>touch</code>事件，支持多点触摸<ul><li>touchstart</li><li>touchmove</li><li>touchend </li></ul></li></ul><h3 id="版本一-13"><a href="#版本一-13" class="headerlink" title="版本一"></a>版本一</h3><ul><li><code>Touch Event</code>规范中的几个重要事件<ul><li><code>touchstart</code> 手指触摸屏幕时触发，即使已经有手指在屏幕上也会触发</li><li><code>touchmove</code>手指在屏幕滑动时触发</li><li><code>touchend</code>手指从屏幕时移开时触发。</li></ul></li><li>每一个事件处理程序都有一个<code>ev</code>的参数对象,该对象描述了当前触摸的相关信息，通过这样一个对象，能够获取到当前触碰的坐标，触碰的手指个数等等</li><li>为了手指再屏幕滑动、移开时可以<strong>解绑</strong>，滑动、移开事件采用有名函数<code>fnMove、fnEnd</code>,而不是匿名函数</li><li><strong>clientX</strong>：触摸目标在视口中的x坐标</li><li><strong>clientY</strong>：触摸目标在视口中的y坐标。</li></ul><p>touch事件.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchstart'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> disX<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>oBox<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>        <span class="token keyword">let</span> disY<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>oBox<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">fnMove</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>disX<span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span>          oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>disY<span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">fnEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBox<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          oBox<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-11"><a href="#版本二-11" class="headerlink" title="版本二"></a>版本二</h3><ul><li>通过<code>transform</code>来获取手势移动时的横、纵坐标值，但是通过<code>getComputedStyle(oBox, false).transform</code>获取<code>transform</code>值是一个矩阵点的值，不利于计算，我们可以用一个变量来存横、纵坐标值<code>oBox.style.transform=`translate(${x}px,${y}px)</code></li></ul><p>获取transform.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">100</span>px<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">30</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//matrix(0.707107, 0.707107, -0.707107, 0.707107, 0, 0)</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>oBox<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span>transform<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>touch事件2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>px,<span class="token number">0</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchstart'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> disX<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>x<span class="token punctuation">;</span>        <span class="token keyword">let</span> disY<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>y<span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">fnMove</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          x<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>disX<span class="token punctuation">;</span>          y<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>disY<span class="token punctuation">;</span>          oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">fnEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBox<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          oBox<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="方向锁定"><a href="#方向锁定" class="headerlink" title="方向锁定"></a>方向锁定</h2><ul><li>用户超出手势移动超过<code>5px</code>,确定方向</li></ul><p>方向锁定.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>px,<span class="token number">0</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchstart'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> dir<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> disX<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>x<span class="token punctuation">;</span>        <span class="token keyword">let</span> disY<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>y<span class="token punctuation">;</span>        <span class="token keyword">let</span> startX<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>        <span class="token keyword">let</span> startY<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">fnMove</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>dir<span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//等待方向确定——用户超出5px</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>startX<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              dir<span class="token operator">=</span><span class="token string">'x'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>startY<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              dir<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>dir<span class="token operator">==</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              x<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>disX<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>dir<span class="token operator">==</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              y<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>disY<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">fnEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBox<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          oBox<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="淘宝"><a href="#淘宝" class="headerlink" title="淘宝"></a>淘宝</h2><ul><li><p><code>rem</code>值的确定，设计稿基准宽度/基准字体大小</p><ul><li>假设，设计稿基准宽度：<code>480px</code>,基准字体大小：<code>10px</code>，即可得出<code>header</code>的<code>width：48rem</code></li></ul></li><li><p>移动端，不同的手机显示的字体大小是不一样的，那么该如何设置字体<code>font-size</code>的字体值<code>rem</code>呢</p><ul><li>公式<br>$$<br>480/10=clientWidth/真实fontsize<br>===》<br>真实fontsize=clientWidth/48<br>$$</li></ul></li><li><p>求绝对值<code>Math.abs(x);</code>函数返回指定数字 <code>x</code>的绝对值</p></li></ul><h3 id="版本一-14"><a href="#版本一-14" class="headerlink" title="版本一"></a>版本一</h3><p>淘宝.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">html </span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">}</span>    <span class="token selector">header </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">48</span>rem<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">5.5</span>rem<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#fe5400</span><span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">z-index</span><span class="token punctuation">:</span><span class="token number">99</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">header h1 </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">4.4</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">3.7</span>rem<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token url">url(img/logo.png)</span> no-repeat<span class="token punctuation">;</span> <span class="token property">text-indent</span><span class="token punctuation">:</span>-<span class="token number">9999</span>rem<span class="token punctuation">;</span> <span class="token property">background-size</span><span class="token punctuation">:</span><span class="token number">100%</span> <span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span><span class="token number">0.6</span>rem<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span><span class="token number">1</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*banner*/</span>    <span class="token selector"><span class="token class">.banner</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">48</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">15</span>rem<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ul </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">999</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">15</span>rem<span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">0</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ul li </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">48</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">15</span>rem<span class="token punctuation">;</span> <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ul li img </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ol </span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">right</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">1.3</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ol li </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">1</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">1</span>rem<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#333</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">0.4</span>rem<span class="token punctuation">;</span> <span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">0.6</span><span class="token punctuation">;</span> <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ol li<span class="token class">.active</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#ff5501</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#d0a793</span><span class="token punctuation">;</span> <span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**/</span>    <span class="token selector"><span class="token class">.page_content</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span>-<span class="token number">5</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.load</span> </span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">5</span>rem<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">5</span>rem<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">2</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onresize<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize<span class="token operator">=</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token operator">/</span><span class="token number">48</span><span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span><span class="token function">onresize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBanner<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.banner'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBannerUl<span class="token operator">=</span>oBanner<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oPageContent<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.page_content'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>      oBanner<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchstart'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> startX<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>        <span class="token keyword">let</span> startY<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>        <span class="token keyword">let</span> disX<span class="token operator">=</span>startX<span class="token operator">-</span>x<span class="token punctuation">;</span>        <span class="token keyword">let</span> disY<span class="token operator">=</span>startY<span class="token operator">-</span>y<span class="token punctuation">;</span>        <span class="token keyword">let</span> dir<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">fnMove</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>dir<span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>startX<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              dir<span class="token operator">=</span><span class="token string">'x'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>startY<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              dir<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>dir<span class="token operator">==</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              x<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>disX<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              y<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>disY<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            oBannerUl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateX(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateY(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>y<span class="token operator">/</span><span class="token number">3</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateY(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">fnEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBanner<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          oBanner<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition<span class="token operator">=</span><span class="token string">'0.3s all ease'</span><span class="token punctuation">;</span>            oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateY(0px)`</span></span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        oBanner<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oBanner<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>淘宝网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>load<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      下拉刷新    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>banner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner1.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner2.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner1.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner2.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner1.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner2.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-12"><a href="#版本二-12" class="headerlink" title="版本二"></a>版本二</h3><ul><li><p>为了实现轮播，尾巴追加第一个元素，头追加最后一个元素</p><p><code>oBannerUl.appendChild</code><br><code>oBannerUl.insertBefore</code></p></li></ul><p>淘宝2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">html </span><span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">}</span>    <span class="token selector">header </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">48</span>rem<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">5.5</span>rem<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#fe5400</span><span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">z-index</span><span class="token punctuation">:</span><span class="token number">99</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">header h1 </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">4.4</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">3.7</span>rem<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token url">url(img/logo.png)</span> no-repeat<span class="token punctuation">;</span> <span class="token property">text-indent</span><span class="token punctuation">:</span>-<span class="token number">9999</span>rem<span class="token punctuation">;</span> <span class="token property">background-size</span><span class="token punctuation">:</span><span class="token number">100%</span> <span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span><span class="token number">0.6</span>rem<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span><span class="token number">1</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*banner*/</span>    <span class="token selector"><span class="token class">.banner</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">48</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">15</span>rem<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ul </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">999</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">15</span>rem<span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">48</span>rem<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ul li </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">48</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">15</span>rem<span class="token punctuation">;</span> <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ul li img </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ol </span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">right</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">1.3</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ol li </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">1</span>rem<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">1</span>rem<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#333</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">0.4</span>rem<span class="token punctuation">;</span> <span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">0.6</span><span class="token punctuation">;</span> <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.banner</span> ol li<span class="token class">.active</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#ff5501</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#d0a793</span><span class="token punctuation">;</span> <span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**/</span>    <span class="token selector"><span class="token class">.page_content</span> </span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span>-<span class="token number">5</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.load</span> </span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">5</span>rem<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">5</span>rem<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">2</span>rem<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onresize<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize<span class="token operator">=</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token operator">/</span><span class="token number">48</span><span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span><span class="token function">onresize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBanner<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.banner'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBannerUl<span class="token operator">=</span>oBanner<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBannerUlLi<span class="token operator">=</span>oBannerUl<span class="token punctuation">.</span>children<span class="token punctuation">;</span>      <span class="token keyword">let</span> oPageContent<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.page_content'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oLoad<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.load'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> aOlLi<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.banner ol li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//</span>      oBannerUl<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>oBannerUlLi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBannerUl<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>oBannerUlLi<span class="token punctuation">[</span>oBannerUlLi<span class="token punctuation">.</span>length<span class="token number">-2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> oBannerUlLi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> x<span class="token operator">=</span><span class="token operator">-</span>oBannerUlLi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>offsetWidth<span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>      oBanner<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchstart'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>        oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">;</span>        oBannerUl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> startX<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>        <span class="token keyword">let</span> startY<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>        <span class="token keyword">let</span> disX<span class="token operator">=</span>startX<span class="token operator">-</span>x<span class="token punctuation">;</span>        <span class="token keyword">let</span> disY<span class="token operator">=</span>startY<span class="token operator">-</span>y<span class="token punctuation">;</span>        <span class="token keyword">let</span> dir<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">fnMove</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>dir<span class="token operator">==</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>startX<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              dir<span class="token operator">=</span><span class="token string">'x'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>startY<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              dir<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>dir<span class="token operator">==</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              x<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token operator">-</span>disX<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              y<span class="token operator">=</span>ev<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>disY<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            oBannerUl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateX(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateY(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>y<span class="token operator">/</span><span class="token number">3</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">></span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                oLoad<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'松手'</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                oLoad<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'下拉刷新'</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateY(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">fnEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBanner<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          oBanner<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>y<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition<span class="token operator">=</span><span class="token string">'0.3s all ease'</span><span class="token punctuation">;</span>            oPageContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateY(0px)`</span></span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token comment" spellcheck="true">//</span>          <span class="token keyword">let</span> n<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">/</span>oBannerUl<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>          x<span class="token operator">=</span><span class="token operator">-</span>n<span class="token operator">*</span>oBannerUl<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>          oBannerUl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition<span class="token operator">=</span><span class="token string">'0.3s all ease'</span><span class="token punctuation">;</span>          oBannerUl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform<span class="token operator">=</span><span class="token template-string"><span class="token string">`translateX(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">;</span>          Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>aOlLi<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>li<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>            li<span class="token punctuation">.</span>className<span class="token operator">=</span>index<span class="token operator">==</span>n<span class="token operator">?</span><span class="token string">'active'</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        oBanner<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchmove'</span><span class="token punctuation">,</span> fnMove<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oBanner<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'touchend'</span><span class="token punctuation">,</span> fnEnd<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>淘宝网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>load<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      下拉刷新    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>page_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>banner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner1.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner2.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner1.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner2.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner1.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/banner2.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload和FileReade</title>
      <link href="/2019/05/24/upload-he-filereade/"/>
      <url>/2019/05/24/upload-he-filereade/</url>
      
        <content type="html"><![CDATA[<h1 id="上传进度"><a href="#上传进度" class="headerlink" title="上传进度"></a>上传进度</h1><h2 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h2><h3 id="版本一"><a href="#版本一" class="headerlink" title="版本一"></a>版本一</h3><ul><li><p><code>HTML5</code>标签自带的进度条标签<code>&lt;meter&gt;</code></p></li><li><p>上传进度<code>oAjax.upload.onprogress</code></p></li></ul><p>上传进度.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oF<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>oF<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token keyword">let</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//POST</span>        oAjax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`http://localhost:8080/api`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>upload<span class="token punctuation">.</span>onprogress<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">let</span> oM<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'m1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          oM<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token number">100</span><span class="token operator">*</span>ev<span class="token punctuation">.</span>loaded<span class="token operator">/</span>ev<span class="token punctuation">.</span>total<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        oAjax.onreadystatechange=function (){          if(oAjax.readyState==4){            if(oAjax.status>=200 &amp;&amp; oAjax.status&lt;300 || oAjax.status==304){              alert('成功');            }else{              alert('失败');            }          }        };*/</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meter</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m1<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>meter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f1<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二"><a href="#版本二" class="headerlink" title="版本二"></a>版本二</h3><ul><li><p>自己创建进度条标签</p></li><li><p>绑定事件监听<code>oAjax.upload.addEventListener</code></p></li></ul><p>上传进度2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.parent</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.child</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oF<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>oF<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token keyword">let</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//POST</span>        oAjax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`http://localhost:8080/api`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>upload<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'progress'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">/*let oM=document.getElementById('m1');          oM.value=100*ev.loaded/ev.total;*/</span>          <span class="token keyword">let</span> oChild<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'child'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          oChild<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token number">100</span><span class="token operator">*</span>ev<span class="token punctuation">.</span>loaded<span class="token operator">/</span>ev<span class="token punctuation">.</span>total<span class="token operator">+</span><span class="token string">'%'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        oAjax.onreadystatechange=function (){          if(oAjax.readyState==4){            if(oAjax.status>=200 &amp;&amp; oAjax.status&lt;300 || oAjax.status==304){              alert('成功');            }else{              alert('失败');            }          }        };*/</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f1<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本三"><a href="#版本三" class="headerlink" title="版本三"></a>版本三</h3><ul><li>下载进度<code>oAjax.onprogress</code></li></ul><p>下载进度.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.parent</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.child</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oF<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>oF<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token keyword">let</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//POST</span>        oAjax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`http://localhost:8080/api`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>onprogress<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>upload<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'progress'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">/*let oM=document.getElementById('m1');          oM.value=100*ev.loaded/ev.total;*/</span>          <span class="token keyword">let</span> oChild<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'child'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          oChild<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token number">100</span><span class="token operator">*</span>ev<span class="token punctuation">.</span>loaded<span class="token operator">/</span>ev<span class="token punctuation">.</span>total<span class="token operator">+</span><span class="token string">'%'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*        oAjax.onreadystatechange=function (){          if(oAjax.readyState==4){            if(oAjax.status>=200 &amp;&amp; oAjax.status&lt;300 || oAjax.status==304){              alert('成功');            }else{              alert('失败');            }          }        };*/</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f1<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本四"><a href="#版本四" class="headerlink" title="版本四"></a>版本四</h3><ul><li>下载进度绑定事件监听<code>document.addEventListener</code></li></ul><p>下载进度2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.parent</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.child</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'progress'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form1<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://localhost:8080/api<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h2><ul><li>解决跨域，判断请求头中是否携带<code>req.headers[&#39;origin&#39;]</code>字段</li></ul><p>express_server.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> express<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//主体</span><span class="token keyword">const</span> body<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//接收普通POST数据</span><span class="token keyword">const</span> multer<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'multer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//接收文件POST数据</span><span class="token keyword">const</span> mysql<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> db<span class="token operator">=</span>mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>host<span class="token punctuation">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token number">3309</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> database<span class="token punctuation">:</span> <span class="token string">'20180208'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span><span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//中间件</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span>extended<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> multerObj<span class="token operator">=</span><span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>dest<span class="token punctuation">:</span> <span class="token string">'./upload/'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>multerObj<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//处理请求</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/api'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'origin'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'null'</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'origin'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'http://localhost'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  req<span class="token punctuation">.</span>files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`('</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token punctuation">.</span>originalname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">', '</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token punctuation">.</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">', </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> sql<span class="token operator">=</span><span class="token template-string"><span class="token string">`INSERT INTO image_table (originalname, filename, time) VALUES</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//console.log(sql);</span>  db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>      res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'不OK'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span><span class="token string">'./www/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="上传进度条实现注意"><a href="#上传进度条实现注意" class="headerlink" title="上传进度条实现注意"></a>上传进度条实现注意</h2><ul><li><code>oAjax.upload.onprogress</code>必须放在<code>oAjax.send(data)</code>前面</li><li>服务器必须能处理<code>OPTIONS</code>请求，<code>oAjax</code>加了<code>upload</code>会发送<code>OPTIONS</code>和<code>POST</code>2次请求<ul><li>对于通用服务器，我们不用担心，他们会自己进行处理</li><li>对于NodeJS服务，使用<code>express</code>框架，使用<code>server.use</code></li></ul></li></ul><h1 id="拖拽上传"><a href="#拖拽上传" class="headerlink" title="拖拽上传"></a>拖拽上传</h1><ul><li>拖拽松手事件<code>drop</code><ul><li>绑定事件监听阻止默认行为，<code>ev.preventDefault()</code></li><li>按钮阻止默认行为，<code>return false</code></li></ul></li><li>获取文件<code>ev.dataTransfer.files</code></li><li>数据封装，使用<code>FormData</code>封装文件数据</li><li>发送，<code>oAjax.send(data)</code></li></ul><p>文件拖拽.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span>-<span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span>-<span class="token number">100</span>px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> timer<span class="token punctuation">;</span>      document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragover'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'block'</span><span class="token punctuation">;</span>        timer<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragenter'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请松手'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragleave'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请把文件拖到这儿'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'drop'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//POST</span>        oAjax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`http://localhost:8080/api`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>upload<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'progress'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">let</span> oM<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#m1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          oM<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token number">100</span><span class="token operator">*</span>ev<span class="token punctuation">.</span>loaded<span class="token operator">/</span>ev<span class="token punctuation">.</span>total<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>readyState<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span> <span class="token operator">||</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meter</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m1<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>meter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      请把文件拖到这儿    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h1 id="读取文件FileReader"><a href="#读取文件FileReader" class="headerlink" title="读取文件FileReader"></a>读取文件FileReader</h1><h2 id="前台-1"><a href="#前台-1" class="headerlink" title="前台"></a>前台</h2><h3 id="版本一-1"><a href="#版本一-1" class="headerlink" title="版本一"></a>版本一</h3><ul><li>文件读取 方法<code>reader.readAsDataURL(file)</code>可以将图片文件转换为<code>base64</code>编码</li><li>传输数据可以通过二进制和<code>base64</code>来传输<ul><li><code>base64</code>可以把二进制数据表现成字符串</li><li>只要能出现地址<code>src</code>的地方，都能用<code>Base64</code></li><li>一般小图标不要引用地址，直接放个<code>base64</code>可以优化网络性能</li><li>维护麻烦，<code>base64</code>编码会把文件体积变大</li></ul></li><li>当读取操作成功完成时调用<code>reader.onload</code></li></ul><p>读取文件.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span>-<span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span>-<span class="token number">100</span>px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> timer<span class="token punctuation">;</span>      document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragover'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'block'</span><span class="token punctuation">;</span>        timer<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragenter'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请松手'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragleave'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请把文件拖到这儿'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'drop'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">let</span> file<span class="token operator">=</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//读取文件</span>        <span class="token keyword">let</span> reader<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        reader<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//base64</span>        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      请把文件拖到这儿    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本二-1"><a href="#版本二-1" class="headerlink" title="版本二"></a>版本二</h3><ul><li>判断文件类型，<code>file.type.startsWith(&#39;image/&#39;)</code></li></ul><p>读取文件2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span>-<span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span>-<span class="token number">100</span>px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.img_list</span> </span><span class="token punctuation">{</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.img_list</span> li </span><span class="token punctuation">{</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">3</span>px solid <span class="token hexcode">#666</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.img_list</span> li img </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.img_list</span> li <span class="token class">.del_btn</span> </span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">right</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oUl<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.img_list'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> timer<span class="token punctuation">;</span>      document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragover'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'block'</span><span class="token punctuation">;</span>        timer<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragenter'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请松手'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragleave'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请把文件拖到这儿'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'drop'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'image/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">let</span> reader<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          reader<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">let</span> oLi<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            oLi<span class="token punctuation">.</span>file<span class="token operator">=</span>file<span class="token punctuation">;</span>            oLi<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'&lt;img src="a.png" alt="">&lt;a href="javascript:;" class="del_btn">删除&lt;/a>'</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> oImg<span class="token operator">=</span>oLi<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            oImg<span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>            <span class="token keyword">let</span> oBtnDel<span class="token operator">=</span>oLi<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            oBtnDel<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              oUl<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>oLi<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            oUl<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>oLi<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">;</span>          reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//真的上传</span>      <span class="token keyword">let</span> oBtnUpload<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#btn_upload'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtnUpload<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>oUl<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>li<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">,</span> li<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token keyword">let</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//POST</span>        oAjax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`http://localhost:8080/api`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>readyState<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span> <span class="token operator">||</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img_list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--&lt;li>        &lt;img src="a.png" alt="">        &lt;a href="javascript:;" class="del_btn">删除&lt;/a>      &lt;/li>      &lt;li>        &lt;img src="b.png" alt="">        &lt;a href="javascript:;" class="del_btn">删除&lt;/a>      &lt;/li>--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn_upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      请把文件拖到这儿    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="版本三-1"><a href="#版本三-1" class="headerlink" title="版本三"></a>版本三</h3><ul><li>以二进制数据的形式存储数据，<code>reader.readAsArrayBuffer(file)</code></li><li>以字符串形式存储的二进制数据，<code>readAsBinaryString</code></li><li>图片(以及其他二进制数据)，<code>readAsDataURL</code></li><li>将文件读取为文本，<code>readAsText</code></li></ul><p>读取文件3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">* </span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span>-<span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span>-<span class="token number">100</span>px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.img_list</span> </span><span class="token punctuation">{</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.img_list</span> li </span><span class="token punctuation">{</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">3</span>px solid <span class="token hexcode">#666</span><span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.img_list</span> li img </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.img_list</span> li <span class="token class">.del_btn</span> </span><span class="token punctuation">{</span><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">right</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oUl<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.img_list'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> timer<span class="token punctuation">;</span>      document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragover'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'block'</span><span class="token punctuation">;</span>        timer<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          oBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragenter'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请松手'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'dragleave'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请把文件拖到这儿'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'drop'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">let</span> file<span class="token operator">=</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> reader<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span><span class="token punctuation">;</span>        reader<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      请把文件拖到这儿    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="后台-1"><a href="#后台-1" class="headerlink" title="后台"></a>后台</h2><p>将读取的文件入库</p><ul><li>连接数据库<code>mysql.createPool</code></li><li>批量插入</li></ul><p>express_server.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> express<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//主体</span><span class="token keyword">const</span> body<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//接收普通POST数据</span><span class="token keyword">const</span> multer<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'multer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//接收文件POST数据</span><span class="token keyword">const</span> mysql<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> db<span class="token operator">=</span>mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>host<span class="token punctuation">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token number">3309</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> database<span class="token punctuation">:</span> <span class="token string">'20180208'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span><span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//中间件</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span>extended<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> multerObj<span class="token operator">=</span><span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>dest<span class="token punctuation">:</span> <span class="token string">'./upload/'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>multerObj<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//处理请求</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'/api'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'origin'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'null'</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'origin'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'http://localhost'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  req<span class="token punctuation">.</span>files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`('</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token punctuation">.</span>originalname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">', '</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token punctuation">.</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">', </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> sql<span class="token operator">=</span><span class="token template-string"><span class="token string">`INSERT INTO image_table (originalname, filename, time) VALUES</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//console.log(sql);</span>  db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>      res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'不OK'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span><span class="token string">'./www/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="ajax版本"><a href="#ajax版本" class="headerlink" title="ajax版本"></a>ajax版本</h1><ul><li><code>ajax2.0</code>携带有<code>oAjax.upload</code>属性</li></ul><p>ajax版本.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.parent</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.child</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">var</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>upload<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'2.0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'1.0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oracle11g安装_客户端工具管理oracle数据库</title>
      <link href="/2019/05/20/oracle11g-an-zhuang-ke-hu-duan-gong-ju-guan-li-oracle-shu-ju-ku/"/>
      <url>/2019/05/20/oracle11g-an-zhuang-ke-hu-duan-gong-ju-guan-li-oracle-shu-ju-ku/</url>
      
        <content type="html"><![CDATA[<h1 id="oracle11g安装"><a href="#oracle11g安装" class="headerlink" title="oracle11g安装"></a>oracle11g安装</h1><h2 id="单机版"><a href="#单机版" class="headerlink" title="单机版"></a>单机版</h2><h2 id="集群版"><a href="#集群版" class="headerlink" title="集群版"></a>集群版</h2><h1 id="客户端工具管理oracle数据库"><a href="#客户端工具管理oracle数据库" class="headerlink" title="客户端工具管理oracle数据库"></a>客户端工具管理oracle数据库</h1><h2 id="web方式管理工具"><a href="#web方式管理工具" class="headerlink" title="web方式管理工具"></a>web方式管理工具</h2><h2 id="sql-developer"><a href="#sql-developer" class="headerlink" title="sql developer"></a>sql developer</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a><a href="https://www.oracle.com/technetwork/developer-tools/sql-developer/downloads/index.html" target="_blank" rel="noopener">下载</a></h3><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a><a href="https://www.oracle.com/webfolder/technetwork/tutorials/obe/db/sqldev/r40/sqldev4.0_GS/sqldev4.0_GS.html" target="_blank" rel="noopener">使用</a></h3><h4 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h4><p>工具-&gt;首选项-&gt;代码编辑器-&gt;字体</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558488132318.png" alt="1558488132318"></p><h4 id="设置日期"><a href="#设置日期" class="headerlink" title="设置日期"></a>设置日期</h4><p>工具-&gt;首选项-&gt;数据库-&gt;NLS-&gt;日期格式</p><p>工具默认的日期格式DD-MON-RR</p><p>DD-MON-RR 修改为: YYYY-MM-DD HH24:MI:SS</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558488163212.png" alt="1558488163212"></p><h4 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h4><p><code>Ctrl+F7</code></p><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p><code>F9</code>或者<code>Ctrl+Enter</code></p><h2 id="PL-SQL"><a href="#PL-SQL" class="headerlink" title="PL\SQL"></a>PL\SQL</h2><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a><a href="https://www.allroundautomations.com/plsqldev.html" target="_blank" rel="noopener">下载</a></h3><h3 id="配置TNS"><a href="#配置TNS" class="headerlink" title="配置TNS"></a>配置TNS</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558335807231.png" alt="1558335807231"></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jdk多版本设置</title>
      <link href="/2019/05/19/jdk-duo-ban-ben-she-zhi/"/>
      <url>/2019/05/19/jdk-duo-ban-ben-she-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="jdk多版本设置"><a href="#jdk多版本设置" class="headerlink" title="jdk多版本设置"></a>jdk多版本设置</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>jdk1.6</p><p>jdk1.7</p><p>jdk1.8</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558221361698.png" alt="1558221361698"></p><h3 id="删除或者重命名"><a href="#删除或者重命名" class="headerlink" title="删除或者重命名"></a>删除或者重命名</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558221724847.png" alt="1558221724847"></p><p><code>C:\Windows\System32</code>下的<code>java.exe、javaw.exe、javaws.exe</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558221796841.png" alt="1558221796841"></p><p><code>C:\Program Files (x86)\Common Files\Oracle\Java\javapath</code>下的<code>java.exe、javaw.exe、javaws.exe</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558221809281.png" alt="1558221809281"></p><h3 id="配置自己的jdk环境变量"><a href="#配置自己的jdk环境变量" class="headerlink" title="配置自己的jdk环境变量"></a>配置自己的jdk环境变量</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558222127062.png" alt="1558222127062"></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558222145957.png" alt="1558222145957"></p><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax2.0的FormData和跨域Cors</title>
      <link href="/2019/05/15/ajax2-0-de-formdata-he-kua-yu-cors/"/>
      <url>/2019/05/15/ajax2-0-de-formdata-he-kua-yu-cors/</url>
      
        <content type="html"><![CDATA[<h1 id="formdata"><a href="#formdata" class="headerlink" title="formdata"></a>formdata</h1><p>前台浏览器ajax2.0的东西</p><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><ul><li>set(key, value)           会覆盖</li><li>append(key, value)        不覆盖</li><li>get(key)=&gt;value</li><li>delete(key)</li></ul><p>1.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    data<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">,</span> <span class="token string">'blue'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">,</span> <span class="token string">'blue2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getAll</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="控制提交数据"><a href="#控制提交数据" class="headerlink" title="控制提交数据"></a>控制提交数据</h2><h3 id="原生实现"><a href="#原生实现" class="headerlink" title="原生实现"></a>原生实现</h3><h4 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h4><p>2.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oUser<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oPass<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'pass'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">,</span> oUser<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'pass'</span><span class="token punctuation">,</span> oPass<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token keyword">let</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//GET</span>        <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`http://localhost:8080/api?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'my-origin-blue'</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hostname<span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//POST</span>        <span class="token comment" spellcheck="true">/*oAjax.open('POST', `http://localhost:8080/api`, true);        oAjax.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');        oAjax.send(data);*/</span>        oAjax<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>readyState<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span> <span class="token operator">||</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功:'</span><span class="token operator">+</span>oAjax<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    用户：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pass<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h4><p>server.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> urlLib<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> querystring<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'querystring'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'my-origin-blue'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//if(req.headers['origin']=='null' || /^https?:\/\/(\w+\.)+abc\.com/.test(req.headers['origin'])){</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'origin'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'null'</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'origin'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'http://localhost'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">let</span> <span class="token punctuation">{</span>pathname<span class="token punctuation">:</span> url<span class="token punctuation">,</span> query<span class="token punctuation">:</span> <span class="token keyword">get</span><span class="token punctuation">}</span><span class="token operator">=</span>urlLib<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">let</span> post<span class="token operator">=</span>querystring<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">get</span><span class="token punctuation">,</span> post<span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'asdfasdf'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="express框架实现"><a href="#express框架实现" class="headerlink" title="express框架实现"></a>express框架实现</h3><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><p>package.json</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"2018-2-6"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"1.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span><span class="token punctuation">,</span>    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node server.js"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"body-parser"</span><span class="token operator">:</span> <span class="token string">"^1.18.2"</span><span class="token punctuation">,</span>    <span class="token property">"express"</span><span class="token operator">:</span> <span class="token string">"^4.16.2"</span><span class="token punctuation">,</span>    <span class="token property">"multer"</span><span class="token operator">:</span> <span class="token string">"^1.3.0"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="前台-1"><a href="#前台-1" class="headerlink" title="前台"></a>前台</h4><p>3.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oUser<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oPass<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'pass'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oF<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">,</span> oUser<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'pass'</span><span class="token punctuation">,</span> oPass<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>oF<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token keyword">let</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//POST</span>        oAjax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`http://localhost:8080/api`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>readyState<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span> <span class="token operator">||</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    用户：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pass<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    头像：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f1<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="后台-1"><a href="#后台-1" class="headerlink" title="后台"></a>后台</h4><p>express_server.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> express<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//主体</span><span class="token keyword">const</span> body<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'body-parser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//接收普通POST数据</span><span class="token keyword">const</span> multer<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'multer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//接收文件POST数据</span><span class="token comment" spellcheck="true">//let server=http.createServer((req, res)=>{});</span><span class="token comment" spellcheck="true">//server.listen(8080);</span><span class="token keyword">let</span> server<span class="token operator">=</span><span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//中间件</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span>extended<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> multerObj<span class="token operator">=</span><span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>dest<span class="token punctuation">:</span> <span class="token string">'./upload/'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>multerObj<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//处理请求</span>server<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/api'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'origin'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'null'</span> <span class="token operator">||</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'origin'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'http://localhost'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//普通POST数据</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//文件POST数据，req.files来自于multer</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span>server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span><span class="token string">'./www/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="cors跨域"><a href="#cors跨域" class="headerlink" title="cors跨域"></a>cors跨域</h1><p>早期跨域解决方案是使用<code>jsonp</code></p><p>ajax1.0的时代，浏览器请求服务器的时候，请求头并不会携带<code>origin</code>,对于跨域的解决方案是使用其它的手段。</p><p>ajax2.0以后，浏览器请求服务器，请求头中会有<code>origin</code> ,服务器接到请求要验证请求头中的<code>origin</code>认不认识</p><ul><li>认识的话则进行设置<code>res.setHeader(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;);</code></li></ul><p>浏览器接收服务器的响应后，查看响应头中<code>Access-Control-Allow-Origin</code>是否进行了设置，如果设置了<code>*</code>，则表示允许本次请求后成功处理响应。</p><h2 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h2><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1557967647661.png" alt="1557967647661"></p><h1 id="文件拖拽"><a href="#文件拖拽" class="headerlink" title="文件拖拽"></a>文件拖拽</h1><ul><li>ondragenter    拖着东西进入</li><li>ondragleave    拖着东西离开</li><li>ondragover      悬停</li><li>ondrop     松手</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">150</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">75</span>px<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">150</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oBox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span>ondragenter<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'松手上传'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span>ondragleave<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        oBox<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'请拖到这里'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span>ondragover<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//只要鼠标还没松手、并且还没离开，一直不停发生</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"aaaa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//ondragover不阻止默认事件，ondrop不会触发</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>      oBox<span class="token punctuation">.</span>ondrop<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//alert('松手');</span>        <span class="token keyword">let</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'f1'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token keyword">let</span> oAjax<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//POST</span>        oAjax<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`http://localhost:8080/api`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        oAjax<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>readyState<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>oAjax<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span> <span class="token operator">||</span> oAjax<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'上传成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'上传失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      请拖到这里    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ajax2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>websocket原理</title>
      <link href="/2019/05/12/websocket-yuan-li/"/>
      <url>/2019/05/12/websocket-yuan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h1><ul><li><p>双向通信</p></li><li><p>性能高</p></li><li><p>WebSocket是前台的东西，是HTML5带的一种东西</p><ul><li><p>只有前台有WebSocket这个东西</p></li><li><p>后台没有，后台有Socket</p></li></ul></li></ul><h1 id="使用socket-io实现WebSocket"><a href="#使用socket-io实现WebSocket" class="headerlink" title="使用socket.io实现WebSocket"></a>使用socket.io实现WebSocket</h1><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"2018-2-3"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"server.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span><span class="token punctuation">,</span>    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node server.js"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"socket.io"</span><span class="token operator">:</span> <span class="token string">"^2.0.4"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h2><p>1.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token id">#ul1</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token id">#ul1</span> li<span class="token class">.me</span> </span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.err_box</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span> <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span> <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://localhost:8080/socket.io/socket.io.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> sock<span class="token operator">=</span>io<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">'ws://localhost:8080/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'connect'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'已连接'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'err_box'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'disconnect'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'已断开'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'err_box'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">'block'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//聊天室</span>    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> oTxt<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'txt1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oUl<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'ul1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        sock<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'msg'</span><span class="token punctuation">,</span> oTxt<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> oLi<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oLi<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>oTxt<span class="token punctuation">.</span>value<span class="token punctuation">;</span>        oLi<span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">'me'</span><span class="token punctuation">;</span>        oTxt<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>        oUl<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>oLi<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>      sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'msg'</span><span class="token punctuation">,</span> str<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">let</span> oLi<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        oLi<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>str<span class="token punctuation">;</span>        oUl<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>oLi<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>err_box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      无法连接到服务器，请检查网络    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ul1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>txt1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>发送<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h2><p>server.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> io<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'socket.io'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> httpServer<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>httpServer<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span><span class="token keyword">let</span> wsServer<span class="token operator">=</span>io<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>httpServer<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> aSock<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>wsServer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'connection'</span><span class="token punctuation">,</span> sock<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  aSock<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sock<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//断开连接</span>  sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'disconnect'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">let</span> n<span class="token operator">=</span>aSock<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>sock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      aSock<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'msg'</span><span class="token punctuation">,</span> str<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    aSock<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token operator">!=</span>sock<span class="token punctuation">)</span><span class="token punctuation">{</span>        s<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'msg'</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>aSock<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="原生WebSocket实现"><a href="#原生WebSocket实现" class="headerlink" title="原生WebSocket实现"></a>原生WebSocket实现</h1><h2 id="前台-1"><a href="#前台-1" class="headerlink" title="前台"></a>前台</h2><p>raw_client.html</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> sock<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">'ws://localhost:8080/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sock<span class="token punctuation">.</span>emit<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sock<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//连上了</span>    sock<span class="token punctuation">.</span>onopen<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'连接上了'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//发送数据</span>      sock<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'msg'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//有数据</span>    sock<span class="token punctuation">.</span>onmessage<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'有消息过来'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//断开了</span>    sock<span class="token punctuation">.</span>onclose<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'断了'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="后台-1"><a href="#后台-1" class="headerlink" title="后台"></a>后台</h2><h3 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h3><h4 id="原始数据"><a href="#原始数据" class="headerlink" title="原始数据"></a>原始数据</h4><pre><code>GET / HTTP/1.1Host: localhost:8080Connection: UpgradePragma: no-cacheCache-Control: no-cacheUpgrade: websocketOrigin: file://Sec-WebSocket-Version: 13User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, likeGecko) Chrome/65.0.3315.4 Safari/537.36Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7,es;q=0.6,fr;q=0.5,pt;q=0.4Sec-WebSocket-Key: +0jgXtYyVeG28Gn1CLUKIg==Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits</code></pre><h4 id="分析原始数据"><a href="#分析原始数据" class="headerlink" title="分析原始数据"></a>分析原始数据</h4><ul><li>第一行删掉</li></ul><pre><code>Host: localhost:8080Connection: UpgradePragma: no-cacheCache-Control: no-cacheUpgrade: websocketOrigin: file://Sec-WebSocket-Version: 13User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, likeGecko) Chrome/65.0.3315.4 Safari/537.36Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7,es;q=0.6,fr;q=0.5,pt;q=0.4Sec-WebSocket-Key: +0jgXtYyVeG28Gn1CLUKIg==Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits</code></pre><ul><li>舍弃第一行和最后两行</li></ul><p><code>lines=lines.slice(1, lines.length-2);</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1557643527632.png" alt="1557643527632"></p><ul><li>每行数据用”: “切开</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>raw_server.js</p><p>引入net模块</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> net<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'net'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//TCP     原生Socket</span><span class="token keyword">const</span> crypto<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'crypto'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*let server=http.createServer((req, res)=>{  console.log('连接');});server.listen(8080);*/</span><span class="token keyword">let</span> server<span class="token operator">=</span>net<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>sock<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'连接'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//数据过来——握手只有一次</span>  sock<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hand shake start...'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> str<span class="token operator">=</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> lines<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\r\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//舍弃第一行和最后两行</span>    lines<span class="token operator">=</span>lines<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> lines<span class="token punctuation">.</span>length<span class="token number">-2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//切开</span>    <span class="token keyword">let</span> headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    lines<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      <span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> val<span class="token punctuation">]</span><span class="token operator">=</span>line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">': '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      headers<span class="token punctuation">[</span>key<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">=</span>val<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//console.log(headers);</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>headers<span class="token punctuation">[</span><span class="token string">'upgrade'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'websocket'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'其他协议'</span><span class="token punctuation">,</span> headers<span class="token punctuation">[</span><span class="token string">'upgrade'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sock<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>headers<span class="token punctuation">[</span><span class="token string">'sec-websocket-version'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'版本不对'</span><span class="token punctuation">,</span> headers<span class="token punctuation">[</span><span class="token string">'sec-websocket-version'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sock<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> key<span class="token operator">=</span>headers<span class="token punctuation">[</span><span class="token string">'sec-websocket-key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> mask<span class="token operator">=</span><span class="token string">'258EAFA5-E914-47DA-95CA-C5AB0DC85B11'</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//sha1(key+mask)->base64=>client</span>      <span class="token keyword">let</span> hash<span class="token operator">=</span>crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">'sha1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      hash<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>key<span class="token operator">+</span>mask<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> key2<span class="token operator">=</span>hash<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sock<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`HTTP/1.1 101 Switching Protocols\r\nUpgrade: websocket\r\nConnection: Upgrade\r\nSec-WebSocket-Accept: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\r\n\r\n`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hand shake end'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//真正的数据</span>      sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'有数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//断开了</span>  sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'客户端已断开'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="解析真正数据"><a href="#解析真正数据" class="headerlink" title="解析真正数据"></a>解析真正数据</h3><h4 id="真正数据"><a href="#真正数据" class="headerlink" title="真正数据"></a>真正数据</h4><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1557643770967.png" alt="1557643770967"></p><pre><code>81       9c       11       2d       f8       bd         数据.....10000001 10011100 00010001 00101101 11111000 1011110111 2d f8 bd6a 0f 96 dc 7c 48 da 87 33 40 8b da 33 01 da d9 70 59 99 9f 2b 76 c9 8f 3d 18 a5 c01 000 0001   1 0011100 00010001 00101101 11111000 10111101F RSV opcode M payload masking-keyI            A 28个字N            S             K</code></pre><h4 id="帧结构"><a href="#帧结构" class="headerlink" title="帧结构"></a>帧结构</h4><pre><code> 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7+-+-+-+-+-------+-+-------------+-------------------------------+|F|R|R|R| opcode|M| Payload len |    Extended payload length    ||I|S|S|S|  (4)  |A|     (7)     |             (16/64)           ||N|V|V|V|       |S|             |   (if payload len==126/127)   || |1|2|3|       |K|             |                               |+-+-+-+-+-------+-+-------------+-------------------------------+|     Extended payload length continued, if payload len == 127  |+-------------------------------+-------------------------------+|                               |Masking-key, if MASK set to 1  |+-------------------------------+-------------------------------+| Masking-key (continued)       |          Payload Data         |+-------------------------------+-------------------------------+|                     Payload Data continued ...                |+---------------------------------------------------------------+|                     Payload Data continued ...                |+---------------------------------------------------------------+FIN               1bit 是否最后一帧RSV               3bit 预留Opcode            4bit 帧类型Mask              1bit 掩码，是否加密数据，默认必须置为1Payload           7bit 长度Masking-key       1 or 4 bit 掩码Payload data      (x + y) bytes 数据Extension data    x bytes  扩展数据Application data  y bytes  程序数据</code></pre><h4 id="传递数据单位"><a href="#传递数据单位" class="headerlink" title="传递数据单位"></a>传递数据单位</h4><p>1位(bit)<br>8位等于1字节(byte)</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><p>raw_server2.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> net<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'net'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//TCP     原生Socket</span><span class="token keyword">const</span> crypto<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'crypto'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*let server=http.createServer((req, res)=>{  console.log('连接');});server.listen(8080);*/</span><span class="token keyword">let</span> server<span class="token operator">=</span>net<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>sock<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'连接'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//数据过来——握手只有一次</span>  sock<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hand shake start...'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> str<span class="token operator">=</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> lines<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\r\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//舍弃第一行和最后两行</span>    lines<span class="token operator">=</span>lines<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> lines<span class="token punctuation">.</span>length<span class="token number">-2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//切开</span>    <span class="token keyword">let</span> headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    lines<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      <span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> val<span class="token punctuation">]</span><span class="token operator">=</span>line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">': '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      headers<span class="token punctuation">[</span>key<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">=</span>val<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//console.log(headers);</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>headers<span class="token punctuation">[</span><span class="token string">'upgrade'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'websocket'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'其他协议'</span><span class="token punctuation">,</span> headers<span class="token punctuation">[</span><span class="token string">'upgrade'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sock<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>headers<span class="token punctuation">[</span><span class="token string">'sec-websocket-version'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'版本不对'</span><span class="token punctuation">,</span> headers<span class="token punctuation">[</span><span class="token string">'sec-websocket-version'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sock<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> key<span class="token operator">=</span>headers<span class="token punctuation">[</span><span class="token string">'sec-websocket-key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> mask<span class="token operator">=</span><span class="token string">'258EAFA5-E914-47DA-95CA-C5AB0DC85B11'</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//sha1(key+mask)->base64=>client</span>      <span class="token keyword">let</span> hash<span class="token operator">=</span>crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">'sha1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      hash<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>key<span class="token operator">+</span>mask<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> key2<span class="token operator">=</span>hash<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sock<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`HTTP/1.1 101 Switching Protocols\r\nUpgrade: websocket\r\nConnection: Upgrade\r\nSec-WebSocket-Accept: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\r\n\r\n`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hand shake end'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//真正的数据</span>      sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'有数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> FIN<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0x001</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> opcode<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0x0F0</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> mask<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0x001</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> payload<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0x0FE</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>FIN<span class="token punctuation">,</span> opcode<span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mask<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//断开了</span>  sock<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'客户端已断开'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><h4 id="引入net模块"><a href="#引入net模块" class="headerlink" title="引入net模块"></a>引入net模块</h4><h3 id="握手"><a href="#握手" class="headerlink" title="握手"></a>握手</h3><pre><code>  客户端:version:13、sec-websocket-key:xxxxx、sha1(key+mask)=&gt;base64  服务端:101 Switching Protocols、sec-websocket-accept: base64</code></pre><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><ul><li>onopen </li><li>onmessage</li><li>onclose</li></ul><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><ul><li>net.createServer(sock=&gt;{});</li><li>sock.once(‘data’, 握手);</li><li>sock.on(‘data’, 数据请求);</li><li>sock.on(‘end’);</li></ul><h3 id="数据帧解析"><a href="#数据帧解析" class="headerlink" title="数据帧解析"></a>数据帧解析</h3><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-WebSocket/" target="_blank" rel="noopener">WebSocket 实战</a></p><p><a href="https://en.wikipedia.org/wiki/WebSocket#External_links" target="_blank" rel="noopener">WebSocket - Wikipedia</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JUC多线程并发、JVM和GC</title>
      <link href="/2019/05/07/juc-duo-xian-cheng-bing-fa-jvm-he-gc/"/>
      <url>/2019/05/07/juc-duo-xian-cheng-bing-fa-jvm-he-gc/</url>
      
        <content type="html"><![CDATA[<h1 id="Callable接口"><a href="#Callable接口" class="headerlink" title="Callable接口"></a>Callable接口</h1><h2 id="Runnable和Callable的区别"><a href="#Runnable和Callable的区别" class="headerlink" title="Runnable和Callable的区别"></a>Runnable和Callable的区别</h2><ul><li>Runnable是自从java1.1就有了，而Callable是1.5之后才加上去的</li></ul><ul><li>Callable规定的方法是call(),Runnable规定的方法是run()</li></ul><ul><li>Callable的任务执行后可返回值，而Runnable的任务是不能返回值(是void)</li></ul><ul><li>call方法可以抛出异常，run方法不可以</li></ul><ul><li>运行Callable任务可以拿到一个Future对象，表示异步计算的结果。它提供了检查计算是否完成的方法，以等待计算的完成，并检索计算的结果。通过Future对象可以了解任务执行情况，可取消任务的执行，还可获取执行结果。</li></ul><ul><li>加入线程池运行，Runnable使用ExecutorService的execute方法，Callable使用submit方法。</li></ul><h2 id="Callable接口-1"><a href="#Callable接口-1" class="headerlink" title="Callable接口"></a>Callable接口</h2><p><code>callable</code>有个<code>&lt;V&gt;</code>,这个<code>V</code>就是<code>call</code>函数的返回值类型</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * A task that returns a result and may throw an exception. * Implementors define a single method with no arguments called * {@code call}. * * &lt;p>The {@code Callable} interface is similar to {@link * java.lang.Runnable}, in that both are designed for classes whose * instances are potentially executed by another thread.  A * {@code Runnable}, however, does not return a result and cannot * throw a checked exception. * * &lt;p>The {@link Executors} class contains utility methods to * convert from other common forms to {@code Callable} classes. * * @see Executor * @since 1.5 * @author Doug Lea * @param &lt;V> the result type of method {@code call} */</span><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Callable</span><span class="token operator">&lt;</span>V<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * Computes a result, or throws an exception if unable to do so.     *     * @return computed result     * @throws Exception if unable to compute a result     */</span>    V <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="FutureTask类"><a href="#FutureTask类" class="headerlink" title="FutureTask类"></a>FutureTask类</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * A cancellable asynchronous computation.  This class provides a base * implementation of {@link Future}, with methods to start and cancel * a computation, query to see if the computation is complete, and * retrieve the result of the computation.  The result can only be * retrieved when the computation has completed; the {@code get} * methods will block if the computation has not yet completed.  Once * the computation has completed, the computation cannot be restarted * or cancelled (unless the computation is invoked using * {@link #runAndReset}). * * &lt;p>A {@code FutureTask} can be used to wrap a {@link Callable} or * {@link Runnable} object.  Because {@code FutureTask} implements * {@code Runnable}, a {@code FutureTask} can be submitted to an * {@link Executor} for execution. * * &lt;p>In addition to serving as a standalone class, this class provides * {@code protected} functionality that may be useful when creating * customized task classes. * * @since 1.5 * @author Doug Lea * @param &lt;V> The result type returned by this FutureTask's {@code get} methods */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FutureTask</span><span class="token operator">&lt;</span>V<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">RunnableFuture</span><span class="token operator">&lt;</span>V<span class="token operator">></span> </code></pre><pre class=" language-Java"><code class="language-Java">/** * Creates a {@code FutureTask} that will, upon running, execute the * given {@code Callable}. * * @param  callable the callable task * @throws NullPointerException if the callable is null */public FutureTask(Callable<V> callable) {    if (callable == null)        throw new NullPointerException();    this.callable = callable;    this.state = NEW;       // ensure visibility of callable}</code></pre><h2 id="RunnableFuture接口"><a href="#RunnableFuture接口" class="headerlink" title="RunnableFuture接口"></a>RunnableFuture接口</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * A {@link Future} that is {@link Runnable}. Successful execution of * the {@code run} method causes completion of the {@code Future} * and allows access to its results. * @see FutureTask * @see Executor * @since 1.6 * @author Doug Lea * @param &lt;V> The result type returned by this Future's {@code get} method */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RunnableFuture</span><span class="token operator">&lt;</span>V<span class="token operator">></span> <span class="token keyword">extends</span> <span class="token class-name">Runnable</span><span class="token punctuation">,</span> Future<span class="token operator">&lt;</span>V<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * Sets this Future to the result of its computation     * unless it has been cancelled.     */</span>    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CallableTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        MyThread mt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        FutureTask<span class="token operator">&lt;</span>Integer<span class="token operator">></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span>mt<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 获取运算结果是同步过程，即 call 方法执行完成，才能获取结果</span>        Integer sum <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Integer <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>当某个请求需要在后端完成 N 次统计结果时，我们就可以使用该方式创建 N 个线程进行（并行）统计，而不需要同步等待其他统计操作完成后才统计另一个结果。</p><h1 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h1><h2 id="线程池3个常用方式"><a href="#线程池3个常用方式" class="headerlink" title="线程池3个常用方式"></a>线程池3个常用方式</h2><p>Executors.newFixedThreadPool</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Creates a thread pool that reuses a fixed number of threads * operating off a shared unbounded queue.  At any point, at most * {@code nThreads} threads will be active processing tasks. * If additional tasks are submitted when all threads are active, * they will wait in the queue until a thread is available. * If any thread terminates due to a failure during execution * prior to shutdown, a new one will take its place if needed to * execute subsequent tasks.  The threads in the pool will exist * until it is explicitly {@link ExecutorService#shutdown shutdown}. * * @param nThreads the number of threads in the pool * @return the newly created thread pool * @throws IllegalArgumentException if {@code nThreads &lt;= 0} */</span><span class="token keyword">public</span> <span class="token keyword">static</span> ExecutorService <span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> nThreads<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>nThreads<span class="token punctuation">,</span> nThreads<span class="token punctuation">,</span>                                  0L<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>                                  <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token operator">&lt;</span>Runnable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Executors.newSingleThreadExecutor</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Creates an Executor that uses a single worker thread operating * off an unbounded queue. (Note however that if this single * thread terminates due to a failure during execution prior to * shutdown, a new one will take its place if needed to execute * subsequent tasks.)  Tasks are guaranteed to execute * sequentially, and no more than one task will be active at any * given time. Unlike the otherwise equivalent * {@code newFixedThreadPool(1)} the returned executor is * guaranteed not to be reconfigurable to use additional threads. * * @return the newly created single-threaded Executor */</span><span class="token keyword">public</span> <span class="token keyword">static</span> ExecutorService <span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FinalizableDelegatedExecutorService</span>        <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>                                0L<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>                                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token operator">&lt;</span>Runnable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Executors.newCachedThreadPool</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Creates a thread pool that creates new threads as needed, but * will reuse previously constructed threads when they are * available.  These pools will typically improve the performance * of programs that execute many short-lived asynchronous tasks. * Calls to {@code execute} will reuse previously constructed * threads if available. If no existing thread is available, a new * thread will be created and added to the pool. Threads that have * not been used for sixty seconds are terminated and removed from * the cache. Thus, a pool that remains idle for long enough will * not consume any resources. Note that pools with similar * properties but different details (for example, timeout parameters) * may be created using {@link ThreadPoolExecutor} constructors. * * @return the newly created thread pool */</span><span class="token keyword">public</span> <span class="token keyword">static</span> ExecutorService <span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span>                                  60L<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>                                  <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token operator">&lt;</span>Runnable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="线程池7大参数"><a href="#线程池7大参数" class="headerlink" title="线程池7大参数"></a>线程池7大参数</h2><p><a href="https://juejin.im/entry/5aa0e1c151882555712be8b8" target="_blank" rel="noopener">Java 多线程开发之 Callable 与线程池（三） - 后端 - 掘金</a></p><ul><li><p>int corePoolSize   线程池核心线程个数，默认线程池线程个数为 0，只有接到任务才新建线程</p></li><li><p>int maximumPoolSize  线程池最大线程数量</p></li><li><p>long keepAliveTime 线程池空闲时，线程存活的时间，当线程池中的线程数大于 corePoolSize 时才会起作用</p></li><li><p>TimeUnit unit 时间单位</p></li></ul><ul><li><p>BlockingQueue<runnable> workQueue 阻塞队列，当达到线程数达到 corePoolSize 时，将任务放入队列等待线程处理</runnable></p></li><li><p>ThreadFactory threadFactory 线程工厂</p></li><li><p>RejectedExecutionHandler handler 线程拒绝策略，当队列满了并且线程个数达到 maximumPoolSize 后采取的策略</p></li></ul><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Creates a new {@code ThreadPoolExecutor} with the given initial * parameters and default thread factory. * * @param corePoolSize the number of threads to keep in the pool, even *        if they are idle, unless {@code allowCoreThreadTimeOut} is set * @param maximumPoolSize the maximum number of threads to allow in the *        pool * @param keepAliveTime when the number of threads is greater than *        the core, this is the maximum time that excess idle threads *        will wait for new tasks before terminating. * @param unit the time unit for the {@code keepAliveTime} argument * @param workQueue the queue to use for holding tasks before they are *        executed.  This queue will hold only the {@code Runnable} *        tasks submitted by the {@code execute} method. * @param handler the handler to use when execution is blocked *        because the thread bounds and queue capacities are reached * @throws IllegalArgumentException if one of the following holds:&lt;br> *         {@code corePoolSize &lt; 0}&lt;br> *         {@code keepAliveTime &lt; 0}&lt;br> *         {@code maximumPoolSize &lt;= 0}&lt;br> *         {@code maximumPoolSize &lt; corePoolSize} * @throws NullPointerException if {@code workQueue} *         or {@code handler} is null */</span><span class="token keyword">public</span> <span class="token function">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>                          <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>                          <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>                          TimeUnit unit<span class="token punctuation">,</span>                          BlockingQueue<span class="token operator">&lt;</span>Runnable<span class="token operator">></span> workQueue<span class="token punctuation">,</span>                          RejectedExecutionHandler handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> maximumPoolSize<span class="token punctuation">,</span> keepAliveTime<span class="token punctuation">,</span> unit<span class="token punctuation">,</span> workQueue<span class="token punctuation">,</span>         Executors<span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * Creates a new {@code ThreadPoolExecutor} with the given initial * parameters. * * @param corePoolSize the number of threads to keep in the pool, even *        if they are idle, unless {@code allowCoreThreadTimeOut} is set * @param maximumPoolSize the maximum number of threads to allow in the *        pool * @param keepAliveTime when the number of threads is greater than *        the core, this is the maximum time that excess idle threads *        will wait for new tasks before terminating. * @param unit the time unit for the {@code keepAliveTime} argument * @param workQueue the queue to use for holding tasks before they are *        executed.  This queue will hold only the {@code Runnable} *        tasks submitted by the {@code execute} method. * @param threadFactory the factory to use when the executor *        creates a new thread * @param handler the handler to use when execution is blocked *        because the thread bounds and queue capacities are reached * @throws IllegalArgumentException if one of the following holds:&lt;br> *         {@code corePoolSize &lt; 0}&lt;br> *         {@code keepAliveTime &lt; 0}&lt;br> *         {@code maximumPoolSize &lt;= 0}&lt;br> *         {@code maximumPoolSize &lt; corePoolSize} * @throws NullPointerException if {@code workQueue} *         or {@code threadFactory} or {@code handler} is null */</span><span class="token keyword">public</span> <span class="token function">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>                          <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>                          <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>                          TimeUnit unit<span class="token punctuation">,</span>                          BlockingQueue<span class="token operator">&lt;</span>Runnable<span class="token operator">></span> workQueue<span class="token punctuation">,</span>                          ThreadFactory threadFactory<span class="token punctuation">,</span>                          RejectedExecutionHandler handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>corePoolSize <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>        maximumPoolSize <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span>        maximumPoolSize <span class="token operator">&lt;</span> corePoolSize <span class="token operator">||</span>        keepAliveTime <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>workQueue <span class="token operator">==</span> null <span class="token operator">||</span> threadFactory <span class="token operator">==</span> null <span class="token operator">||</span> handler <span class="token operator">==</span> null<span class="token punctuation">)</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>acc <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> null <span class="token operator">?</span>            null <span class="token operator">:</span>            AccessController<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>corePoolSize <span class="token operator">=</span> corePoolSize<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>maximumPoolSize <span class="token operator">=</span> maximumPoolSize<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>workQueue <span class="token operator">=</span> workQueue<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>keepAliveTime <span class="token operator">=</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>threadFactory <span class="token operator">=</span> threadFactory<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handler <span class="token operator">=</span> handler<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="线程池的合理配置"><a href="#线程池的合理配置" class="headerlink" title="线程池的合理配置"></a>线程池的合理配置</h2><h3 id="获取系统设备处理器核数"><a href="#获取系统设备处理器核数" class="headerlink" title="获取系统设备处理器核数"></a>获取系统设备处理器核数</h3><pre class=" language-java"><code class="language-java">Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="考虑因素"><a href="#考虑因素" class="headerlink" title="考虑因素"></a>考虑因素</h2><h3 id="CPU密集型"><a href="#CPU密集型" class="headerlink" title="CPU密集型"></a>CPU密集型</h3><p>线程数 = CPU可用核心数/(1 - 阻塞系数)，其中阻塞系数的取值在0和1之间</p><h3 id="IO密集型"><a href="#IO密集型" class="headerlink" title="IO密集型"></a>IO密集型</h3><h2 id="线程池的工作原理"><a href="#线程池的工作原理" class="headerlink" title="线程池的工作原理"></a>线程池的工作原理</h2><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1557299840009.png" alt="1557299840009"></p><h3 id="execute方法执行逻辑"><a href="#execute方法执行逻辑" class="headerlink" title="execute方法执行逻辑"></a>execute方法执行逻辑</h3><h4 id="核心线程数"><a href="#核心线程数" class="headerlink" title="核心线程数"></a>核心线程数</h4><p>如果当前运行的线程少于<code>corePoolSize</code>，则会创建新的线程来执行新的任务</p><h4 id="加入阻塞队列"><a href="#加入阻塞队列" class="headerlink" title="加入阻塞队列"></a>加入阻塞队列</h4><p>如果运行的线程个数等于或者大于<code>corePoolSize</code>，则会将提交的任务存放到阻塞队列<code>workQueue</code>中</p><h4 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h4><p>如果当前<code>workQueue</code>队列已满的话，则会创建新的线程来执行任务</p><h4 id="拒绝策略"><a href="#拒绝策略" class="headerlink" title="拒绝策略"></a>拒绝策略</h4><p>如果线程个数已经超过了<code>maximumPoolSize</code>，则会使用饱和策略<code>RejectedExecutionHandler</code>来进行处理</p><h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><h2 id="常见故障"><a href="#常见故障" class="headerlink" title="常见故障"></a>常见故障</h2><h3 id="StackOverflowError"><a href="#StackOverflowError" class="headerlink" title="StackOverflowError"></a>StackOverflowError</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StackOverflowErrorDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">stackOverflowError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">stackOverflowError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">stackOverflowError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>结果</p><pre><code>Exception in thread &quot;main&quot; java.lang.StackOverflowError    at StackOverflowErrorDemo.stackOverflowError(StackOverflowErrorDemo.java:7)    at StackOverflowErrorDemo.stackOverflowError(StackOverflowErrorDemo.java:7)    at StackOverflowErrorDemo.stackOverflowError(StackOverflowErrorDemo.java:7)</code></pre><h3 id="Java-heap-space"><a href="#Java-heap-space" class="headerlink" title="Java heap space"></a>Java heap space</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JavaHeapSpaceDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String str <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            str<span class="token operator">+=</span>str<span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">111111</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">222222</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            str<span class="token punctuation">.</span><span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>运行</p><p>配置参数</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1564643060262.png" alt="1564643060262"></p><p>结果</p><pre><code>Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: Java heap space    at java.util.Arrays.copyOf(Arrays.java:3332)    at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)    at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448)    at java.lang.StringBuilder.append(StringBuilder.java:136)    at JavaHeapSpaceDemo.main(JavaHeapSpaceDemo.java:9)</code></pre><h3 id="GC-overhead-limit-exceeded"><a href="#GC-overhead-limit-exceeded" class="headerlink" title="GC overhead limit exceeded"></a>GC overhead limit exceeded</h3><p>GC回收时间过长时会抛出OutOfMemoryError。过长的定义是，超过98%的时间用来做GC并且回收了不到2%的堆内存</p><p>连续多次GC都只回收了不到2%的极端情况下才会抛出。假如不抛出GC overhead limit 错误会发生什么情况呢？</p><p>那就是GC清理的这么点内存很快会再次填满，迫使GC再次致谢，这样就形成了恶性循环，CPU使用率一直是100%，而GC却没有任何成果</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GCOverheadDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"**************i:"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>运行参数配置</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1564643600222.png" alt="1564643600222"></p><p> 结果</p><pre><code>[GC (Allocation Failure) [PSYoungGen: 2048K-&gt;480K(2560K)] 2048K-&gt;916K(9728K), 0.0043924 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] [GC (Allocation Failure) [PSYoungGen: 2528K-&gt;480K(2560K)] 2964K-&gt;2709K(9728K), 0.0022096 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] [GC (Allocation Failure) [PSYoungGen: 2528K-&gt;504K(2560K)] 4757K-&gt;4835K(9728K), 0.0028678 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] [GC (Allocation Failure) [PSYoungGen: 2552K-&gt;488K(2560K)] 6883K-&gt;6764K(9728K), 0.0032660 secs] [Times: user=0.06 sys=0.00, real=0.00 secs] [Full GC (Ergonomics) [PSYoungGen: 488K-&gt;0K(2560K)] [ParOldGen: 6276K-&gt;6188K(7168K)] 6764K-&gt;6188K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0784031 secs] [Times: user=0.25 sys=0.00, real=0.08 secs] [Full GC (Ergonomics) [PSYoungGen: 2048K-&gt;738K(2560K)] [ParOldGen: 6188K-&gt;7039K(7168K)] 8236K-&gt;7777K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0437521 secs] [Times: user=0.19 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2048K-&gt;2046K(2560K)] [ParOldGen: 7039K-&gt;7039K(7168K)] 9087K-&gt;9086K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0405225 secs] [Times: user=0.28 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2048K-&gt;2047K(2560K)] [ParOldGen: 7039K-&gt;7039K(7168K)] 9087K-&gt;9087K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0315932 secs] [Times: user=0.13 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7039K-&gt;7039K(7168K)] 9087K-&gt;9087K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0350043 secs] [Times: user=0.23 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7041K-&gt;7041K(7168K)] 9089K-&gt;9089K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0343159 secs] [Times: user=0.25 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7043K-&gt;7043K(7168K)] 9091K-&gt;9091K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0335877 secs] [Times: user=0.33 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7044K-&gt;7044K(7168K)] 9092K-&gt;9092K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0324352 secs] [Times: user=0.20 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7046K-&gt;7046K(7168K)] 9094K-&gt;9094K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0329995 secs] [Times: user=0.20 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7048K-&gt;7048K(7168K)] 9096K-&gt;9096K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0342704 secs] [Times: user=0.14 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7050K-&gt;7050K(7168K)] 9098K-&gt;9098K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0336287 secs] [Times: user=0.11 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7051K-&gt;7051K(7168K)] 9099K-&gt;9099K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0324847 secs] [Times: user=0.22 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7053K-&gt;7053K(7168K)] 9101K-&gt;9101K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0342784 secs] [Times: user=0.22 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7055K-&gt;7055K(7168K)] 9103K-&gt;9103K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0334541 secs] [Times: user=0.33 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7057K-&gt;7057K(7168K)] 9105K-&gt;9105K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0341891 secs] [Times: user=0.22 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7058K-&gt;7058K(7168K)] 9106K-&gt;9106K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0302677 secs] [Times: user=0.19 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7060K-&gt;7060K(7168K)] 9108K-&gt;9108K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0326491 secs] [Times: user=0.19 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7062K-&gt;7062K(7168K)] 9110K-&gt;9110K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0327378 secs] [Times: user=0.11 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7064K-&gt;7064K(7168K)] 9112K-&gt;9112K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0325700 secs] [Times: user=0.09 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7065K-&gt;7065K(7168K)] 9113K-&gt;9113K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0322844 secs] [Times: user=0.11 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7067K-&gt;7067K(7168K)] 9115K-&gt;9115K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0269232 secs] [Times: user=0.11 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7069K-&gt;7069K(7168K)] 9117K-&gt;9117K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0343916 secs] [Times: user=0.11 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7071K-&gt;7071K(7168K)] 9119K-&gt;9119K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0329739 secs] [Times: user=0.09 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7072K-&gt;7072K(7168K)] 9120K-&gt;9120K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0311813 secs] [Times: user=0.05 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7074K-&gt;7074K(7168K)] 9122K-&gt;9122K(9728K), [Metaspace: 3225K-&gt;3225K(1056768K)], 0.0385086 secs] [Times: user=0.05 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7078K-&gt;7058K(7168K)] 9126K-&gt;9106K(9728K), [Metaspace: 3228K-&gt;3228K(1056768K)], 0.0489022 secs] [Times: user=0.17 sys=0.00, real=0.05 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7060K-&gt;7060K(7168K)] 9108K-&gt;9108K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0297955 secs] [Times: user=0.14 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7061K-&gt;7061K(7168K)] 9109K-&gt;9109K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0277327 secs] [Times: user=0.06 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7063K-&gt;7063K(7168K)] 9111K-&gt;9111K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0337749 secs] [Times: user=0.25 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7065K-&gt;7065K(7168K)] 9113K-&gt;9113K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0274153 secs] [Times: user=0.06 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7067K-&gt;7067K(7168K)] 9115K-&gt;9115K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0325819 secs] [Times: user=0.16 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7069K-&gt;7069K(7168K)] 9117K-&gt;9117K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0353046 secs] [Times: user=0.19 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7070K-&gt;7070K(7168K)] 9118K-&gt;9118K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0310516 secs] [Times: user=0.22 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7072K-&gt;7072K(7168K)] 9120K-&gt;9120K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0344718 secs] [Times: user=0.13 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7074K-&gt;7074K(7168K)] 9122K-&gt;9122K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0291248 secs] [Times: user=0.09 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7076K-&gt;7076K(7168K)] 9124K-&gt;9124K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0330405 secs] [Times: user=0.11 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7078K-&gt;7078K(7168K)] 9126K-&gt;9126K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0394979 secs] [Times: user=0.16 sys=0.00, real=0.04 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7079K-&gt;7079K(7168K)] 9127K-&gt;9127K(9728K), [Metaspace: 3229K-&gt;3229K(1056768K)], 0.0327822 secs] [Times: user=0.16 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7083K-&gt;7081K(7168K)] 9131K-&gt;9129K(9728K), [Metaspace: 3233K-&gt;3233K(1056768K)], 0.0320142 secs] [Times: user=0.17 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7083K-&gt;7083K(7168K)] 9131K-&gt;9131K(9728K), [Metaspace: 3234K-&gt;3234K(1056768K)], 0.0321638 secs] [Times: user=0.19 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7088K-&gt;7088K(7168K)] 9136K-&gt;9136K(9728K), [Metaspace: 3234K-&gt;3234K(1056768K)], 0.0324113 secs] [Times: user=0.11 sys=0.00, real=0.03 secs] [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;2047K(2560K)] [ParOldGen: 7090K-&gt;7090K(7168K)] 9138K-&gt;9138K(9728K), [Metaspace: 3234K-&gt;3234K(1056768K)], 0.0362137 secs] [Times: user=0.11 sys=0.00, real=0.04 secs] Exception in thread &quot;main&quot; [Full GC (Ergonomics) [PSYoungGen: 2047K-&gt;0K(2560K)] [ParOldGen: 7112K-&gt;633K(7168K)] 9160K-&gt;633K(9728K), [Metaspace: 3269K-&gt;3269K(1056768K)], 0.0058288 secs] [Times: user=0.11 sys=0.00, real=0.01 secs] java.lang.OutOfMemoryError: GC overhead limit exceeded    at java.lang.Integer.toString(Integer.java:403)    at java.lang.String.valueOf(String.java:3099)    at GCOverheadDemo.main(GCOverheadDemo.java:13)Heap PSYoungGen      total 2560K, used 126K [0x00000000ffd00000, 0x0000000100000000, 0x0000000100000000)  eden space 2048K, 6% used [0x00000000ffd00000,0x00000000ffd1fa60,0x00000000fff00000)  from space 512K, 0% used [0x00000000fff80000,0x00000000fff80000,0x0000000100000000)  to   space 512K, 0% used [0x00000000fff00000,0x00000000fff00000,0x00000000fff80000) ParOldGen       total 7168K, used 633K [0x00000000ff600000, 0x00000000ffd00000, 0x00000000ffd00000)  object space 7168K, 8% used [0x00000000ff600000,0x00000000ff69e6f8,0x00000000ffd00000) Metaspace       used 3334K, capacity 4500K, committed 4864K, reserved 1056768K  class space    used 360K, capacity 388K, committed 512K, reserved 1048576K</code></pre><h3 id="Direct-buffer-memory"><a href="#Direct-buffer-memory" class="headerlink" title="Direct buffer memory"></a>Direct buffer memory</h3><p>元空间的本质和永久代类似，都是对JVM规范中方法区的实现。不过元空间与永久代间最大的区别在于：元空间并不在虚拟机中，而是使用本地内存。因此，默认情况下，元空间的大小仅受本地内存限制。</p><p>写NIO程序经常使用ByteBuffer来读取或者写入数据，这是一种基于通道（Channel）与缓冲区（Buffer）的I/O方式，它可以使用Native函数库直接分配堆外内存，然后统一一个存储在Java堆里面的DirectByteBuffer对象作为这块内存的引用进行操作。这样能在一下场景中显著提高性能，因为避免了在Java堆和Native堆中来回复制数据。</p><p>ByteBuffer.allocate(capability)第一种方式分配JVM堆内存，属于GC管辖范围，由于需要拷贝索引速度相对较慢。</p><p>ByteBuffer.allocateDirect(capability)第二种方式是分配OS本地内存，不属于GC管辖范围，由于不需要内存拷贝索引速度相对较快。</p><p>但如果不断分配本地内存，堆内存很少使用，那么JVM久不需要执行GC，DirectByteBuffer对象们就不会被回收，这时候堆内存充足，但本地内存可能已经使用光了，再次尝试分配本地内存就会出现OutOfMemory，那程序就直接崩溃了。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>ByteBuffer<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DriectBufferMemoryDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"配置的maxDirectMemory:"</span><span class="token operator">+</span>sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span>VM<span class="token punctuation">.</span><span class="token function">maxDirectMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token operator">+</span><span class="token string">"MB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        ByteBuffer buffer <span class="token operator">=</span> ByteBuffer<span class="token punctuation">.</span><span class="token function">allocateDirect</span><span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>运行参数配置</p><pre><code>-Xms10m -Xmx10m -XX:+PrintGCDetails -XX:MaxDirectMemorySize=5m</code></pre><p>结果</p><pre><code>配置的maxDirectMemory:5.0MB[GC (Allocation Failure) [PSYoungGen: 2048K-&gt;488K(2560K)] 2048K-&gt;892K(9728K), 0.0008431 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] [GC (System.gc()) [PSYoungGen: 1269K-&gt;504K(2560K)] 1673K-&gt;1132K(9728K), 0.0010115 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] [Full GC (System.gc()) [PSYoungGen: 504K-&gt;0K(2560K)] [ParOldGen: 628K-&gt;1028K(7168K)] 1132K-&gt;1028K(9728K), [Metaspace: 3741K-&gt;3741K(1056768K)], 0.0091449 secs] [Times: user=0.13 sys=0.00, real=0.01 secs] Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: Direct buffer memory    at java.nio.Bits.reserveMemory(Bits.java:694)    at java.nio.DirectByteBuffer.&lt;init&gt;(DirectByteBuffer.java:123)    at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)    at DriectBufferMemoryDemo.main(DriectBufferMemoryDemo.java:11)Heap PSYoungGen      total 2560K, used 49K [0x00000000ffd00000, 0x0000000100000000, 0x0000000100000000)  eden space 2048K, 2% used [0x00000000ffd00000,0x00000000ffd0c5d0,0x00000000fff00000)  from space 512K, 0% used [0x00000000fff80000,0x00000000fff80000,0x0000000100000000)  to   space 512K, 0% used [0x00000000fff00000,0x00000000fff00000,0x00000000fff80000) ParOldGen       total 7168K, used 1028K [0x00000000ff600000, 0x00000000ffd00000, 0x00000000ffd00000)  object space 7168K, 14% used [0x00000000ff600000,0x00000000ff7011b0,0x00000000ffd00000) Metaspace       used 3772K, capacity 4536K, committed 4864K, reserved 1056768K  class space    used 414K, capacity 428K, committed 512K, reserved 1048576K</code></pre><h3 id="unable-to-create-new-native-thread"><a href="#unable-to-create-new-native-thread" class="headerlink" title="unable to create new native thread"></a>unable to create new native thread</h3><p>高并发请求服务器时，经常出现如下异常： java.lang.OutOfMemoryError: unable to create new native thread，准确地讲该native thread异常与对应的平台有关</p><p>导致原因：</p><p>你的应用创建了太多线程了，一个应用进程创建多个线程，超过系统承载极限</p><p>你的应用创建超过这个数量，就会报java.lang.OutOfMemoryError: unable to create new native thread</p><p>解决办法：</p><p>想办法降低你应用程序创建线程的数量，分析应用是否真的需要创建这么多线程，如果不是，改代码将线程数降到最低</p><p>对于有的应用，确实需要创建很多线程，远超过Linux系统的默认1024个线程的限制，可以通过修改Linux服务器配置，扩大Linux默认限制</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnableCreateNewThreadDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"********** i = "</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>编译运行</p><pre><code>[es@192 tmp]$ javac -d . UnableCreateNewThreadDemo.java [es@192 tmp]$ java UnableCreateNewThreadDemo********** i = 4075********** i = 4076Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: unable to create new native thread        at java.lang.Thread.start0(Native Method)        at java.lang.Thread.start(Thread.java:717)        at UnableCreateNewThreadDemo.main(UnableCreateNewThreadDemo.java:11)^CJava HotSpot(TM) 64-Bit Server VM warning: Exception java.lang.OutOfMemoryError occurred dispatching signal SIGINT to handler- the VM may need to be forcibly terminated^CJava HotSpot(TM) 64-Bit Server VM warning: Exception java.lang.OutOfMemoryError occurred dispatching signal SIGINT to handler- the VM may need to be forcibly terminatedJava HotSpot(TM) 64-Bit Server VM warning: Exception java.lang.OutOfMemoryError occurred dispatching signal SIGTERM to handler- the VM may need to be forcibly terminated^CJava HotSpot(TM) 64-Bit Server VM warning: Exception java.lang.OutOfMemoryError occurred dispatching signal SIGINT to handler- the VM may need to be forcibly terminatedKilled  </code></pre><p>以root用户登录开启另外一个终端</p><pre><code>[root@192 ~]# jps8257 Jps4120 UnableCreateNewThreadDemo[root@192 ~]# kill -9 4120</code></pre><p>修改用户线程数</p><pre><code>[root@192 ~]# ulimit -u4096[root@192 ~]# vim /etc/security/limits.d/90-nproc.conf </code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1564647962235.png" alt="1564647962235"></p><h3 id="Metaspace"><a href="#Metaspace" class="headerlink" title="Metaspace"></a>Metaspace</h3><p>Java8及之后的版本使用Metaspace来替代永久代。</p><p>Metaspace是方法区在HotSpot的实现，它与永久代最大的区别在于：Metaspace并不在虚拟机内存中而是使用本地内存，也即在java8中，classe metadata（the virtual machines internal presentation of java class），被存储在叫做Metaspace的native memory</p><p>永久代（java8后被元空间Metaspace取代了）存放了一下信息：</p><ul><li>虚拟机加载类信息</li><li>常量池</li><li>静态变量</li><li>即时编译后的代码</li></ul><p>模拟Metaspace空间溢出，我们不断生成类往元空间灌，类占据的空间总是会超过Metaspace指定的空间大小的</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> net<span class="token punctuation">.</span>sf<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>Enhancer<span class="token punctuation">;</span><span class="token keyword">import</span> net<span class="token punctuation">.</span>sf<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>MethodInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> net<span class="token punctuation">.</span>sf<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>MethodProxy<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Method<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MetaspaceOOMTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                i<span class="token operator">++</span><span class="token punctuation">;</span>                Enhancer enhancer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Enhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                enhancer<span class="token punctuation">.</span><span class="token function">setSuperclass</span><span class="token punctuation">(</span>OOMTest<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                enhancer<span class="token punctuation">.</span><span class="token function">setUseCache</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                enhancer<span class="token punctuation">.</span><span class="token function">setCallback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MethodInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> Object <span class="token function">intercept</span><span class="token punctuation">(</span>Object o<span class="token punctuation">,</span> Method method<span class="token punctuation">,</span> Object<span class="token punctuation">[</span><span class="token punctuation">]</span> objects<span class="token punctuation">,</span> MethodProxy methodProxy<span class="token punctuation">)</span> <span class="token keyword">throws</span> Throwable <span class="token punctuation">{</span>                        <span class="token keyword">return</span> methodProxy<span class="token punctuation">.</span><span class="token function">invokeSuper</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                enhancer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*************多少次后发生了异常："</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">OOMTest</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>运行配置参数</p><pre><code>-XX:MetaspaceSize=8m -XX:MaxMetaspaceSize=8m</code></pre>]]></content>
      
      
      <categories>
          
          <category> 日常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java8深入剖析与实战</title>
      <link href="/2019/05/04/java8-shen-ru-pou-xi-yu-shi-zhan/"/>
      <url>/2019/05/04/java8-shen-ru-pou-xi-yu-shi-zhan/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h1></blockquote><blockquote><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2></blockquote><p>如果一个接口只有一个抽象方法，那么该接口就是一个函数式接口</p><p>如果在某个接口上声明了<code>FunctionalInterface</code>注解，那么编译器就会按照函数式接口的定义来要求该接口</p><p>如果某个接口只有一个抽象方法，但我们并没有给该接口声明<code>FunctionalInterface</code>注解，那么编译器依旧会将该接口看作是函数式接口</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/* * Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved. * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. * * * */</span><span class="token keyword">package</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * An informative annotation type used to indicate that an interface * type declaration is intended to be a &lt;i>functional interface&lt;/i> as * defined by the Java Language Specification. * * Conceptually, a functional interface has exactly one abstract * method.  Since {@linkplain java.lang.reflect.Method#isDefault() * default methods} have an implementation, they are not abstract.  If * an interface declares an abstract method overriding one of the * public methods of {@code java.lang.Object}, that also does * &lt;em>not&lt;/em> count toward the interface's abstract method count * since any implementation of the interface will have an * implementation from {@code java.lang.Object} or elsewhere. * * &lt;p>Note that instances of functional interfaces can be created with * lambda expressions, method references, or constructor references. * * &lt;p>If a type is annotated with this annotation type, compilers are * required to generate an error message unless: * * &lt;ul> * &lt;li> The type is an interface type and not an annotation type, enum, or class. * &lt;li> The annotated type satisfies the requirements of a functional interface. * &lt;/ul> * * &lt;p>However, the compiler will treat any interface meeting the * definition of a functional interface as a functional interface * regardless of whether or not a {@code FunctionalInterface} * annotation is present on the interface declaration. * * @jls 4.3.2. The Class Object * @jls 9.8 Functional Interfaces * @jls 9.4.3 Interface Method Body * @since 1.8 */</span><span class="token annotation punctuation">@Documented</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>ElementType<span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span><span class="token keyword">public</span> @<span class="token keyword">interface</span> <span class="token class-name">FunctionalInterface</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p><code>Runnable</code>接口</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Runnable%E6%8E%A5%E5%8F%A3.png" alt></p><blockquote><h2 id="函数式接口的创建"><a href="#函数式接口的创建" class="headerlink" title="函数式接口的创建"></a>函数式接口的创建</h2></blockquote><p><code>lambda</code>表达式、方法引用、构造函数引用</p><blockquote><p>Note that instances of functional interfaces can be created with<br>lambda expressions, method references, or constructor references.</p></blockquote><blockquote><h1 id="Stream流"><a href="#Stream流" class="headerlink" title="Stream流"></a><code>Stream</code>流</h1></blockquote><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/* * Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved. * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. * * * */</span><span class="token keyword">package</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>Charset<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span>Files<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span>Path<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Comparator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Objects<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Optional<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Spliterator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Spliterators<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>ConcurrentHashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>BiConsumer<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>BiFunction<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>BinaryOperator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>Consumer<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>Function<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>IntFunction<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>Predicate<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>Supplier<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>ToDoubleFunction<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>ToIntFunction<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>ToLongFunction<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span>UnaryOperator<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * A sequence of elements supporting sequential and parallel aggregate * operations.  The following example illustrates an aggregate operation using * {@link Stream} and {@link IntStream}: * * &lt;pre>{@code *     int sum = widgets.stream() *                      .filter(w -> w.getColor() == RED) *                      .mapToInt(w -> w.getWeight()) *                      .sum(); * }&lt;/pre> * * In this example, {@code widgets} is a {@code Collection&lt;Widget>}.  We create * a stream of {@code Widget} objects via {@link Collection#stream Collection.stream()}, * filter it to produce a stream containing only the red widgets, and then * transform it into a stream of {@code int} values representing the weight of * each red widget. Then this stream is summed to produce a total weight. * * &lt;p>In addition to {@code Stream}, which is a stream of object references, * there are primitive specializations for {@link IntStream}, {@link LongStream}, * and {@link DoubleStream}, all of which are referred to as "streams" and * conform to the characteristics and restrictions described here. * * &lt;p>To perform a computation, stream * &lt;a href="package-summary.html#StreamOps">operations&lt;/a> are composed into a * &lt;em>stream pipeline&lt;/em>.  A stream pipeline consists of a source (which * might be an array, a collection, a generator function, an I/O channel, * etc), zero or more &lt;em>intermediate operations&lt;/em> (which transform a * stream into another stream, such as {@link Stream#filter(Predicate)}), and a * &lt;em>terminal operation&lt;/em> (which produces a result or side-effect, such * as {@link Stream#count()} or {@link Stream#forEach(Consumer)}). * Streams are lazy; computation on the source data is only performed when the * terminal operation is initiated, and source elements are consumed only * as needed. * * &lt;p>Collections and streams, while bearing some superficial similarities, * have different goals.  Collections are primarily concerned with the efficient * management of, and access to, their elements.  By contrast, streams do not * provide a means to directly access or manipulate their elements, and are * instead concerned with declaratively describing their source and the * computational operations which will be performed in aggregate on that source. * However, if the provided stream operations do not offer the desired * functionality, the {@link #iterator()} and {@link #spliterator()} operations * can be used to perform a controlled traversal. * * &lt;p>A stream pipeline, like the "widgets" example above, can be viewed as * a &lt;em>query&lt;/em> on the stream source.  Unless the source was explicitly * designed for concurrent modification (such as a {@link ConcurrentHashMap}), * unpredictable or erroneous behavior may result from modifying the stream * source while it is being queried. * * &lt;p>Most stream operations accept parameters that describe user-specified * behavior, such as the lambda expression {@code w -> w.getWeight()} passed to * {@code mapToInt} in the example above.  To preserve correct behavior, * these &lt;em>behavioral parameters&lt;/em>: * &lt;ul> * &lt;li>must be &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a> * (they do not modify the stream source); and&lt;/li> * &lt;li>in most cases must be &lt;a href="package-summary.html#Statelessness">stateless&lt;/a> * (their result should not depend on any state that might change during execution * of the stream pipeline).&lt;/li> * &lt;/ul> * * &lt;p>Such parameters are always instances of a * &lt;a href="../function/package-summary.html">functional interface&lt;/a> such * as {@link java.util.function.Function}, and are often lambda expressions or * method references.  Unless otherwise specified these parameters must be * &lt;em>non-null&lt;/em>. * * &lt;p>A stream should be operated on (invoking an intermediate or terminal stream * operation) only once.  This rules out, for example, "forked" streams, where * the same source feeds two or more pipelines, or multiple traversals of the * same stream.  A stream implementation may throw {@link IllegalStateException} * if it detects that the stream is being reused. However, since some stream * operations may return their receiver rather than a new stream object, it may * not be possible to detect reuse in all cases. * * &lt;p>Streams have a {@link #close()} method and implement {@link AutoCloseable}, * but nearly all stream instances do not actually need to be closed after use. * Generally, only streams whose source is an IO channel (such as those returned * by {@link Files#lines(Path, Charset)}) will require closing.  Most streams * are backed by collections, arrays, or generating functions, which require no * special resource management.  (If a stream does require closing, it can be * declared as a resource in a {@code try}-with-resources statement.) * * &lt;p>Stream pipelines may execute either sequentially or in * &lt;a href="package-summary.html#Parallelism">parallel&lt;/a>.  This * execution mode is a property of the stream.  Streams are created * with an initial choice of sequential or parallel execution.  (For example, * {@link Collection#stream() Collection.stream()} creates a sequential stream, * and {@link Collection#parallelStream() Collection.parallelStream()} creates * a parallel one.)  This choice of execution mode may be modified by the * {@link #sequential()} or {@link #parallel()} methods, and may be queried with * the {@link #isParallel()} method. * * @param &lt;T> the type of the stream elements * @since 1.8 * @see IntStream * @see LongStream * @see DoubleStream * @see &lt;a href="package-summary.html">java.util.stream&lt;/a> */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Stream</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">extends</span> <span class="token class-name">BaseStream</span><span class="token operator">&lt;</span>T<span class="token punctuation">,</span> Stream<span class="token operator">&lt;</span>T<span class="token operator">>></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the elements of this stream that match     * the given predicate.     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * @param predicate a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                  &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                  predicate to apply to each element to determine if it     *                  should be included     * @return the new stream     */</span>    Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">filter</span><span class="token punctuation">(</span>Predicate<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> predicate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the results of applying the given     * function to the elements of this stream.     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * @param &lt;R> The element type of the new stream     * @param mapper a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *               &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *               function to apply to each element     * @return the new stream     */</span>    <span class="token operator">&lt;</span>R<span class="token operator">></span> Stream<span class="token operator">&lt;</span>R<span class="token operator">></span> <span class="token function">map</span><span class="token punctuation">(</span>Function<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">R</span><span class="token operator">></span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns an {@code IntStream} consisting of the results of applying the     * given function to the elements of this stream.     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">     *     intermediate operation&lt;/a>.     *     * @param mapper a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *               &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *               function to apply to each element     * @return the new stream     */</span>    IntStream <span class="token function">mapToInt</span><span class="token punctuation">(</span>ToIntFunction<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a {@code LongStream} consisting of the results of applying the     * given function to the elements of this stream.     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * @param mapper a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *               &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *               function to apply to each element     * @return the new stream     */</span>    LongStream <span class="token function">mapToLong</span><span class="token punctuation">(</span>ToLongFunction<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a {@code DoubleStream} consisting of the results of applying the     * given function to the elements of this stream.     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * @param mapper a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *               &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *               function to apply to each element     * @return the new stream     */</span>    DoubleStream <span class="token function">mapToDouble</span><span class="token punctuation">(</span>ToDoubleFunction<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the results of replacing each element of     * this stream with the contents of a mapped stream produced by applying     * the provided mapping function to each element.  Each mapped stream is     * {@link java.util.stream.BaseStream#close() closed} after its contents     * have been placed into this stream.  (If a mapped stream is {@code null}     * an empty stream is used, instead.)     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * @apiNote     * The {@code flatMap()} operation has the effect of applying a one-to-many     * transformation to the elements of the stream, and then flattening the     * resulting elements into a new stream.     *     * &lt;p>&lt;b>Examples.&lt;/b>     *     * &lt;p>If {@code orders} is a stream of purchase orders, and each purchase     * order contains a collection of line items, then the following produces a     * stream containing all the line items in all the orders:     * &lt;pre>{@code     *     orders.flatMap(order -> order.getLineItems().stream())...     * }&lt;/pre>     *     * &lt;p>If {@code path} is the path to a file, then the following produces a     * stream of the {@code words} contained in that file:     * &lt;pre>{@code     *     Stream&lt;String> lines = Files.lines(path, StandardCharsets.UTF_8);     *     Stream&lt;String> words = lines.flatMap(line -> Stream.of(line.split(" +")));     * }&lt;/pre>     * The {@code mapper} function passed to {@code flatMap} splits a line,     * using a simple regular expression, into an array of words, and then     * creates a stream of words from that array.     *     * @param &lt;R> The element type of the new stream     * @param mapper a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *               &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *               function to apply to each element which produces a stream     *               of new values     * @return the new stream     */</span>    <span class="token operator">&lt;</span>R<span class="token operator">></span> Stream<span class="token operator">&lt;</span>R<span class="token operator">></span> <span class="token function">flatMap</span><span class="token punctuation">(</span>Function<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Stream</span><span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">R</span><span class="token operator">>></span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns an {@code IntStream} consisting of the results of replacing each     * element of this stream with the contents of a mapped stream produced by     * applying the provided mapping function to each element.  Each mapped     * stream is {@link java.util.stream.BaseStream#close() closed} after its     * contents have been placed into this stream.  (If a mapped stream is     * {@code null} an empty stream is used, instead.)     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * @param mapper a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *               &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *               function to apply to each element which produces a stream     *               of new values     * @return the new stream     * @see #flatMap(Function)     */</span>    IntStream <span class="token function">flatMapToInt</span><span class="token punctuation">(</span>Function<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">IntStream</span><span class="token operator">></span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns an {@code LongStream} consisting of the results of replacing each     * element of this stream with the contents of a mapped stream produced by     * applying the provided mapping function to each element.  Each mapped     * stream is {@link java.util.stream.BaseStream#close() closed} after its     * contents have been placed into this stream.  (If a mapped stream is     * {@code null} an empty stream is used, instead.)     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * @param mapper a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *               &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *               function to apply to each element which produces a stream     *               of new values     * @return the new stream     * @see #flatMap(Function)     */</span>    LongStream <span class="token function">flatMapToLong</span><span class="token punctuation">(</span>Function<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">LongStream</span><span class="token operator">></span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns an {@code DoubleStream} consisting of the results of replacing     * each element of this stream with the contents of a mapped stream produced     * by applying the provided mapping function to each element.  Each mapped     * stream is {@link java.util.stream.BaseStream#close() closed} after its     * contents have placed been into this stream.  (If a mapped stream is     * {@code null} an empty stream is used, instead.)     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * @param mapper a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *               &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *               function to apply to each element which produces a stream     *               of new values     * @return the new stream     * @see #flatMap(Function)     */</span>    DoubleStream <span class="token function">flatMapToDouble</span><span class="token punctuation">(</span>Function<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">DoubleStream</span><span class="token operator">></span> mapper<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the distinct elements (according to     * {@link Object#equals(Object)}) of this stream.     *     * &lt;p>For ordered streams, the selection of distinct elements is stable     * (for duplicated elements, the element appearing first in the encounter     * order is preserved.)  For unordered streams, no stability guarantees     * are made.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">stateful     * intermediate operation&lt;/a>.     *     * @apiNote     * Preserving stability for {@code distinct()} in parallel pipelines is     * relatively expensive (requires that the operation act as a full barrier,     * with substantial buffering overhead), and stability is often not needed.     * Using an unordered stream source (such as {@link #generate(Supplier)})     * or removing the ordering constraint with {@link #unordered()} may result     * in significantly more efficient execution for {@code distinct()} in parallel     * pipelines, if the semantics of your situation permit.  If consistency     * with encounter order is required, and you are experiencing poor performance     * or memory utilization with {@code distinct()} in parallel pipelines,     * switching to sequential execution with {@link #sequential()} may improve     * performance.     *     * @return the new stream     */</span>    Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the elements of this stream, sorted     * according to natural order.  If the elements of this stream are not     * {@code Comparable}, a {@code java.lang.ClassCastException} may be thrown     * when the terminal operation is executed.     *     * &lt;p>For ordered streams, the sort is stable.  For unordered streams, no     * stability guarantees are made.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">stateful     * intermediate operation&lt;/a>.     *     * @return the new stream     */</span>    Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the elements of this stream, sorted     * according to the provided {@code Comparator}.     *     * &lt;p>For ordered streams, the sort is stable.  For unordered streams, no     * stability guarantees are made.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">stateful     * intermediate operation&lt;/a>.     *     * @param comparator a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                   &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                   {@code Comparator} to be used to compare stream elements     * @return the new stream     */</span>    Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">sorted</span><span class="token punctuation">(</span>Comparator<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> comparator<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the elements of this stream, additionally     * performing the provided action on each element as elements are consumed     * from the resulting stream.     *     * &lt;p>This is an &lt;a href="package-summary.html#StreamOps">intermediate     * operation&lt;/a>.     *     * &lt;p>For parallel stream pipelines, the action may be called at     * whatever time and in whatever thread the element is made available by the     * upstream operation.  If the action modifies shared state,     * it is responsible for providing the required synchronization.     *     * @apiNote This method exists mainly to support debugging, where you want     * to see the elements as they flow past a certain point in a pipeline:     * &lt;pre>{@code     *     Stream.of("one", "two", "three", "four")     *         .filter(e -> e.length() > 3)     *         .peek(e -> System.out.println("Filtered value: " + e))     *         .map(String::toUpperCase)     *         .peek(e -> System.out.println("Mapped value: " + e))     *         .collect(Collectors.toList());     * }&lt;/pre>     *     * @param action a &lt;a href="package-summary.html#NonInterference">     *                 non-interfering&lt;/a> action to perform on the elements as     *                 they are consumed from the stream     * @return the new stream     */</span>    Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">peek</span><span class="token punctuation">(</span>Consumer<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the elements of this stream, truncated     * to be no longer than {@code maxSize} in length.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">short-circuiting     * stateful intermediate operation&lt;/a>.     *     * @apiNote     * While {@code limit()} is generally a cheap operation on sequential     * stream pipelines, it can be quite expensive on ordered parallel pipelines,     * especially for large values of {@code maxSize}, since {@code limit(n)}     * is constrained to return not just any &lt;em>n&lt;/em> elements, but the     * &lt;em>first n&lt;/em> elements in the encounter order.  Using an unordered     * stream source (such as {@link #generate(Supplier)}) or removing the     * ordering constraint with {@link #unordered()} may result in significant     * speedups of {@code limit()} in parallel pipelines, if the semantics of     * your situation permit.  If consistency with encounter order is required,     * and you are experiencing poor performance or memory utilization with     * {@code limit()} in parallel pipelines, switching to sequential execution     * with {@link #sequential()} may improve performance.     *     * @param maxSize the number of elements the stream should be limited to     * @return the new stream     * @throws IllegalArgumentException if {@code maxSize} is negative     */</span>    Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">limit</span><span class="token punctuation">(</span><span class="token keyword">long</span> maxSize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a stream consisting of the remaining elements of this stream     * after discarding the first {@code n} elements of the stream.     * If this stream contains fewer than {@code n} elements then an     * empty stream will be returned.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">stateful     * intermediate operation&lt;/a>.     *     * @apiNote     * While {@code skip()} is generally a cheap operation on sequential     * stream pipelines, it can be quite expensive on ordered parallel pipelines,     * especially for large values of {@code n}, since {@code skip(n)}     * is constrained to skip not just any &lt;em>n&lt;/em> elements, but the     * &lt;em>first n&lt;/em> elements in the encounter order.  Using an unordered     * stream source (such as {@link #generate(Supplier)}) or removing the     * ordering constraint with {@link #unordered()} may result in significant     * speedups of {@code skip()} in parallel pipelines, if the semantics of     * your situation permit.  If consistency with encounter order is required,     * and you are experiencing poor performance or memory utilization with     * {@code skip()} in parallel pipelines, switching to sequential execution     * with {@link #sequential()} may improve performance.     *     * @param n the number of leading elements to skip     * @return the new stream     * @throws IllegalArgumentException if {@code n} is negative     */</span>    Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">skip</span><span class="token punctuation">(</span><span class="token keyword">long</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Performs an action for each element of this stream.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * &lt;p>The behavior of this operation is explicitly nondeterministic.     * For parallel stream pipelines, this operation does &lt;em>not&lt;/em>     * guarantee to respect the encounter order of the stream, as doing so     * would sacrifice the benefit of parallelism.  For any given element, the     * action may be performed at whatever time and in whatever thread the     * library chooses.  If the action accesses shared state, it is     * responsible for providing the required synchronization.     *     * @param action a &lt;a href="package-summary.html#NonInterference">     *               non-interfering&lt;/a> action to perform on the elements     */</span>    <span class="token keyword">void</span> <span class="token function">forEach</span><span class="token punctuation">(</span>Consumer<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Performs an action for each element of this stream, in the encounter     * order of the stream if the stream has a defined encounter order.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * &lt;p>This operation processes the elements one at a time, in encounter     * order if one exists.  Performing the action for one element     * &lt;a href="../concurrent/package-summary.html#MemoryVisibility">&lt;i>happens-before&lt;/i>&lt;/a>     * performing the action for subsequent elements, but for any given element,     * the action may be performed in whatever thread the library chooses.     *     * @param action a &lt;a href="package-summary.html#NonInterference">     *               non-interfering&lt;/a> action to perform on the elements     * @see #forEach(Consumer)     */</span>    <span class="token keyword">void</span> <span class="token function">forEachOrdered</span><span class="token punctuation">(</span>Consumer<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns an array containing the elements of this stream.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * @return an array containing the elements of this stream     */</span>    Object<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns an array containing the elements of this stream, using the     * provided {@code generator} function to allocate the returned array, as     * well as any additional arrays that might be required for a partitioned     * execution or for resizing.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * @apiNote     * The generator function takes an integer, which is the size of the     * desired array, and produces an array of the desired size.  This can be     * concisely expressed with an array constructor reference:     * &lt;pre>{@code     *     Person[] men = people.stream()     *                          .filter(p -> p.getGender() == MALE)     *                          .toArray(Person[]::new);     * }&lt;/pre>     *     * @param &lt;A> the element type of the resulting array     * @param generator a function which produces a new array of the desired     *                  type and the provided length     * @return an array containing the elements in this stream     * @throws ArrayStoreException if the runtime type of the array returned     * from the array generator is not a supertype of the runtime type of every     * element in this stream     */</span>    <span class="token operator">&lt;</span>A<span class="token operator">></span> A<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toArray</span><span class="token punctuation">(</span>IntFunction<span class="token operator">&lt;</span>A<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> generator<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Performs a &lt;a href="package-summary.html#Reduction">reduction&lt;/a> on the     * elements of this stream, using the provided identity value and an     * &lt;a href="package-summary.html#Associativity">associative&lt;/a>     * accumulation function, and returns the reduced value.  This is equivalent     * to:     * &lt;pre>{@code     *     T result = identity;     *     for (T element : this stream)     *         result = accumulator.apply(result, element)     *     return result;     * }&lt;/pre>     *     * but is not constrained to execute sequentially.     *     * &lt;p>The {@code identity} value must be an identity for the accumulator     * function. This means that for all {@code t},     * {@code accumulator.apply(identity, t)} is equal to {@code t}.     * The {@code accumulator} function must be an     * &lt;a href="package-summary.html#Associativity">associative&lt;/a> function.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * @apiNote Sum, min, max, average, and string concatenation are all special     * cases of reduction. Summing a stream of numbers can be expressed as:     *     * &lt;pre>{@code     *     Integer sum = integers.reduce(0, (a, b) -> a+b);     * }&lt;/pre>     *     * or:     *     * &lt;pre>{@code     *     Integer sum = integers.reduce(0, Integer::sum);     * }&lt;/pre>     *     * &lt;p>While this may seem a more roundabout way to perform an aggregation     * compared to simply mutating a running total in a loop, reduction     * operations parallelize more gracefully, without needing additional     * synchronization and with greatly reduced risk of data races.     *     * @param identity the identity value for the accumulating function     * @param accumulator an &lt;a href="package-summary.html#Associativity">associative&lt;/a>,     *                    &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                    &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                    function for combining two values     * @return the result of the reduction     */</span>    T <span class="token function">reduce</span><span class="token punctuation">(</span>T identity<span class="token punctuation">,</span> BinaryOperator<span class="token operator">&lt;</span>T<span class="token operator">></span> accumulator<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Performs a &lt;a href="package-summary.html#Reduction">reduction&lt;/a> on the     * elements of this stream, using an     * &lt;a href="package-summary.html#Associativity">associative&lt;/a> accumulation     * function, and returns an {@code Optional} describing the reduced value,     * if any. This is equivalent to:     * &lt;pre>{@code     *     boolean foundAny = false;     *     T result = null;     *     for (T element : this stream) {     *         if (!foundAny) {     *             foundAny = true;     *             result = element;     *         }     *         else     *             result = accumulator.apply(result, element);     *     }     *     return foundAny ? Optional.of(result) : Optional.empty();     * }&lt;/pre>     *     * but is not constrained to execute sequentially.     *     * &lt;p>The {@code accumulator} function must be an     * &lt;a href="package-summary.html#Associativity">associative&lt;/a> function.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * @param accumulator an &lt;a href="package-summary.html#Associativity">associative&lt;/a>,     *                    &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                    &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                    function for combining two values     * @return an {@link Optional} describing the result of the reduction     * @throws NullPointerException if the result of the reduction is null     * @see #reduce(Object, BinaryOperator)     * @see #min(Comparator)     * @see #max(Comparator)     */</span>    Optional<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">reduce</span><span class="token punctuation">(</span>BinaryOperator<span class="token operator">&lt;</span>T<span class="token operator">></span> accumulator<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Performs a &lt;a href="package-summary.html#Reduction">reduction&lt;/a> on the     * elements of this stream, using the provided identity, accumulation and     * combining functions.  This is equivalent to:     * &lt;pre>{@code     *     U result = identity;     *     for (T element : this stream)     *         result = accumulator.apply(result, element)     *     return result;     * }&lt;/pre>     *     * but is not constrained to execute sequentially.     *     * &lt;p>The {@code identity} value must be an identity for the combiner     * function.  This means that for all {@code u}, {@code combiner(identity, u)}     * is equal to {@code u}.  Additionally, the {@code combiner} function     * must be compatible with the {@code accumulator} function; for all     * {@code u} and {@code t}, the following must hold:     * &lt;pre>{@code     *     combiner.apply(u, accumulator.apply(identity, t)) == accumulator.apply(u, t)     * }&lt;/pre>     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * @apiNote Many reductions using this form can be represented more simply     * by an explicit combination of {@code map} and {@code reduce} operations.     * The {@code accumulator} function acts as a fused mapper and accumulator,     * which can sometimes be more efficient than separate mapping and reduction,     * such as when knowing the previously reduced value allows you to avoid     * some computation.     *     * @param &lt;U> The type of the result     * @param identity the identity value for the combiner function     * @param accumulator an &lt;a href="package-summary.html#Associativity">associative&lt;/a>,     *                    &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                    &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                    function for incorporating an additional element into a result     * @param combiner an &lt;a href="package-summary.html#Associativity">associative&lt;/a>,     *                    &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                    &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                    function for combining two values, which must be     *                    compatible with the accumulator function     * @return the result of the reduction     * @see #reduce(BinaryOperator)     * @see #reduce(Object, BinaryOperator)     */</span>    <span class="token operator">&lt;</span>U<span class="token operator">></span> U <span class="token function">reduce</span><span class="token punctuation">(</span>U identity<span class="token punctuation">,</span>                 BiFunction<span class="token operator">&lt;</span>U<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token punctuation">,</span> U<span class="token operator">></span> accumulator<span class="token punctuation">,</span>                 BinaryOperator<span class="token operator">&lt;</span>U<span class="token operator">></span> combiner<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Performs a &lt;a href="package-summary.html#MutableReduction">mutable     * reduction&lt;/a> operation on the elements of this stream.  A mutable     * reduction is one in which the reduced value is a mutable result container,     * such as an {@code ArrayList}, and elements are incorporated by updating     * the state of the result rather than by replacing the result.  This     * produces a result equivalent to:     * &lt;pre>{@code     *     R result = supplier.get();     *     for (T element : this stream)     *         accumulator.accept(result, element);     *     return result;     * }&lt;/pre>     *     * &lt;p>Like {@link #reduce(Object, BinaryOperator)}, {@code collect} operations     * can be parallelized without requiring additional synchronization.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * @apiNote There are many existing classes in the JDK whose signatures are     * well-suited for use with method references as arguments to {@code collect()}.     * For example, the following will accumulate strings into an {@code ArrayList}:     * &lt;pre>{@code     *     List&lt;String> asList = stringStream.collect(ArrayList::new, ArrayList::add,     *                                                ArrayList::addAll);     * }&lt;/pre>     *     * &lt;p>The following will take a stream of strings and concatenates them into a     * single string:     * &lt;pre>{@code     *     String concat = stringStream.collect(StringBuilder::new, StringBuilder::append,     *                                          StringBuilder::append)     *                                 .toString();     * }&lt;/pre>     *     * @param &lt;R> type of the result     * @param supplier a function that creates a new result container. For a     *                 parallel execution, this function may be called     *                 multiple times and must return a fresh value each time.     * @param accumulator an &lt;a href="package-summary.html#Associativity">associative&lt;/a>,     *                    &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                    &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                    function for incorporating an additional element into a result     * @param combiner an &lt;a href="package-summary.html#Associativity">associative&lt;/a>,     *                    &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                    &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                    function for combining two values, which must be     *                    compatible with the accumulator function     * @return the result of the reduction     */</span>    <span class="token operator">&lt;</span>R<span class="token operator">></span> R <span class="token function">collect</span><span class="token punctuation">(</span>Supplier<span class="token operator">&lt;</span>R<span class="token operator">></span> supplier<span class="token punctuation">,</span>                  BiConsumer<span class="token operator">&lt;</span>R<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> accumulator<span class="token punctuation">,</span>                  BiConsumer<span class="token operator">&lt;</span>R<span class="token punctuation">,</span> R<span class="token operator">></span> combiner<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Performs a &lt;a href="package-summary.html#MutableReduction">mutable     * reduction&lt;/a> operation on the elements of this stream using a     * {@code Collector}.  A {@code Collector}     * encapsulates the functions used as arguments to     * {@link #collect(Supplier, BiConsumer, BiConsumer)}, allowing for reuse of     * collection strategies and composition of collect operations such as     * multiple-level grouping or partitioning.     *     * &lt;p>If the stream is parallel, and the {@code Collector}     * is {@link Collector.Characteristics#CONCURRENT concurrent}, and     * either the stream is unordered or the collector is     * {@link Collector.Characteristics#UNORDERED unordered},     * then a concurrent reduction will be performed (see {@link Collector} for     * details on concurrent reduction.)     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * &lt;p>When executed in parallel, multiple intermediate results may be     * instantiated, populated, and merged so as to maintain isolation of     * mutable data structures.  Therefore, even when executed in parallel     * with non-thread-safe data structures (such as {@code ArrayList}), no     * additional synchronization is needed for a parallel reduction.     *     * @apiNote     * The following will accumulate strings into an ArrayList:     * &lt;pre>{@code     *     List&lt;String> asList = stringStream.collect(Collectors.toList());     * }&lt;/pre>     *     * &lt;p>The following will classify {@code Person} objects by city:     * &lt;pre>{@code     *     Map&lt;String, List&lt;Person>> peopleByCity     *         = personStream.collect(Collectors.groupingBy(Person::getCity));     * }&lt;/pre>     *     * &lt;p>The following will classify {@code Person} objects by state and city,     * cascading two {@code Collector}s together:     * &lt;pre>{@code     *     Map&lt;String, Map&lt;String, List&lt;Person>>> peopleByStateAndCity     *         = personStream.collect(Collectors.groupingBy(Person::getState,     *                                                      Collectors.groupingBy(Person::getCity)));     * }&lt;/pre>     *     * @param &lt;R> the type of the result     * @param &lt;A> the intermediate accumulation type of the {@code Collector}     * @param collector the {@code Collector} describing the reduction     * @return the result of the reduction     * @see #collect(Supplier, BiConsumer, BiConsumer)     * @see Collectors     */</span>    <span class="token operator">&lt;</span>R<span class="token punctuation">,</span> A<span class="token operator">></span> R <span class="token function">collect</span><span class="token punctuation">(</span>Collector<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token punctuation">,</span> A<span class="token punctuation">,</span> R<span class="token operator">></span> collector<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns the minimum element of this stream according to the provided     * {@code Comparator}.  This is a special case of a     * &lt;a href="package-summary.html#Reduction">reduction&lt;/a>.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal operation&lt;/a>.     *     * @param comparator a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                   &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                   {@code Comparator} to compare elements of this stream     * @return an {@code Optional} describing the minimum element of this stream,     * or an empty {@code Optional} if the stream is empty     * @throws NullPointerException if the minimum element is null     */</span>    Optional<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">min</span><span class="token punctuation">(</span>Comparator<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> comparator<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns the maximum element of this stream according to the provided     * {@code Comparator}.  This is a special case of a     * &lt;a href="package-summary.html#Reduction">reduction&lt;/a>.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal     * operation&lt;/a>.     *     * @param comparator a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                   &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                   {@code Comparator} to compare elements of this stream     * @return an {@code Optional} describing the maximum element of this stream,     * or an empty {@code Optional} if the stream is empty     * @throws NullPointerException if the maximum element is null     */</span>    Optional<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">max</span><span class="token punctuation">(</span>Comparator<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> comparator<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns the count of elements in this stream.  This is a special case of     * a &lt;a href="package-summary.html#Reduction">reduction&lt;/a> and is     * equivalent to:     * &lt;pre>{@code     *     return mapToLong(e -> 1L).sum();     * }&lt;/pre>     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">terminal operation&lt;/a>.     *     * @return the count of elements in this stream     */</span>    <span class="token keyword">long</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns whether any elements of this stream match the provided     * predicate.  May not evaluate the predicate on all elements if not     * necessary for determining the result.  If the stream is empty then     * {@code false} is returned and the predicate is not evaluated.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">short-circuiting     * terminal operation&lt;/a>.     *     * @apiNote     * This method evaluates the &lt;em>existential quantification&lt;/em> of the     * predicate over the elements of the stream (for some x P(x)).     *     * @param predicate a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                  &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                  predicate to apply to elements of this stream     * @return {@code true} if any elements of the stream match the provided     * predicate, otherwise {@code false}     */</span>    <span class="token keyword">boolean</span> <span class="token function">anyMatch</span><span class="token punctuation">(</span>Predicate<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> predicate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns whether all elements of this stream match the provided predicate.     * May not evaluate the predicate on all elements if not necessary for     * determining the result.  If the stream is empty then {@code true} is     * returned and the predicate is not evaluated.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">short-circuiting     * terminal operation&lt;/a>.     *     * @apiNote     * This method evaluates the &lt;em>universal quantification&lt;/em> of the     * predicate over the elements of the stream (for all x P(x)).  If the     * stream is empty, the quantification is said to be &lt;em>vacuously     * satisfied&lt;/em> and is always {@code true} (regardless of P(x)).     *     * @param predicate a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                  &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                  predicate to apply to elements of this stream     * @return {@code true} if either all elements of the stream match the     * provided predicate or the stream is empty, otherwise {@code false}     */</span>    <span class="token keyword">boolean</span> <span class="token function">allMatch</span><span class="token punctuation">(</span>Predicate<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> predicate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns whether no elements of this stream match the provided predicate.     * May not evaluate the predicate on all elements if not necessary for     * determining the result.  If the stream is empty then {@code true} is     * returned and the predicate is not evaluated.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">short-circuiting     * terminal operation&lt;/a>.     *     * @apiNote     * This method evaluates the &lt;em>universal quantification&lt;/em> of the     * negated predicate over the elements of the stream (for all x ~P(x)).  If     * the stream is empty, the quantification is said to be vacuously satisfied     * and is always {@code true}, regardless of P(x).     *     * @param predicate a &lt;a href="package-summary.html#NonInterference">non-interfering&lt;/a>,     *                  &lt;a href="package-summary.html#Statelessness">stateless&lt;/a>     *                  predicate to apply to elements of this stream     * @return {@code true} if either no elements of the stream match the     * provided predicate or the stream is empty, otherwise {@code false}     */</span>    <span class="token keyword">boolean</span> <span class="token function">noneMatch</span><span class="token punctuation">(</span>Predicate<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> predicate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns an {@link Optional} describing the first element of this stream,     * or an empty {@code Optional} if the stream is empty.  If the stream has     * no encounter order, then any element may be returned.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">short-circuiting     * terminal operation&lt;/a>.     *     * @return an {@code Optional} describing the first element of this stream,     * or an empty {@code Optional} if the stream is empty     * @throws NullPointerException if the element selected is null     */</span>    Optional<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns an {@link Optional} describing some element of the stream, or an     * empty {@code Optional} if the stream is empty.     *     * &lt;p>This is a &lt;a href="package-summary.html#StreamOps">short-circuiting     * terminal operation&lt;/a>.     *     * &lt;p>The behavior of this operation is explicitly nondeterministic; it is     * free to select any element in the stream.  This is to allow for maximal     * performance in parallel operations; the cost is that multiple invocations     * on the same source may not return the same result.  (If a stable result     * is desired, use {@link #findFirst()} instead.)     *     * @return an {@code Optional} describing some element of this stream, or an     * empty {@code Optional} if the stream is empty     * @throws NullPointerException if the element selected is null     * @see #findFirst()     */</span>    Optional<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Static factories</span>    <span class="token comment" spellcheck="true">/**     * Returns a builder for a {@code Stream}.     *     * @param &lt;T> type of elements     * @return a stream builder     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span><span class="token operator">&lt;</span>T<span class="token operator">></span> Builder<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Streams<span class="token punctuation">.</span>StreamBuilderImpl</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Returns an empty sequential {@code Stream}.     *     * @param &lt;T> the type of stream elements     * @return an empty sequential stream     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span><span class="token operator">&lt;</span>T<span class="token operator">></span> Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> StreamSupport<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>Spliterators<span class="token punctuation">.</span>&lt;T<span class="token operator">></span><span class="token function">emptySpliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Returns a sequential {@code Stream} containing a single element.     *     * @param t the single element     * @param &lt;T> the type of stream elements     * @return a singleton sequential stream     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span><span class="token operator">&lt;</span>T<span class="token operator">></span> Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">of</span><span class="token punctuation">(</span>T t<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> StreamSupport<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Streams<span class="token punctuation">.</span>StreamBuilderImpl</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Returns a sequential ordered stream whose elements are the specified values.     *     * @param &lt;T> the type of stream elements     * @param values the elements of the new stream     * @return the new stream     */</span>    <span class="token annotation punctuation">@SafeVarargs</span>    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"varargs"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// Creating a stream from an array is safe</span>    <span class="token keyword">public</span> <span class="token keyword">static</span><span class="token operator">&lt;</span>T<span class="token operator">></span> Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">of</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> Arrays<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Returns an infinite sequential ordered {@code Stream} produced by iterative     * application of a function {@code f} to an initial element {@code seed},     * producing a {@code Stream} consisting of {@code seed}, {@code f(seed)},     * {@code f(f(seed))}, etc.     *     * &lt;p>The first element (position {@code 0}) in the {@code Stream} will be     * the provided {@code seed}.  For {@code n > 0}, the element at position     * {@code n}, will be the result of applying the function {@code f} to the     * element at position {@code n - 1}.     *     * @param &lt;T> the type of stream elements     * @param seed the initial element     * @param f a function to be applied to to the previous element to produce     *          a new element     * @return a new sequential {@code Stream}     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span><span class="token operator">&lt;</span>T<span class="token operator">></span> Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">iterate</span><span class="token punctuation">(</span><span class="token keyword">final</span> T seed<span class="token punctuation">,</span> <span class="token keyword">final</span> UnaryOperator<span class="token operator">&lt;</span>T<span class="token operator">></span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> Iterator<span class="token operator">&lt;</span>T<span class="token operator">></span> iterator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Iterator</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>            T t <span class="token operator">=</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span> Streams<span class="token punctuation">.</span>NONE<span class="token punctuation">;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> T <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> Streams<span class="token punctuation">.</span>NONE<span class="token punctuation">)</span> <span class="token operator">?</span> seed <span class="token operator">:</span> f<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> StreamSupport<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>Spliterators<span class="token punctuation">.</span><span class="token function">spliteratorUnknownSize</span><span class="token punctuation">(</span>                iterator<span class="token punctuation">,</span>                Spliterator<span class="token punctuation">.</span>ORDERED <span class="token operator">|</span> Spliterator<span class="token punctuation">.</span>IMMUTABLE<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Returns an infinite sequential unordered stream where each element is     * generated by the provided {@code Supplier}.  This is suitable for     * generating constant streams, streams of random elements, etc.     *     * @param &lt;T> the type of stream elements     * @param s the {@code Supplier} of generated elements     * @return a new infinite sequential unordered {@code Stream}     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span><span class="token operator">&lt;</span>T<span class="token operator">></span> Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">generate</span><span class="token punctuation">(</span>Supplier<span class="token operator">&lt;</span>T<span class="token operator">></span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> StreamSupport<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>                <span class="token keyword">new</span> <span class="token class-name">StreamSpliterators<span class="token punctuation">.</span>InfiniteSupplyingSpliterator<span class="token punctuation">.</span>OfRef</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Long<span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Creates a lazily concatenated stream whose elements are all the     * elements of the first stream followed by all the elements of the     * second stream.  The resulting stream is ordered if both     * of the input streams are ordered, and parallel if either of the input     * streams is parallel.  When the resulting stream is closed, the close     * handlers for both input streams are invoked.     *     * @implNote     * Use caution when constructing streams from repeated concatenation.     * Accessing an element of a deeply concatenated stream can result in deep     * call chains, or even {@code StackOverflowException}.     *     * @param &lt;T> The type of stream elements     * @param a the first stream     * @param b the second stream     * @return the concatenation of the two input streams     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">concat</span><span class="token punctuation">(</span>Stream<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token operator">></span> a<span class="token punctuation">,</span> Stream<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token operator">></span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"unchecked"</span><span class="token punctuation">)</span>        Spliterator<span class="token operator">&lt;</span>T<span class="token operator">></span> split <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Streams<span class="token punctuation">.</span>ConcatSpliterator<span class="token punctuation">.</span>OfRef</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>                <span class="token punctuation">(</span>Spliterator<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">)</span> a<span class="token punctuation">.</span><span class="token function">spliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>Spliterator<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">)</span> b<span class="token punctuation">.</span><span class="token function">spliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> stream <span class="token operator">=</span> StreamSupport<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>split<span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">isParallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> b<span class="token punctuation">.</span><span class="token function">isParallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> stream<span class="token punctuation">.</span><span class="token function">onClose</span><span class="token punctuation">(</span>Streams<span class="token punctuation">.</span><span class="token function">composedClose</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * A mutable builder for a {@code Stream}.  This allows the creation of a     * {@code Stream} by generating elements individually and adding them to the     * {@code Builder} (without the copying overhead that comes from using     * an {@code ArrayList} as a temporary buffer.)     *     * &lt;p>A stream builder has a lifecycle, which starts in a building     * phase, during which elements can be added, and then transitions to a built     * phase, after which elements may not be added.  The built phase begins     * when the {@link #build()} method is called, which creates an ordered     * {@code Stream} whose elements are the elements that were added to the stream     * builder, in the order they were added.     *     * @param &lt;T> the type of stream elements     * @see Stream#builder()     * @since 1.8     */</span>    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Builder</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">extends</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/**         * Adds an element to the stream being built.         *         * @throws IllegalStateException if the builder has already transitioned to         * the built state         */</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>T t<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * Adds an element to the stream being built.         *         * @implSpec         * The default implementation behaves as if:         * &lt;pre>{@code         *     accept(t)         *     return this;         * }&lt;/pre>         *         * @param t the element to add         * @return {@code this} builder         * @throws IllegalStateException if the builder has already transitioned to         * the built state         */</span>        <span class="token keyword">default</span> Builder<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">add</span><span class="token punctuation">(</span>T t<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">accept</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/**         * Builds the stream, transitioning this builder to the built state.         * An {@code IllegalStateException} is thrown if there are further attempts         * to operate on the builder after it has entered the built state.         *         * @return the built stream         * @throws IllegalStateException if the builder has already transitioned to         * the built state         */</span>        Stream<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><blockquote><h2 id="串行流、并行流"><a href="#串行流、并行流" class="headerlink" title="串行流、并行流"></a>串行流、并行流</h2></blockquote><blockquote><h3 id="Collection接口"><a href="#Collection接口" class="headerlink" title="Collection接口"></a><code>Collection</code>接口</h3></blockquote><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/list%E6%8E%A5%E5%8F%A3.png" alt></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * Returns a sequential {@code Stream} with this collection as its source. * * &lt;p>This method should be overridden when the {@link #spliterator()} * method cannot return a spliterator that is {@code IMMUTABLE}, * {@code CONCURRENT}, or &lt;em>late-binding&lt;/em>. (See {@link #spliterator()} * for details.) * * @implSpec * The default implementation creates a sequential {@code Stream} from the * collection's {@code Spliterator}. * * @return a sequential {@code Stream} over the elements in this collection * @since 1.8 */</span><span class="token keyword">default</span> Stream<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> StreamSupport<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token function">spliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * Returns a possibly parallel {@code Stream} with this collection as its * source.  It is allowable for this method to return a sequential stream. * * &lt;p>This method should be overridden when the {@link #spliterator()} * method cannot return a spliterator that is {@code IMMUTABLE}, * {@code CONCURRENT}, or &lt;em>late-binding&lt;/em>. (See {@link #spliterator()} * for details.) * * @implSpec * The default implementation creates a parallel {@code Stream} from the * collection's {@code Spliterator}. * * @return a possibly parallel {@code Stream} over the elements in this * collection * @since 1.8 */</span><span class="token keyword">default</span> Stream<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">parallelStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> StreamSupport<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token function">spliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><h1 id="Function接口"><a href="#Function接口" class="headerlink" title="Function接口"></a><code>Function</code>接口</h1></blockquote><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/* * Copyright (c) 2010, 2013, Oracle and/or its affiliates. All rights reserved. * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. * * */</span><span class="token keyword">package</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Objects<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Represents a function that accepts one argument and produces a result. * * &lt;p>This is a &lt;a href="package-summary.html">functional interface&lt;/a> * whose functional method is {@link #apply(Object)}. * * @param &lt;T> the type of the input to the function * @param &lt;R> the type of the result of the function * * @since 1.8 */</span><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Function</span><span class="token operator">&lt;</span>T<span class="token punctuation">,</span> R<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * Applies this function to the given argument.     *     * @param t the function argument     * @return the function result     */</span>    R <span class="token function">apply</span><span class="token punctuation">(</span>T t<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * Returns a composed function that first applies the {@code before}     * function to its input, and then applies this function to the result.     * If evaluation of either function throws an exception, it is relayed to     * the caller of the composed function.     *     * @param &lt;V> the type of input to the {@code before} function, and to the     *           composed function     * @param before the function to apply before this function is applied     * @return a composed function that first applies the {@code before}     * function and then applies this function     * @throws NullPointerException if before is null     *     * @see #andThen(Function)     */</span>    <span class="token keyword">default</span> <span class="token operator">&lt;</span>V<span class="token operator">></span> Function<span class="token operator">&lt;</span>V<span class="token punctuation">,</span> R<span class="token operator">></span> <span class="token function">compose</span><span class="token punctuation">(</span>Function<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> V<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token operator">></span> before<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>before<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>V v<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">apply</span><span class="token punctuation">(</span>before<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Returns a composed function that first applies this function to     * its input, and then applies the {@code after} function to the result.     * If evaluation of either function throws an exception, it is relayed to     * the caller of the composed function.     *     * @param &lt;V> the type of output of the {@code after} function, and of the     *           composed function     * @param after the function to apply after this function is applied     * @return a composed function that first applies this function and then     * applies the {@code after} function     * @throws NullPointerException if after is null     *     * @see #compose(Function)     */</span>    <span class="token keyword">default</span> <span class="token operator">&lt;</span>V<span class="token operator">></span> Function<span class="token operator">&lt;</span>T<span class="token punctuation">,</span> V<span class="token operator">></span> <span class="token function">andThen</span><span class="token punctuation">(</span>Function<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> R<span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token operator">></span> after<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Objects<span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>after<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>T t<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> after<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token function">apply</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * Returns a function that always returns its input argument.     *     * @param &lt;T> the type of the input and output objects to the function     * @return a function that always returns its input argument     */</span>    <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Function<span class="token operator">&lt;</span>T<span class="token punctuation">,</span> T<span class="token operator">></span> <span class="token function">identity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> t <span class="token operator">-</span><span class="token operator">></span> t<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引库</title>
      <link href="/2019/05/02/suo-yin-ku/"/>
      <url>/2019/05/02/suo-yin-ku/</url>
      
        <content type="html"><![CDATA[<h1 id="work"><a href="#work" class="headerlink" title="work"></a>work</h1><h2 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h2><p><a href="https://www.coursera.org/" target="_blank" rel="noopener">Coursera | Online Courses &amp; Credentials by Top Educators. Join for Free</a></p><h1 id="technology"><a href="#technology" class="headerlink" title="technology"></a>technology</h1><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p><a href="http://www.worldhello.net/" target="_blank" rel="noopener">World Hello - WorldHello</a></p><p><a href="http://git.oschina.net/progit/" target="_blank" rel="noopener">Pro Git（中文版）</a></p><p><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></p><p><a href="https://www.cnblogs.com/java-maowei/p/5950930.html" target="_blank" rel="noopener">完整教程–idea使用git进行项目管理 - it技术专业户 - 博客园</a></p><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程 - 廖雪峰的官方网站</a></p><p><a href="https://www.imooc.com/article/1345" target="_blank" rel="noopener">Git 使用规范流程_慕课手记</a></p><p><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">Git - Book</a></p><p><a href="https://www.cnblogs.com/jinguangguo/p/4868152.html" target="_blank" rel="noopener">使用webstorm操作git - 金广国 - 博客园</a></p><p><a href="https://blog.csdn.net/qq_30495361/article/details/52157715" target="_blank" rel="noopener">(9+条消息)Git/GitHub教程2-与本地和GitHub上删除repository和folder相关 - ljsnail的博客 - CSDN博客</a></p><p><a href="https://jiongks.name/blog/git-commit/" target="_blank" rel="noopener">如何撰写 Git 提交信息 - 囧克斯</a></p><h2 id="Plugin-ANZ"><a href="#Plugin-ANZ" class="headerlink" title="Plugin ANZ"></a>Plugin ANZ</h2><p><a href="https://www.jb51.net/article/97174.htm" target="_blank" rel="noopener">Eclipse 安装 SVN 在线插件教程_java_脚本之家</a></p><p><a href="https://www.jb51.net/article/104038.htm" target="_blank" rel="noopener">Mysql5.7.14安装配置方法操作图文教程(密码问题解决办法)_Mysql_脚本之家</a></p><h2 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h2><p><a href="https://www.cnblogs.com/gossip/p/6007025.html" target="_blank" rel="noopener">IntelliJ_13书签 - 扯 - 博客园</a></p><p><a href="https://www.open-open.com/lib/view/open1396578860887.html" target="_blank" rel="noopener">Intellij IDEA 快捷键大全 - IntelliJ IDEA - 开发语言与工具 - 深度开源</a></p><p><a href="http://wiki.jikexueyuan.com/project/intellij-idea-tutorial/introduce.html" target="_blank" rel="noopener">介绍 - IntelliJ IDEA 使用教程 - 极客学院Wiki</a></p><p><a href="https://www.zhihu.com/question/27290328" target="_blank" rel="noopener">IDEA中对应eclipse ctrl + 2 + L的快捷键 是哪个 IDEA中对应eclipse ctrl + 2 + L的快捷键 是哪个？ - 知乎</a></p><p><a href="http://www.blogjava.net/rockblue1988/archive/2014/10/24/418994.html" target="_blank" rel="noopener">IntelliJ IDEA 使用心得与常用快捷键 - 码农往事 - BlogJava</a></p><p><a href="https://blog.csdn.net/halen001/article/details/81137092" target="_blank" rel="noopener">IDEA 2018 激活 IDEA 2018.3激活教程 最新的（三种）—2018.11.26亲测 - HALEN的博客 - CSDN博客</a></p><p><a href="http://idea.lanyus.com/" target="_blank" rel="noopener">IntelliJ IDEA 注册码</a></p><p><a href="https://www.cnblogs.com/wang1024/p/7211194.html" target="_blank" rel="noopener">IDEA插件JRebel安装配置与破解激活详细教程 - Zephyrus007 - 博客园</a></p><p><a href="https://blog.csdn.net/martinkey/article/details/49083809" target="_blank" rel="noopener">Intellij IDEA 安装jrebel插件 - CSDN博客</a></p><p><a href="https://blog.csdn.net/linsongbin1/article/details/80211919" target="_blank" rel="noopener">Intellij IDEA神器居然还有这些小技巧 - CSDN博客</a></p><p><a href="http://www.riaway.com/" target="_blank" rel="noopener">IDEA 主题样式</a></p><p><a href="https://www.jianshu.com/p/8709389a82a2" target="_blank" rel="noopener">idea翻译插件Translation的安装与使用 - 简书</a></p><p><a href="https://blog.csdn.net/m0_37893932/article/details/78280663" target="_blank" rel="noopener">(9条消息)两分钟解决IntelliJ IDEA中文乱码问题 - 一生伏首拜阳明 - CSDN博客</a></p><p><a href="https://www.2cto.com/kf/201608/535349.html" target="_blank" rel="noopener">IntelliJ IDEA 14.1 导入MyEclipse2015工程的过程及所遇问题整理 - 综合编程类其他综合 - 红黑联盟</a></p><p><a href="https://blog.csdn.net/qq_21747795/article/details/80678096" target="_blank" rel="noopener">(9条消息)idea项目全局去掉严格的语法校验 - 坚持积累坚持记录 - CSDN博客</a></p><h2 id="goole"><a href="#goole" class="headerlink" title="goole"></a>goole</h2><p><a href="http://s3.amazonaws.com/0ubz-2q11-gi9y/zh/download.html" target="_blank" rel="noopener">赛风 | 下载 Android 应用和 Windows 客户端</a></p><p><a href="http://www.cnplugins.com/tools/how-to-setup-crx.html" target="_blank" rel="noopener">如何安装CRX格式？Chrome插件离线安装，CRX格式安装方法 - Chrome插件网</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxODE2MjM1MA==&mid=2651553196&idx=1&sn=6fbe676383d62c4cb5523d4e99f6930b&chksm=8025aa6db752237bcfb135f66117aa56e364ebd67e5133e9e4be721947a303ac2b6771cc2f0f&scene=21#wechat_redirect" target="_blank" rel="noopener">Chrome 浏览器 必知必会的小技巧</a></p><p><a href="https://segmentfault.com/a/1190000000431586" target="_blank" rel="noopener">你不知道的Chrome DevTools（2）：那些debug的技巧 - civerzhu - SegmentFault 思否</a></p><p><a href="https://segmentfault.com/a/1190000012957199" target="_blank" rel="noopener">Javascript调试命令——你只会Console.log() ? - 前端小记 - SegmentFault 思否</a></p><p><a href="https://www.jb51.net/article/88891.htm" target="_blank" rel="noopener">必备的JS调试技巧汇总_javascript技巧_脚本之家</a></p><p><a href="https://www.google.com/chrome/" target="_blank" rel="noopener">Google Chrome 网络浏览器</a></p><p><a href="https://juejin.im/post/5af53823f265da0b75282b0f" target="_blank" rel="noopener">chrome开发者工具各种骚技巧 - 掘金</a></p><p><a href="https://github.com/Alvin9999/new-pac/wiki/%E8%87%AA%E5%BB%BAss%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B" target="_blank" rel="noopener">自建ss服务器教程 · Alvin9999/new-pac Wiki · GitHub</a></p><p><a href="https://github.com/Alvin9999/new-pac/wiki/ss%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7" target="_blank" rel="noopener">ss免费账号 · Alvin9999/new-pac Wiki · GitHub</a></p><p><a href="http://bwg.fenghuanghu.top/vt/?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">Vultr充值送50美元，2019年大促-Vultr VPS</a></p><p><a href="https://my.vultr.com/" target="_blank" rel="noopener">My Subscriptions - Vultr.com</a></p><p><a href="chrome://net-internals/#hsts" target="_blank" rel="noopener">chrome://net-internals/#hsts</a></p><p><a href="https://www.chromeba.net/chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8D%E5%AE%89%E5%85%A8%E6%8F%90%E7%A4%BAneterr_cert_common_name_invalid%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html" target="_blank" rel="noopener">chrome浏览器不安全提示NET::ERR_CERT_COMMON_NAME_INVALID解决方法 | 小冷博客</a></p><p><a href="https://sspai.com/post/40041" target="_blank" rel="noopener">Google 的升级版 Google Drive 工具，让你备份电脑数据更轻松 - 少数派</a></p><h2 id="gradle"><a href="#gradle" class="headerlink" title="gradle"></a>gradle</h2><p><a href="https://www.jetbrains.com/help/idea/gradle.html" target="_blank" rel="noopener">Gradle - Help | IntelliJ IDEA</a></p><p><a href="https://segmentfault.com/a/1190000009492268" target="_blank" rel="noopener">慕课网_《新一代构建工具gradle》学习总结 - study - SegmentFault 思否</a></p><p><a href="http://wiki.jikexueyuan.com/project/GradleUserGuide-Wiki/" target="_blank" rel="noopener">Gradle用户指南官方文档中文版_Gradle 教程_Gradle_极客学院 Wiki</a></p><p><a href="https://blog.csdn.net/cluzax/article/details/46583771" target="_blank" rel="noopener">(9+条消息)IDEA 及 Gradle 使用总结 - cluzax的专栏 - CSDN博客</a></p><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><p><a href="https://my.oschina.net/u/3729778/blog/1632875" target="_blank" rel="noopener">Tomcat源码分析(一)之源码下载与导入IDEA - 宸明</a></p><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><p><a href="https://github.com/cssmagic/CSS-Secrets/tree/master/notes" target="_blank" rel="noopener">CSS-Secrets/notes at master · cssmagic/CSS-Secrets</a></p><p><a href="http://blog.cssforest.org/tags/" target="_blank" rel="noopener">CSS森林(CSS Forest) - 标签</a></p><p><a href="http://zh.learnlayout.com/" target="_blank" rel="noopener">学习CSS布局</a></p><p><a href="https://github.com/hawx1993/tech-blog/issues/12" target="_blank" rel="noopener">关于css水平垂直居中的总结 · Issue #12 · hawx1993/tech-blog</a></p><p><a href="https://segmentfault.com/a/1190000010780991#articleHeader44" target="_blank" rel="noopener">个人总结（css3新特性） - 守候书阁 - SegmentFault 思否</a></p><p><a href="https://segmentfault.com/a/1190000004524159" target="_blank" rel="noopener">关于「圣杯布局」 - 天道酬勤 - SegmentFault 思否</a></p><p><a href="http://www.runoob.com/css3/css3-animations.html" target="_blank" rel="noopener">CSS3 动画 | 菜鸟教程</a></p><p><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener">A Complete Guide to Flexbox | CSS-Tricks</a></p><p><a href="https://www.cnblogs.com/manman04/p/5704660.html" target="_blank" rel="noopener">浅谈display:flex - love星期六 - 博客园</a></p><p><a href="https://caniuse.com/#search=classlist" target="_blank" rel="noopener">Can I use… Support tables for HTML5, CSS3, etc</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Using_CSS_gradients" target="_blank" rel="noopener">使用 CSS 渐变 - Web 开发者指南 | MDN</a></p><h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><p><a href="https://www.cnblogs.com/pugang/p/5681325.html" target="_blank" rel="noopener">VS Code - Debugger for Chrome调试JavaScript的两种方式 - SolidMango - 博客园</a></p><p><a href="https://ponyfoo.com/articles/understanding-javascript-async-await" target="_blank" rel="noopener">Understanding JavaScript’s async await</a></p><p><a href="https://segmentfault.com/a/1190000008571506#articleHeader14" target="_blank" rel="noopener">【JS实用技巧】优化动态创建元素的方式，让代码更加优雅且利于维护 - Web开发之路 - SegmentFault 思否</a></p><p><a href="https://www.cnblogs.com/aspwebchh/p/6641796.html" target="_blank" rel="noopener">JavaScript如何一次性展示几万条数据 - 陈宏鸿 - 博客园</a></p><p><a href="https://juejin.im/post/5aab2d896fb9a028b86dc2fd" target="_blank" rel="noopener">JavaScript 运行机制–Event Loop详解 - 掘金</a></p><p><a href="https://www.cnblogs.com/coco1s/p/3953653.html" target="_blank" rel="noopener">跟着9张思维导图学习Javascript - ChokCoco - 博客园</a></p><p><a href="https://www.open-open.com/lib/view/open1536627761190.html" target="_blank" rel="noopener">JavaScript性能优化小窍门实例汇总 - 性能优化 - 开发语言与工具 - 深度开源</a></p><p><a href="https://juejin.im/post/5cd24b59e51d453a8f348bca?utm_medium=hao.caibaojian.com&utm_source=hao.caibaojian.com" target="_blank" rel="noopener">45个有用的JavaScript技巧，窍门和最佳实践 - 掘金</a></p><p><a href="https://juejin.im/post/59278e312f301e006c2e1510#heading-0" target="_blank" rel="noopener">JavaScript深入系列15篇正式完结！ - 掘金</a></p><p><a href="https://www.open-open.com/lib/view/open1536627761190.html" target="_blank" rel="noopener">JavaScript性能优化小窍门实例汇总 - 性能优化 - 开发语言与工具 - 深度开源</a></p><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><p><a href="http://www.178linux.com/91261" target="_blank" rel="noopener">Python爬虫入门 | Linux运维部落</a></p><p><a href="http://www.magedu.com/73198.html?wztf_shouye_shouye-daohang-4" target="_blank" rel="noopener">【超全整理】《Python自动化全能开发从入门到精通》python基础教程笔记全放送 | 马哥教育官网-专业linux培训|python培训</a></p><p><a href="http://www.cnblogs.com/haiyan123/p/8387770.html#lable1" target="_blank" rel="noopener">人生苦短，我用Python（目录） - 海燕。 - 博客园</a></p><p><a href="https://www.cnblogs.com/Jacck/p/7889326.html" target="_blank" rel="noopener">pycharm项目上传到Github - Jacck - 博客园</a></p><p><a href="https://yq.aliyun.com/articles/673622?spm=a2c4e.11153940.bloghomeflow.47.6708291aUEouzA" target="_blank" rel="noopener">数据提取之JSON与JsonPATH-博客-云栖社区-阿里云</a></p><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><p><a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="noopener">Mastering Markdown · GitHub Guides</a></p><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo史上最全搭建教程 - Fangzh的技术博客 - CSDN博客</a></p><p><a href="https://www.jianshu.com/p/68e727dda16d" target="_blank" rel="noopener">如何优雅地发布Hexo博客 - 简书</a></p><p><a href="https://www.jianshu.com/p/21c94eb7bcd1" target="_blank" rel="noopener">绝配：hexo+next主题及我走过的坑 - 简书</a></p><p><a href="https://notes.doublemine.me/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">为NexT主题添加文章阅读量统计功能 | Doublemine</a></p><p><a href="https://notes.doublemine.me/2015-04-06-%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2%E6%BA%90%E6%96%87%E4%BB%B6.html" target="_blank" rel="noopener">备份Hexo博客源文件 | Doublemine</a></p><h2 id="Interview-questions"><a href="#Interview-questions" class="headerlink" title="Interview questions"></a>Interview questions</h2><p><a href="https://juejin.im/entry/5aaa31a3f265da23994e40be" target="_blank" rel="noopener">从输入URL到页面加载的过程？如何由一道题完善自己的前端知识体系！ - 前端 - 掘金</a></p><h2 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h2><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p><a href="https://www.cnblogs.com/peida/archive/2013/05/31/3070790.html" target="_blank" rel="noopener">深入理解Java：SimpleDateFormat安全的时间格式化 - peida - 博客园</a></p><p><a href="https://www.cnblogs.com/libo0125ok/p/7905665.html" target="_blank" rel="noopener">java-生成任意格式的json数据 - web喵神 - 博客园</a></p><p><a href="https://github.com/mercyblitz/segmentfault-lessons/tree/master/%E3%80%8C%E4%B8%80%E5%85%A5%20Java%20%E6%B7%B1%E4%BC%BC%E6%B5%B7%20%E3%80%8D" target="_blank" rel="noopener">segmentfault-lessons/「一入 Java 深似海 」 at master · mercyblitz/segmentfault-lessons</a></p><p><a href="https://jisonami.iteye.com/blog/2299952" target="_blank" rel="noopener">Java对象的序列化与反序列化-Json篇 - I am jison - ITeye博客</a></p><p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-proxy1/index.html" target="_blank" rel="noopener">Java 动态代理机制分析及扩展，第 1 部分</a></p><h2 id="ssm"><a href="#ssm" class="headerlink" title="ssm"></a>ssm</h2><p><a href="https://juejin.im/entry/59623af56fb9a06bb61ff19c" target="_blank" rel="noopener">MAC下使用IDEA搭建SSM的Maven项目 - 后端 - 掘金</a></p><h2 id="database"><a href="#database" class="headerlink" title="database"></a>database</h2><p><a href="https://www.yiibai.com/plsql/plsql_cursors.html" target="_blank" rel="noopener">PL/SQL游标 - PL/SQL教程™</a></p><p><a href="https://www.cnblogs.com/assasion/p/7768931.html" target="_blank" rel="noopener">inner join 与 left join 之间的区别 - 十七年的夏天 - 博客园</a></p><p><a href="https://www.cnblogs.com/wangzhuxing/p/7727713.html" target="_blank" rel="noopener">oracle查询重复数据方法 - 小人物的奋斗 - 博客园</a></p><p><a href="http://wiki.jikexueyuan.com/project/oraclecluster/overview.html" target="_blank" rel="noopener">关于本书 - Oracle-RAC 体验 - 极客学院Wiki</a></p><p><a href="https://www.ibm.com/support/knowledgecenter/en/SS3JSW_5.2.0/com.ibm.help.performance_mgmt.doc/SIPM_DB_Oracle_11gRAC.html" target="_blank" rel="noopener">Using Oracle Real Application Clusters (RAC) for High Availability</a></p><p><a href="https://docs.oracle.com/en/database/oracle/oracle-database/18/tutorials.html" target="_blank" rel="noopener">Oracle数据库18c - 教程</a></p><p><a href="http://www.dameng.com/" target="_blank" rel="noopener">达梦数据库-国产数据库-掌握全部源代码-拥有完全自主知识产权-大数据-云平台-DCA认证培训-数据库培训-柔性替代方案</a></p><h2 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h2><p><a href="http://www.mybatis.org/mybatis-3/index.html" target="_blank" rel="noopener">mybatis – MyBatis 3 | Introduction</a></p><p><a href="http://www.mybatis.org/spring/zh/index.html" target="_blank" rel="noopener">mybatis-spring – MyBatis-Spring | 简介</a></p><p><a href="https://blog.csdn.net/u013142781/article/details/50388204" target="_blank" rel="noopener">mybaits入门（含实例教程和源码） - CSDN博客</a></p><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p><a href="https://blog.csdn.net/java_2017_csdn/article/details/77450598/" target="_blank" rel="noopener">Eclipse上Maven环境配置使用 (全) - java_2017_csdn的博客 - CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_32588349/article/details/51461182" target="_blank" rel="noopener">(9+条消息)使用IntelliJ IDEA 配置Maven（入门） - 记事本 - CSDN博客</a></p><p><a href="http://www.cnblogs.com/wql025/p/5215570.html" target="_blank" rel="noopener">IntelliJ IDEA 15 创建maven项目 - Angelaboy - 博客园</a></p><h2 id="svn"><a href="#svn" class="headerlink" title="svn"></a>svn</h2><p><a href="https://blog.csdn.net/qq_27093465/article/details/74898489" target="_blank" rel="noopener">(9+条消息)IntelliJ IDEA 下的svn配置及使用的非常详细的图文总结 - 请叫我大师兄 - CSDN博客</a></p><p><a href="https://blog.csdn.net/lethe0624/article/details/82112389" target="_blank" rel="noopener">(9条消息)Idea SVN导出MyEclipse项目部署问题 - 小白笔记本 - CSDN博客</a></p><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><p><a href="http://www.magedu.com/74185.html" target="_blank" rel="noopener">Linux基础教程之vim编辑器使用入门 | 马哥教育官网-专业linux培训|python培训</a></p><p><a href="https://www.linuxprobe.com/" target="_blank" rel="noopener">《Linux就该这么学》 - 必读的Linux系统与红帽RHCE认证免费自学书籍</a></p><p><a href="https://www.jb51.net/article/110521.htm" target="_blank" rel="noopener">详解Ubuntu 16.04 几个国内更新源_Linux_脚本之家</a></p><p><a href="https://linux.cn/tech/index.php?page=2" target="_blank" rel="noopener">Linux 中国◆开源社区|技术</a></p><p><a href="https://www.cnblogs.com/dunitian/p/9124806.html" target="_blank" rel="noopener">Ubuntu 18.04 安装微信（Linux通用） - 毒逆天 - 博客园</a></p><p><a href="https://www.linuxprobe.com/how-ubuntu-wechat.html" target="_blank" rel="noopener">如何在Ubuntu上使用微信客户端 | 《Linux就该这么学》</a></p><p><a href="https://www.zhihu.com/question/20565314" target="_blank" rel="noopener">如何使用 U 盘安装 Ubuntu 操作系统？ - 知乎</a></p><p><a href="https://www.cnblogs.com/xiashan17/p/7059978.html" target="_blank" rel="noopener">liunx下查看日志最实用命令和方法 - 天下雨水 - 博客园</a></p><p><a href="https://blog.csdn.net/qq_31617637/article/details/71426904" target="_blank" rel="noopener">Linux查看日志命令 - 大道至简，知易行难 - CSDN博客</a></p><h2 id="springboot"><a href="#springboot" class="headerlink" title="springboot"></a>springboot</h2><p><a href="https://boot.ityouknow.com/?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">Introduction · spring-boot-book</a></p><p><a href="https://segmentfault.com/ls/1650000018643651" target="_blank" rel="noopener">「一入 Java 深似海 」系列 2019年第一季（第一、二、三期合集） - 思否编程</a></p><p><a href="http://www.importnew.com/30542.html" target="_blank" rel="noopener">SpringBoot系列一：SpringBoot入门 - ImportNew</a></p><h2 id="iptv"><a href="#iptv" class="headerlink" title="iptv"></a>iptv</h2><p><a href="https://frank1998819.iteye.com/blog/2411196" target="_blank" rel="noopener">Java实现将文本内容、网址链接url,生成二维码与反解析（转） - frank1998819 - ITeye博客</a></p><p><a href="https://blog.yoodb.com/yoodb/article/detail/1350" target="_blank" rel="noopener">Java利用Google Zxing实现在线生成二维码和二维码解码 - yoodb - 素文宅博客</a></p><p><a href="https://www.programcreek.com/java-api-examples/index.php?api=com.google.zxing.client.j2se.BufferedImageLuminanceSource" target="_blank" rel="noopener">Java Code Examples com.google.zxing.client.j2se.BufferedImageLuminanceSource</a></p><h2 id="English"><a href="#English" class="headerlink" title="English"></a>English</h2><h2 id="Course"><a href="#Course" class="headerlink" title="Course"></a>Course</h2><p><a href="http://www.itwar.cn/" target="_blank" rel="noopener">逆风学习网 - Powered by Discuz!</a></p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p><a href="https://github.com/mercyblitz" target="_blank" rel="noopener">mercyblitz (Mercy Ma)</a></p><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p><a href="https://blog.csdn.net/l707941510/article/details/80520790" target="_blank" rel="noopener">Putty的安装和使用 - 阿亮的博客 - CSDN博客</a></p><p><a href="https://www.makeuseof.com/tag/typora-markdown-editor/" target="_blank" rel="noopener">8 Reasons Why Typora Might Be Your Favorite Markdown Editor</a></p><p><a href="https://github.com/jgm/pandoc/releases/tag/2.0.6" target="_blank" rel="noopener">Release pandoc 2.0.6 · jgm/pandoc</a></p><p><a href="https://www.eclipse.org/downloads/packages/" target="_blank" rel="noopener">eclipse</a></p><p><a href="https://atom.io/" target="_blank" rel="noopener">Atom</a></p><p><a href="https://www.sublimetext.com/3" target="_blank" rel="noopener">Download - Sublime Text</a></p><h2 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h2><p><a href="https://home.cnblogs.com/u/skywang12345/feed/blog/" target="_blank" rel="noopener">如果天空不死的主页 - 博客园</a></p><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p><a href="https://www.stellarinfo.com/blog/how-to-fix-kernel-data-inpage-error/" target="_blank" rel="noopener">How To Fix Kernel Data Inpage Error in Windows 10?</a></p><p><a href="https://www.mi.com/service/bijiben/drivers/15/" target="_blank" rel="noopener">小米帮助中心-小米商城</a></p><h2 id="springmvc"><a href="#springmvc" class="headerlink" title="springmvc"></a>springmvc</h2><p><a href="https://blog.csdn.net/baidu_15275441/article/details/73930961" target="_blank" rel="noopener">springmvc前台访问404，不能进入controller，后台不报错问题解决方案心得 - ITwelision的博客 - CSDN博客</a></p><h2 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h2><p><a href="https://www.wireshark.org/docs/wsug_html_chunked/" target="_blank" rel="noopener">Wireshark User’s Guide</a></p><h2 id="webservice"><a href="#webservice" class="headerlink" title="webservice"></a>webservice</h2><p><a href="https://jadyer.cn/2013/03/19/jaxws-and-wsimport-demo/" target="_blank" rel="noopener">JAX-WS入门实例及wsimport的使用</a></p><p><a href="https://www.iteye.com/topic/571083" target="_blank" rel="noopener">webservice的框架—axis - New - ITeye论坛</a></p><p><a href="https://axis.apache.org/axis/java/user-guide.html" target="_blank" rel="noopener">Apache Axis – User’s Guide</a></p><p><a href="https://snowolf.iteye.com/blog/211663" target="_blank" rel="noopener">axis 自定义对象序列化 - Snowolf的意境空间！ - ITeye博客</a></p><h1 id="blog"><a href="#blog" class="headerlink" title="blog"></a>blog</h1><p><a href="https://hexo.io/" target="_blank" rel="noopener">hexo</a></p><p><a href="https://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a></p><p><a href="http://www.dailichun.com/2016/10/29/jekyllbuild.html" target="_blank" rel="noopener">jekyll博客搭建之艰辛之路 | Dailc的个人主页</a></p><p><a href="http://www.ityouknow.com/other/2018/09/16/create-blog.html" target="_blank" rel="noopener">技术人如何搭建自己的技术博客 - 纯洁的微笑博客</a></p><p><a href="http://baixin.io:8000/2016/10/jekyll_tutorials1/" target="_blank" rel="noopener">Jekyll搭建个人博客</a></p><p><a href="https://www.hifreud.com/" target="_blank" rel="noopener">- Freud’s Blog</a></p><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">开始使用 - NexT 使用文档+hexo</a></p><p><a href="http://theme-next.simpleyyt.com/getting-started.html" target="_blank" rel="noopener">开始使用 - NexT 使用文档+jekyll</a></p><p><a href="http://baixin.io:8000/2016/10/jekyll_tutorials1/" target="_blank" rel="noopener">Jekyll搭建个人博客</a></p><p><a href="https://cuiqingcai.com/" target="_blank" rel="noopener">静觅 崔庆才的个人博客</a></p><p><a href="https://xuquan.site/" target="_blank" rel="noopener">Nikkkki’s Notes</a></p><p><a href="https://weekly.75team.com/" target="_blank" rel="noopener">奇舞周刊</a></p><p><a href="http://www.alloyteam.com/nav/" target="_blank" rel="noopener">Web前端导航</a></p><p><a href="https://fequan.com/" target="_blank" rel="noopener">前端圈——打造专业的前端技术会议–</a></p><p><a href="https://juejin.im/post/5a0c1956f265da430a501f51" target="_blank" rel="noopener">个人分享–web前端学习资源分享 - 掘金</a></p><p><a href="https://mercyblitz.github.io/" target="_blank" rel="noopener">小马哥的技术博客 - 小马哥的技术博客</a></p><p><a href="https://lexburner.github.io/" target="_blank" rel="noopener">徐靖峰|个人博客</a></p><p><a href="http://blog.720ui.com/" target="_blank" rel="noopener">梁桂钊的博客</a></p><p><a href="https://xwjie.github.io/rule/" target="_blank" rel="noopener">导读 | 晓风轻技术小站</a></p><p><a href="http://luokangyuan.com/" target="_blank" rel="noopener">码酱博客</a></p><p><a href="https://www.tripfe.cn/" target="_blank" rel="noopener">前端之旅</a></p><p><a href="http://cmsblogs.com/" target="_blank" rel="noopener">Java 技术驿站-一个专注于 Java 技术分享的精品博客网站</a></p><p><a href="http://www.itmuch.com/" target="_blank" rel="noopener">周立的博客 - 关注Spring Cloud、Docker</a></p><p><a href="https://github.com/ZhongFuCheng3y/3y" target="_blank" rel="noopener">ZhongFuCheng3y/3y: 3y文章导航</a></p><p><a href="https://github.com/CyC2018?tab=repositories" target="_blank" rel="noopener">CyC2018 / Repositories</a></p><p><a href="https://yuzhouwan.com/" target="_blank" rel="noopener">https://yuzhouwan.com/</a></p><p><a href="https://github.com/hijiangtao" target="_blank" rel="noopener">hijiangtao (Joe Jiang)</a></p><p><a href="http://eloquentjavascript.net/" target="_blank" rel="noopener">Eloquent JavaScript</a></p><p><a href="https://github.com/Snailclimb" target="_blank" rel="noopener">Snailclimb (SnailClimb)</a></p><p><a href="http://caibaojian.com/" target="_blank" rel="noopener">前端开发博客-前端开发,前端博客</a></p><p><a href="https://www.cygnet-infotech.com/blog/41-websites-every-java-developer-should-bookmark" target="_blank" rel="noopener">41个网站每个Java开发人员都应该收藏</a></p><p><a href="http://www.importnew.com/22382.html/15" target="_blank" rel="noopener">11个最值得Java开发者收藏的网站 - ImportNew</a></p><p><a href="https://www.ibm.com/developerworks/cn/views/java/libraryview.jsp" target="_blank" rel="noopener">IBM developerWorks 中国 : Java technology : 文档库</a></p><p><a href="https://tylermcginnis.com/blog" target="_blank" rel="noopener">Tutorials on JavaScript, React, Vue, GraphQL, and more</a></p><p><a href="https://www.iteblog.com/" target="_blank" rel="noopener">过往记忆</a></p><p><a href="http://www.iocoder.cn/?vip" target="_blank" rel="noopener">芋道源码 —— 纯源码解析博客</a></p><p><a href="https://www.v2ex.com/" target="_blank" rel="noopener">V2EX</a></p><p><a href="http://blog.codinglabs.org/" target="_blank" rel="noopener">CodingLabs - keep coding, keep foolish</a></p><p><a href="https://crowhawk.github.io/tags/" target="_blank" rel="noopener">Tags - 王泽远的博客 | Crow’s Blog</a></p><p><a href="http://blog.beifengtz.com/" target="_blank" rel="noopener">首页 - Beifengtz Blog</a></p><p><a href="http://techblog.pub/?utm_term=liangsonghua" target="_blank" rel="noopener">原创技术博客大联盟 | techblog</a></p><h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><p><a href="https://cyc2018.github.io/CS-Notes/#/README" target="_blank" rel="noopener">CS-Notes</a></p><p><a href="https://github.com/frank-lam/fullstack-tutorial" target="_blank" rel="noopener">frank-lam/fullstack-tutorial: 🚀 fullstack tutorial 2019，后台技术栈/架构师之路/全栈开发社区，春招/秋招/校招/面试</a></p><p><a href="https://github.com/aalansehaiyang/technology-talk" target="_blank" rel="noopener">aalansehaiyang/technology-talk: 汇总java生态圈常用技术框架、开源中间件，系统架构、数据库、大公司架构案例、常用三方类库、项目管理、线上问题排查、个人成长、思考等知识</a></p><p><a href="https://github.com/Advanced-Frontend/Daily-Interview-Question" target="_blank" rel="noopener">GitHub - Advanced-Frontend/Daily-Interview-Question: 我是木易杨，公众号「高级前端进阶」作者，每天搞定一道前端大厂面试题，祝大家天天进步，一年后会看到不一样的自己。</a></p><p><a href="https://github.com/doocs/advanced-java" target="_blank" rel="noopener">doocs/advanced-java: 😮 互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务等领域知识，后端同学必看，前端同学也可学习</a></p><p><a href="https://github.com/Snailclimb/JavaGuide" target="_blank" rel="noopener">Snailclimb/JavaGuide: 【Java学习+面试指南】 一份涵盖大部分Java程序员所需要掌握的核心知识。</a></p><p><a href="https://github.com/aalansehaiyang/technology-talk" target="_blank" rel="noopener">aalansehaiyang/technology-talk: 汇总java生态圈常用技术框架、开源中间件，系统架构、数据库、大公司架构案例、常用三方类库、项目管理、线上问题排查、个人成长、思考等知识</a></p><p><a href="https://github.com/azl397985856/leetcode" target="_blank" rel="noopener">azl397985856/leetcode: LeetCode Solutions: A Record of My Problem Solving Journey.( leetcode题解，记录自己的leetcode解题之路。)</a></p><p><a href="https://github.com/Blankj/awesome-java-leetcode" target="_blank" rel="noopener">Blankj/awesome-java-leetcode: LeetCode of algorithms with java solution(updating).</a></p><p><a href="https://github.com/MisterBooo/LeetCodeAnimation" target="_blank" rel="noopener">MisterBooo/LeetCodeAnimation: Demonstrate all the questions on LeetCode in the form of animation.（用动画的形式呈现解LeetCode题目的思路）</a></p><p><a href="https://github.com/kdn251/interviews/blob/master/README-zh-cn.md" target="_blank" rel="noopener">interviews/README-zh-cn.md at master · kdn251/interviews</a></p><p><a href="https://github.com/biezhi/java-bible" target="_blank" rel="noopener">biezhi/java-bible: 我的技术摘要</a></p><p><a href="https://github.com/ZhongFuCheng3y/3y" target="_blank" rel="noopener">ZhongFuCheng3y/3y: 3y原创技术文章导航</a></p><p><a href="https://cxyxiaowu.com/" target="_blank" rel="noopener">程序员小吴</a></p><h1 id="api"><a href="#api" class="headerlink" title="api"></a>api</h1><p><a href="https://docs.spring.io/spring/docs/5.1.2.RELEASE/spring-framework-reference/index.html" target="_blank" rel="noopener">Spring Framework Documentation</a></p><p><a href="https://docs.python.org/3.8/tutorial/index.html" target="_blank" rel="noopener">The Python Tutorial — Python 3.8.0a0 documentation</a></p><p><a href="https://docs.python.org/3/library/index.html" target="_blank" rel="noopener">The Python Standard Library — Python 3.7.1 documentation</a></p><p><a href="http://www.mybatis.org/mybatis-3/" target="_blank" rel="noopener">mybatis – MyBatis 3 | Introduction</a></p><p><a href="https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/htmlsingle/" target="_blank" rel="noopener">Spring Boot Reference Guide</a></p><p><a href="https://cloud.spring.io/spring-cloud-static/Finchley.SR2/single/spring-cloud.html" target="_blank" rel="noopener">Spring Cloud</a></p><p><a href="https://api.jquery.com/" target="_blank" rel="noopener">jQuery API Documentation</a></p><p><a href="http://cyclejs.cn/" target="_blank" rel="noopener">Cycle.js</a></p><p><a href="https://cycle.js.org/" target="_blank" rel="noopener">Cycle.js</a></p><p><a href="https://www.ecma-international.org/ecma-262/6.0/#sec-block-level-function-declarations-web-legacy-compatibility-semantics" target="_blank" rel="noopener">ECMAScript 2015 Language Specification – ECMA-262 6th Edition</a></p><p><a href="https://developer.github.com/" target="_blank" rel="noopener">GitHub Developer | GitHub Developer Guide_测试接口</a></p><p><a href="http://jquery.cuishifeng.cn/" target="_blank" rel="noopener">jQuery API 中文文档 | jQuery API 中文在线手册 | jquery api 下载 | jquery api chm</a></p><p><a href="https://echarts.baidu.com/index.html" target="_blank" rel="noopener">ECharts</a></p><p><a href="https://github.com/nefe/You-Dont-Need-jQuery#table-of-contents" target="_blank" rel="noopener">nefe/You-Dont-Need-jQuery: Examples of how to do query, style, dom, ajax, event etc like jQuery with plain javascript.</a></p><p><a href="https://nodejs.org/en/docs/guides/" target="_blank" rel="noopener">Guides | Node.js</a></p><p><a href="https://reacttraining.com/react-router/web/guides/quick-start" target="_blank" rel="noopener">React Router: Declarative Routing for React.js</a></p><p><a href="http://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程 - 学的不仅是技术，更是梦想！</a></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/" target="_blank" rel="noopener">MySQL :: MySQL 5.7 Reference Manual</a></p><p><a href="https://gitee.com/imooccode/happymmallwiki/wikis/Home" target="_blank" rel="noopener">Home - Wiki - 码云 Gitee.com</a></p><p><a href="https://docs.python.org/3.8/py-modindex.html#cap-o" target="_blank" rel="noopener">Python Module Index — Python 3.8.0a3 documentation</a></p><p><a href="https://github.com/lyj8330328/leyou" target="_blank" rel="noopener">lyj8330328/leyou: 乐优商城项目后台</a></p><p><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">MDN Web 文档</a></p><p><a href="http://www.bootcss.com/" target="_blank" rel="noopener">Bootstrap中文网</a></p><p><a href="https://www.wikipedia.org/" target="_blank" rel="noopener">Wikipedia</a></p><p><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text - A sophisticated text editor for code, markup and prose</a></p><h1 id="dev"><a href="#dev" class="headerlink" title="dev"></a>dev</h1><p><a href="http://idea.lanyus.com/" target="_blank" rel="noopener">Atom</a></p><p><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">IntelliJ IDEA: The Java IDE for Professional Developers by JetBrains</a></p><p><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">Download PuTTY: latest release (0.70)</a></p><p><a href="http://npm.taobao.org/" target="_blank" rel="noopener">淘宝 NPM 镜像</a></p><p><a href="https://babeljs.io/" target="_blank" rel="noopener">Babel · The compiler for next generation JavaScript</a></p><p><a href="http://learning.happymmall.com/" target="_blank" rel="noopener">Index of /</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> index_catalogue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot</title>
      <link href="/2019/04/03/springboot/"/>
      <url>/2019/04/03/springboot/</url>
      
        <content type="html"><![CDATA[<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><a href="https://start.spring.io/" target="_blank" rel="noopener">官网创建</a></p><h3 id="第一个例子"><a href="#第一个例子" class="headerlink" title="第一个例子"></a>第一个例子</h3><h4 id="编辑pom-xml"><a href="#编辑pom-xml" class="headerlink" title="编辑pom.xml"></a>编辑pom.xml</h4><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- springBoot的启动器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h4 id="编写controller"><a href="#编写controller" class="headerlink" title="编写controller"></a>编写controller</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot HelloWorld * @author Administrator * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">showHelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写启动类"><a href="#编写启动类" class="headerlink" title="编写启动类"></a>编写启动类</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>app<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * SpringBoot 启动类 * @author Administrator * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>进入到项目目录下，终端运行</p><pre><code>mvn clean package -Dmaven.test.skip=true</code></pre><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><pre><code>java -jar demo_springboot-0.0.1-SNAPSHOT.jar</code></pre><h1 id="整合Web开发"><a href="#整合Web开发" class="headerlink" title="整合Web开发"></a>整合Web开发</h1><h2 id="整合Servlet"><a href="#整合Servlet" class="headerlink" title="整合Servlet"></a>整合Servlet</h2><h3 id="注解扫描注册"><a href="#注解扫描注册" class="headerlink" title="注解扫描注册"></a>注解扫描注册</h3><p>通过注解扫描完成<code>Servlet</code>组件的注册</p><h4 id="编写Servlet"><a href="#编写Servlet" class="headerlink" title="编写Servlet"></a>编写Servlet</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *SpringBoot整合Servlet方式一 * *&lt;servlet> *    &lt;servlet-name>FirstServlet&lt;/servlet-name> *    &lt;servlet-class>com.bjsxt.servlet.FirstServlet&lt;/servlet-class> *&lt;/servlet> * *&lt;servlet-mapping> * &lt;servlet-name>FirstServlet&lt;/servlet-name> * &lt;url-pattern>/first&lt;/url-pattern> *&lt;/servlet-mapping> * */</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"FirstServlet"</span><span class="token punctuation">,</span>urlPatterns<span class="token operator">=</span><span class="token string">"/first"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"FirstServlet............"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写启动类-1"><a href="#编写启动类-1" class="headerlink" title="编写启动类"></a>编写启动类</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot整合Servlet方式一 * * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token comment" spellcheck="true">//在springBoot启动时会扫描@WebServlet，并将该类实例化</span><span class="token annotation punctuation">@ServletComponentScan</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="方法注册"><a href="#方法注册" class="headerlink" title="方法注册"></a>方法注册</h3><p>通过方法完成<code>Servlet</code>组件的注册</p><h4 id="编写Servlet-1"><a href="#编写Servlet-1" class="headerlink" title="编写Servlet"></a>编写Servlet</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *SpringBoot整合Servlet方式二 * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecondServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"SecondServlet.........."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写启动类-2"><a href="#编写启动类-2" class="headerlink" title="编写启动类"></a>编写启动类</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot整合Servlet方式二 * * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App2</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App2<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> ServletRegistrationBean <span class="token function">getServletRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ServletRegistrationBean bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SecondServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bean<span class="token punctuation">.</span><span class="token function">addUrlMappings</span><span class="token punctuation">(</span><span class="token string">"/second"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="整合Filter"><a href="#整合Filter" class="headerlink" title="整合Filter"></a>整合Filter</h2><h3 id="注解扫描注册-1"><a href="#注解扫描注册-1" class="headerlink" title="注解扫描注册"></a>注解扫描注册</h3><h4 id="编写Filter"><a href="#编写Filter" class="headerlink" title="编写Filter"></a>编写Filter</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *SpringBoot整合Filter 方式一 *&lt;filter> *    &lt;filter-name>FirstFilter&lt;/filter-name> *    &lt;filter-class>com.bjsxt.filter.FirstFilter&lt;/filter-class> *&lt;/filter> *&lt;filter-mapping> *    &lt;filter-name>FirstFilter&lt;/filter-name> *    &lt;url-pattern>/first&lt;/url-pattern> *&lt;/filter-mapping> */</span><span class="token comment" spellcheck="true">//@WebFilter(filterName="FirstFilter",urlPatterns={"*.do","*.jsp"})</span><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>filterName<span class="token operator">=</span><span class="token string">"FirstFilter"</span><span class="token punctuation">,</span>urlPatterns<span class="token operator">=</span><span class="token string">"/first"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest arg0<span class="token punctuation">,</span> ServletResponse arg1<span class="token punctuation">,</span> FilterChain arg2<span class="token punctuation">)</span>            <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"进入Filter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arg2<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>arg0<span class="token punctuation">,</span> arg1<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"离开Filter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig arg0<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写启动类-3"><a href="#编写启动类-3" class="headerlink" title="编写启动类"></a>编写启动类</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *SpringBoot整合Filter 方式一 * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@ServletComponentScan</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="方法注册-1"><a href="#方法注册-1" class="headerlink" title="方法注册"></a>方法注册</h3><h4 id="编写Filter-1"><a href="#编写Filter-1" class="headerlink" title="编写Filter"></a>编写Filter</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *  *SpringBoot整合Filter 方式二 * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecondFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest arg0<span class="token punctuation">,</span> ServletResponse arg1<span class="token punctuation">,</span> FilterChain arg2<span class="token punctuation">)</span>            <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"进入SecondFilter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arg2<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>arg0<span class="token punctuation">,</span> arg1<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"离开SecondFilter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig arg0<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写启动类-4"><a href="#编写启动类-4" class="headerlink" title="编写启动类"></a>编写启动类</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot整合Filter方式二 * * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App2</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App2<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 注册Filter     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> FilterRegistrationBean <span class="token function">getFilterRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        FilterRegistrationBean bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SecondFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//bean.addUrlPatterns(new String[]{"*.do","*.jsp"});</span>        bean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">"/second"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="整合Listener"><a href="#整合Listener" class="headerlink" title="整合Listener"></a>整合Listener</h2><h3 id="注解扫描注册-2"><a href="#注解扫描注册-2" class="headerlink" title="注解扫描注册"></a>注解扫描注册</h3><h4 id="编写Listener"><a href="#编写Listener" class="headerlink" title="编写Listener"></a>编写Listener</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>listener<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextEvent<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextListener<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebListener<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * springBoot整合Listener * *&lt;listener> *    &lt;listener-class>com.bjsxt.listener.FirstListener&lt;/listener-class> *&lt;/listener> */</span><span class="token annotation punctuation">@WebListener</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstListener</span> <span class="token keyword">implements</span> <span class="token class-name">ServletContextListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextDestroyed</span><span class="token punctuation">(</span>ServletContextEvent arg0<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextInitialized</span><span class="token punctuation">(</span>ServletContextEvent arg0<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Listener...init......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写启动类-5"><a href="#编写启动类-5" class="headerlink" title="编写启动类"></a>编写启动类</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletComponentScan<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * springBoot整合Listener方式一 * * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@ServletComponentScan</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="方法注册-2"><a href="#方法注册-2" class="headerlink" title="方法注册"></a>方法注册</h3><h4 id="编写Listener-1"><a href="#编写Listener-1" class="headerlink" title="编写Listener"></a>编写Listener</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>listener<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextEvent<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextListener<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * springBoot整合Listener方式二。 * * */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecondListener</span> <span class="token keyword">implements</span> <span class="token class-name">ServletContextListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextDestroyed</span><span class="token punctuation">(</span>ServletContextEvent arg0<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextInitialized</span><span class="token punctuation">(</span>ServletContextEvent arg0<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"SecondListener..init....."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="编写启动类-6"><a href="#编写启动类-6" class="headerlink" title="编写启动类"></a>编写启动类</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot整合Listener方式二 * * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App2</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App2<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 注册listener     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> ServletListenerRegistrationBean<span class="token operator">&lt;</span>SecondListener<span class="token operator">></span> <span class="token function">getServletListenerRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ServletListenerRegistrationBean<span class="token operator">&lt;</span>SecondListener<span class="token operator">></span> bean<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletListenerRegistrationBean</span><span class="token operator">&lt;</span>SecondListener<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SecondListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="访问静态资源"><a href="#访问静态资源" class="headerlink" title="访问静态资源"></a>访问静态资源</h2><h3 id="从classpath-static的目录下读取"><a href="#从classpath-static的目录下读取" class="headerlink" title="从classpath/static的目录下读取"></a>从<code>classpath/static</code>的目录下读取</h3><h3 id="从ServletContext根目录下读取-即webapp目录"><a href="#从ServletContext根目录下读取-即webapp目录" class="headerlink" title="从ServletContext根目录下读取,即webapp目录"></a>从<code>ServletContext</code>根目录下读取,即<code>webapp</code>目录</h3><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="编写Controller"><a href="#编写Controller" class="headerlink" title="编写Controller"></a>编写Controller</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot文件上传 * * */</span><span class="token comment" spellcheck="true">//@Controller</span><span class="token annotation punctuation">@RestController</span> <span class="token comment" spellcheck="true">//表示该类下的方法的返回值会自动做json格式的转换</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileUploadController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*     * 处理文件上传     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/fileUploadController"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">fileUpload</span><span class="token punctuation">(</span>MultipartFile filename<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        filename<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"e:/"</span><span class="token operator">+</span>filename<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token string">"ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写启动类-7"><a href="#编写启动类-7" class="headerlink" title="编写启动类"></a>编写启动类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * SpringBoot文件上传 * * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写文件上传表单"><a href="#编写文件上传表单" class="headerlink" title="编写文件上传表单"></a>编写文件上传表单</h3><p>进入<code>src/main/resources/static</code>目录下,新增<code>upload.html</code></p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>文件上传<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fileUploadController<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        上传文件：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>filename<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="设置上传文件大小的默认值"><a href="#设置上传文件大小的默认值" class="headerlink" title="设置上传文件大小的默认值"></a>设置上传文件大小的默认值</h3><p>进入<code>/src/main/resources</code>目录，编辑<code>application.properties</code>文件</p><pre><code>spring.http.multipart.maxFileSize=200MBspring.http.multipart.maxRequestSize=200MB</code></pre><h2 id="整合jsp"><a href="#整合jsp" class="headerlink" title="整合jsp"></a>整合jsp</h2><h3 id="编辑pom-xml-1"><a href="#编辑pom-xml-1" class="headerlink" title="编辑pom.xml"></a>编辑pom.xml</h3><pre class=" language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!-- jdk1.7 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- springBoot的启动器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- jstl --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- jasper --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>tomcat-embed-jasper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><h3 id="创建application-properties"><a href="#创建application-properties" class="headerlink" title="创建application.properties"></a>创建<code>application.properties</code></h3><p>进入<code>src/main/resources</code>目录，新增编辑<code>application.properties</code>文件</p><pre><code>spring.mvc.view.prefix=/WEB-INF/jsp/spring.mvc.view.suffix=.jsp</code></pre><h3 id="编写Controller-1"><a href="#编写Controller-1" class="headerlink" title="编写Controller"></a>编写Controller</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot整合jsp * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*     * 处理请求，产生数据     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/showUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showUser</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//需要一个Model对象</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//跳转视图</span>        <span class="token keyword">return</span> <span class="token string">"userList"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="创建jsp"><a href="#创建jsp" class="headerlink" title="创建jsp"></a>创建jsp</h3><p>进入<code>src/main/webapp/WEB-INF/jsp</code>目录,新增<code>userList.jsp</code></p><pre class=" language-html"><code class="language-html">&lt;%@ page language="java" contentType="text/html; charset=UTF-8"    pageEncoding="UTF-8"%>&lt;%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${list }<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.userid }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.username }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.userage }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="创建启动类"><a href="#创建启动类" class="headerlink" title="创建启动类"></a>创建启动类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * SpringBoot启动类 * * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="整合freemarker"><a href="#整合freemarker" class="headerlink" title="整合freemarker"></a>整合freemarker</h2><h3 id="编辑pom-xml-2"><a href="#编辑pom-xml-2" class="headerlink" title="编辑pom.xml"></a>编辑pom.xml</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- springBoot的启动器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- freemarker启动器的坐标 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-freemarker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><h3 id="创建-Controller"><a href="#创建-Controller" class="headerlink" title="创建 Controller"></a>创建 Controller</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot整合jsp * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*     * 处理请求，产生数据     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/showUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showUser</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//需要一个Model对象</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//跳转视图</span>        <span class="token keyword">return</span> <span class="token string">"userList"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写前端页面"><a href="#编写前端页面" class="headerlink" title="编写前端页面"></a>编写前端页面</h3><p><code>springBoot</code>要求模板形式的视图层技术的文件必须要放到<code>src/main/resources</code>目录下必<br>须要一个名称为<strong><code>templates</code></strong></p><p>进入到<code>src/main/resources/templates</code>目录,新增<code>userList.ftl</code>文件</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>展示用户数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-9<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>meta</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">list</span> <span class="token attr-name">as</span> <span class="token attr-name">user</span> <span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.userid}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.username}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.userage}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="创建启动类-1"><a href="#创建启动类-1" class="headerlink" title="创建启动类"></a>创建启动类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * SpringBoot启动类 * * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="整合Thymeleaf"><a href="#整合Thymeleaf" class="headerlink" title="整合Thymeleaf"></a>整合Thymeleaf</h2><h3 id="编辑pom-xml-3"><a href="#编辑pom-xml-3" class="headerlink" title="编辑pom.xml"></a>编辑pom.xml</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thymeleaf.version</span><span class="token punctuation">></span></span>3.0.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thymeleaf.version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thymeleaf-layout-dialect.version</span><span class="token punctuation">></span></span>2.0.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thymeleaf-layout-dialect.version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- springBoot的启动器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- springBoot的启动器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><h3 id="编辑前端页面"><a href="#编辑前端页面" class="headerlink" title="编辑前端页面"></a>编辑前端页面</h3><p>进入<code>src/main/resources/templates</code>,<code>templates</code>目录是安全的。意味着该目录下的内容是不允许外界直接访问的。</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Thymeleaf入门<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${msg}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="编辑Controller"><a href="#编辑Controller" class="headerlink" title="编辑Controller"></a>编辑Controller</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Model<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Thymeleaf入门案例 * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token string">"Thymeleaf 第一个案例"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编辑启动类"><a href="#编辑启动类" class="headerlink" title="编辑启动类"></a>编辑启动类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** *  *Thymeleaf入门案例 * */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><h4 id="org-xml-sax-SAXParseException-元素类型-quot-meta-quot-必须由匹配的结束标记-quot-lt-meta-gt-quot-终止"><a href="#org-xml-sax-SAXParseException-元素类型-quot-meta-quot-必须由匹配的结束标记-quot-lt-meta-gt-quot-终止" class="headerlink" title="org.xml.sax.SAXParseException:元素类型 &quot;meta&quot; 必须由匹配的结束标记&quot;&lt;/meta&gt;&quot;终止"></a><code>org.xml.sax.SAXParseException:元素类型 &quot;meta&quot; 必须由匹配的结束标记&quot;&lt;/meta&gt;&quot;终止</code></h4><p>解决</p><p>方式一</p><p>让html的标记按照严禁的语法编写</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><p>方式二</p><p><code>thymeleaf.jar</code>更新为3.0以上的版本</p><p><code>thymeleaf-layout-dialect.jar</code>更新为2.0以上的版本</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thymeleaf.version</span><span class="token punctuation">></span></span>3.0.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thymeleaf.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thymeleaf-layout-dialect.version</span><span class="token punctuation">></span></span>2.0.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thymeleaf-layout-dialect.version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span></code></pre><h2 id="Thymeleaf语法"><a href="#Thymeleaf语法" class="headerlink" title="Thymeleaf语法"></a>Thymeleaf语法</h2><h3 id="变量输出与字符串操作"><a href="#变量输出与字符串操作" class="headerlink" title="变量输出与字符串操作"></a>变量输出与字符串操作</h3><p>调用内置对象一定要用<strong>#</strong></p><p>大部分的内置对象都以<strong>s</strong>结尾<code>strings、numbers、dates</code></p><h4 id="后台数据"><a href="#后台数据" class="headerlink" title="后台数据"></a>后台数据</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token string">"Thymeleaf 第一个案例"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="th-text"><a href="#th-text" class="headerlink" title="th:text"></a>th:text</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${msg} <span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span></code></pre><h4 id="th-value"><a href="#th-value" class="headerlink" title="th:value"></a>th:value</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${msg} <span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="判断字符串是否为空"><a href="#判断字符串是否为空" class="headerlink" title="判断字符串是否为空"></a>判断字符串是否为空</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.isEmpty(msg)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="判断字符串是否包含指定的子串"><a href="#判断字符串是否包含指定的子串" class="headerlink" title="判断字符串是否包含指定的子串"></a>判断字符串是否包含指定的子串</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.contains(msg,<span class="token punctuation">'</span>9<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.contains(msg,<span class="token punctuation">'</span>T<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="判断当前字符串是否以子串开头"><a href="#判断当前字符串是否以子串开头" class="headerlink" title="判断当前字符串是否以子串开头"></a>判断当前字符串是否以子串开头</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.startsWith(msg,<span class="token punctuation">'</span>a<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.startsWith(msg,<span class="token punctuation">'</span>T<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="判断当前字符串是否以子串结尾"><a href="#判断当前字符串是否以子串结尾" class="headerlink" title="判断当前字符串是否以子串结尾"></a>判断当前字符串是否以子串结尾</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.endsWith(msg,<span class="token punctuation">'</span>a<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.endsWith(msg,<span class="token punctuation">'</span>案例<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="返回字符串的长度"><a href="#返回字符串的长度" class="headerlink" title="返回字符串的长度"></a>返回字符串的长度</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.length(msg)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="查找子串的位置"><a href="#查找子串的位置" class="headerlink" title="查找子串的位置"></a>查找子串的位置</h4><p>返回该子串的下标，如果没找到则返回-1</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.indexOf(msg,<span class="token punctuation">'</span>h<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="截取子串"><a href="#截取子串" class="headerlink" title="截取子串"></a>截取子串</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.substring(msg,13)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.substring(msg,13,14)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="字符串转大小写"><a href="#字符串转大小写" class="headerlink" title="字符串转大小写"></a>字符串转大小写</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.toUpperCase(msg)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#strings.toLowerCase(msg)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h3 id="日期格式化处理"><a href="#日期格式化处理" class="headerlink" title="日期格式化处理"></a>日期格式化处理</h3><h4 id="后台数据-1"><a href="#后台数据-1" class="headerlink" title="后台数据"></a>后台数据</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="默认格式日期"><a href="#默认格式日期" class="headerlink" title="默认格式日期"></a>默认格式日期</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#dates.format(key)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="按照自定义的格式做日期转换"><a href="#按照自定义的格式做日期转换" class="headerlink" title="按照自定义的格式做日期转换"></a>按照自定义的格式做日期转换</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#dates.format(key,<span class="token punctuation">'</span>yyy/MM/dd<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="取年"><a href="#取年" class="headerlink" title="取年"></a>取年</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#dates.year(key)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="取月"><a href="#取月" class="headerlink" title="取月"></a>取月</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#dates.month(key)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="取日"><a href="#取日" class="headerlink" title="取日"></a>取日</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#dates.day(key)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><h4 id="后台数据-2"><a href="#后台数据-2" class="headerlink" title="后台数据"></a>后台数据</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo2</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">,</span> <span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index2"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="th-if"><a href="#th-if" class="headerlink" title="th:if"></a>th:if</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sex} <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>男<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    性别：男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sex} <span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token punctuation">'</span>女<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    性别：女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h4 id="th-switch"><a href="#th-switch" class="headerlink" title="th:switch"></a>th:switch</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>switch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${id}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ID为1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ID为2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ID为3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="迭代遍历"><a href="#迭代遍历" class="headerlink" title="迭代遍历"></a>迭代遍历</h3><h4 id="后台数据-3"><a href="#后台数据-3" class="headerlink" title="后台数据"></a>后台数据</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show3"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo3</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index3"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show4"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo4</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Users<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"u1"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"u2"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"u3"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"王五"</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"map"</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index4"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="th-each迭代list"><a href="#th-each迭代list" class="headerlink" title="th:each迭代list"></a>th:each迭代list</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u : ${list}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${u.userid}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${u.username}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${u.userage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></code></pre><h4 id="th-each状态变量"><a href="#th-each状态变量" class="headerlink" title="th:each状态变量"></a>th:each状态变量</h4><p><code>index</code>当前迭代器的索引从0开始<br><code>count</code>当前迭代对象的计数从1开始<br><code>size</code>被迭代对象的长度<br><code>even/odd</code>布尔值,当前循环是否是偶数/奇数从0开始<br><code>first</code>布尔值，当前循环的是否是第一条,如果是返回<code>true</code>否则返回<code>false</code><br><code>last</code>布尔值，当前循环的是否是最后一条,如果是则返回<code>true</code>否则返回<code>false</code></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>u,var : ${list}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${u.userid}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${u.username}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${u.userage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${var.index}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${var.count}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${var.size}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${var.even}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${var.odd}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${var.first}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${var.last}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></code></pre><h4 id="th-each迭代Map"><a href="#th-each迭代Map" class="headerlink" title="th:each迭代Map"></a>th:each迭代Map</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maps : ${map}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entry:${maps}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${entry.value.userid}<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entry:${maps}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${entry.value.username}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>entry:${maps}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${entry.value.userage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span></code></pre><h3 id="域对象操作"><a href="#域对象操作" class="headerlink" title="域对象操作"></a>域对象操作</h3><h4 id="后台数据-4"><a href="#后台数据-4" class="headerlink" title="后台数据"></a>后台数据</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show5"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo5</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"req"</span><span class="token punctuation">,</span> <span class="token string">"HttpServletRequest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"sess"</span><span class="token punctuation">,</span> <span class="token string">"HttpSession"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">,</span> <span class="token string">"Application"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index5"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="HttpServletRequest"><a href="#HttpServletRequest" class="headerlink" title="HttpServletRequest"></a>HttpServletRequest</h4><pre class=" language-html"><code class="language-html">Request:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#httpServletRequest.getAttribute(<span class="token punctuation">'</span>req<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></code></pre><h4 id="HttpSession"><a href="#HttpSession" class="headerlink" title="HttpSession"></a>HttpSession</h4><pre class=" language-html"><code class="language-html">Session:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${session.sess}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></code></pre><h4 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h4><pre class=" language-html"><code class="language-html">Application:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${application.app}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><h3 id="URL表达式"><a href="#URL表达式" class="headerlink" title="URL表达式"></a>URL表达式</h3><p>基本语法<code>@{}</code></p><h4 id="后台数据-5"><a href="#后台数据-5" class="headerlink" title="后台数据"></a>后台数据</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/{page}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> String page<span class="token punctuation">,</span>Integer id<span class="token punctuation">,</span>String name<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> page<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{http://www.baidu.com}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>绝对路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>绝对路径2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><h4 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/show}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>相对路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{~/project2/resourcename}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>相对于服务器的根<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/show(id<span class="token punctuation">=</span>1,name<span class="token punctuation">=</span>zhagnsan)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>相对路径-传参<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/path/{id}/show(id<span class="token punctuation">=</span>1,name<span class="token punctuation">=</span>zhagnsan)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>相对路径-传参-restful<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><h1 id="整合MyBatis"><a href="#整合MyBatis" class="headerlink" title="整合MyBatis"></a>整合MyBatis</h1><h2 id="编辑pom-xml-4"><a href="#编辑pom-xml-4" class="headerlink" title="编辑pom.xml"></a>编辑pom.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- Mybatis启动器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- mysql数据库驱动 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- druid数据库连接池 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h2 id="编辑application-properties"><a href="#编辑application-properties" class="headerlink" title="编辑application.properties"></a>编辑<code>application.properties</code></h2><p>进入<code>src/main/resources</code>目录,编辑<code>application.properties</code></p><pre><code>spring.datasource.driverClassName=com.mysql.jdbc.Driverspring.datasource.url=jdbc:mysql://localhost:3306/ssmspring.datasource.username=rootspring.datasource.password=rootspring.datasource.type=com.alibaba.druid.pool.DruidDataSourcemybatis.type-aliases-package=com.bjsxt.pojo</code></pre><h2 id="数据库表设计"><a href="#数据库表设计" class="headerlink" title="数据库表设计"></a>数据库表设计</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>users<span class="token punctuation">`</span> <span class="token punctuation">(</span>    <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">INNODB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span></code></pre><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><h3 id="创建实体类"><a href="#创建实体类" class="headerlink" title="创建实体类"></a>创建实体类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer  age<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="创建mapper接口以及映射配置文件"><a href="#创建mapper接口以及映射配置文件" class="headerlink" title="创建mapper接口以及映射配置文件"></a>创建mapper接口以及映射配置文件</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>mapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UsersMapper</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">insertUser</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token doctype">&lt;!DOCTYPE mapperPUBLIC "-//mybatis.org//DTD Mapper 3.0//EN""http://mybatis.org/dtd/mybatis-3-mapper.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.bjsxt.mapper.UsersMapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>insertUser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        insert into users(name,age) values(#{name},#{age})    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">></span></span></code></pre><h3 id="创建业务层"><a href="#创建业务层" class="headerlink" title="创建业务层"></a>创建业务层</h3><p>所有方法开启事务<code>@Transactional</code>标注在类上</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Transactional</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UsersService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersMapper usersMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersMapper<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h3><p>前端请求<code>http://localhost:8080/users/input</code>跳转到<code>input.html</code>页面</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersService usersService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 页面跳转     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/{page}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> String page<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> page<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 添加用户     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/addUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">addUser</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="编写页面"><a href="#编写页面" class="headerlink" title="编写页面"></a>编写页面</h3><p>使用<code>thymeleaf</code>模板,页面必须放在<code>src/main/resources/templates</code>目录下</p><p>添加用户页面<code>input.html</code></p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>添加用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/users/addUser}<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        用户姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        用户年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>确定<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>添加成功页面<code>ok.html</code></p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>操作提示页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    操作成功！！！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="创建启动类-2"><a href="#创建启动类-2" class="headerlink" title="创建启动类"></a>创建启动类</h3><p>用户扫描<code>MyBatis</code>的<code>Mapper</code>接口,使用<code>@MapperScan(&quot;com.bjsxt.mapper&quot;)</code>注解</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>MapperScan<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.bjsxt.mapper"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//@MapperScan 用户扫描MyBatis的Mapper接口</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h2><h3 id="修改mapper接口中以及映射配置文件"><a href="#修改mapper接口中以及映射配置文件" class="headerlink" title="修改mapper接口中以及映射配置文件"></a>修改<code>mapper</code>接口中以及映射配置文件</h3><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">selectUsersAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectUsersAll<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select id,name,age from users<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h3 id="修改业务层"><a href="#修改业务层" class="headerlink" title="修改业务层"></a>修改业务层</h3><p>添加查询方法</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">findUserAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersMapper<span class="token punctuation">.</span><span class="token function">selectUsersAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="修改Controller"><a href="#修改Controller" class="headerlink" title="修改Controller"></a>修改Controller</h3><p>浏览器请求<code>http://localhost:8080/findUserAll</code>,跳转到<code>showUsers.html</code></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 查询全部用户 */</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/findUserAll"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">findUserAll</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Users<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"showUsers"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h3><p>查询用户页面<code>showUsers.html</code></p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>展示用户数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>用户ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>用户姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>用户年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user : ${list}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.id}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.age}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="更新用户"><a href="#更新用户" class="headerlink" title="更新用户"></a>更新用户</h2><h3 id="数据回显"><a href="#数据回显" class="headerlink" title="数据回显"></a>数据回显</h3><p>更新用户之前的查询，将数据在页面中回显</p><h4 id="修改mapper接口以及映射配置文件"><a href="#修改mapper接口以及映射配置文件" class="headerlink" title="修改mapper接口以及映射配置文件"></a>修改mapper接口以及映射配置文件</h4><pre class=" language-java"><code class="language-java">Users <span class="token function">selectUsersById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectUsersById<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    select id,name,age from users where id = #{value}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h4 id="修改业务层代码"><a href="#修改业务层代码" class="headerlink" title="修改业务层代码"></a>修改业务层代码</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> Users <span class="token function">findUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersMapper<span class="token punctuation">.</span><span class="token function">selectUsersById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="修改Controller-1"><a href="#修改Controller-1" class="headerlink" title="修改Controller"></a>修改Controller</h4><p>浏览器请求<code>http://localhost:8080/findUserById</code>,跳转到<code>updateUser.html</code>页面，将数据用户数据回显</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 根据用户id查询用户 */</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/findUserById"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">findUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">,</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>    Users user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"updateUser"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="编写页面-1"><a href="#编写页面-1" class="headerlink" title="编写页面"></a>编写页面</h4><p>更新用户页面<code>updateUser.html</code>进行数据回显,使用<code>th:field</code>取得<code>controller</code>中的模型数据</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/users/editUser}<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.id}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            用户姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.name}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>            用户年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.age}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>确定<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><h4 id="修改mapper接口以及映射配置文件-1"><a href="#修改mapper接口以及映射配置文件-1" class="headerlink" title="修改mapper接口以及映射配置文件"></a>修改mapper接口以及映射配置文件</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">updateUser</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>updateUser<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    update users set name=#{name} ,age=#{age} where id=#{id}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span></code></pre><h4 id="修改业务层代码-1"><a href="#修改业务层代码-1" class="headerlink" title="修改业务层代码"></a>修改业务层代码</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateUser</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>usersMapper<span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="修改Controller-2"><a href="#修改Controller-2" class="headerlink" title="修改Controller"></a>修改Controller</h4><p>更新用户页面<code>updateUser.html</code>点击提交，浏览器请求<code>http://localhost:8080/editUser</code>,跳转到修改成功页面<code>ok.html</code></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 更新用户 */</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/editUser"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">editUser</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><h3 id="修改mapper接口以及映射配置文件-2"><a href="#修改mapper接口以及映射配置文件-2" class="headerlink" title="修改mapper接口以及映射配置文件"></a>修改mapper接口以及映射配置文件</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">deleteUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>deleteUserById<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    delete from users where id = #{value}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">></span></span></code></pre><h3 id="修改业务层-1"><a href="#修改业务层-1" class="headerlink" title="修改业务层"></a>修改业务层</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>usersMapper<span class="token punctuation">.</span><span class="token function">deleteUserById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="修改Controller-3"><a href="#修改Controller-3" class="headerlink" title="修改Controller"></a>修改Controller</h3><p>浏览器请求<code>http://localhost:8080/delUser</code>重定向请求<code>/users/findUserAll</code>，跳转到查询用户页面<code>showUsers.html</code></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 删除用户 */</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/delUser"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">delUser</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">deleteUserById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"redirect:/users/findUserAll"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="修改页面"><a href="#修改页面" class="headerlink" title="修改页面"></a>修改页面</h3><p>修改查询用户页面<code>showUsers.html</code>,增加删除按钮链接</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>展示用户数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>用户ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>用户姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>用户年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user : ${list}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.id}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.age}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/users/findUserById(id<span class="token punctuation">=</span>${user.id})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>更新用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/users/delUser(id<span class="token punctuation">=</span>${user.id})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h1 id="服务端表单数据校验"><a href="#服务端表单数据校验" class="headerlink" title="服务端表单数据校验"></a>服务端表单数据校验</h1><h2 id="表单做数据校验"><a href="#表单做数据校验" class="headerlink" title="表单做数据校验"></a>表单做数据校验</h2><h3 id="修改实体类"><a href="#修改实体类" class="headerlink" title="修改实体类"></a>修改实体类</h3><p>非空校验使用<code>@NotBlank</code>注解标注在属性上</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>validator<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span>NotBlank<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@NotBlank</span> <span class="token comment" spellcheck="true">//非空校验</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@NotBlank</span> <span class="token comment" spellcheck="true">//密码非空校验</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span>String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", password="</span> <span class="token operator">+</span> password <span class="token operator">+</span> <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="修改Controller-4"><a href="#修改Controller-4" class="headerlink" title="修改Controller"></a>修改Controller</h3><p>浏览器请求<code>http://localhost:8080/addUser</code>,跳转到添加用户页面<code>add.html</code>,点击提交按钮浏览器请求<code>http://localhost:8080/save</code>,如果校验通过跳转到成功页面<code>ok.html</code>,校验不通过跳转到添加用户页面<code>add.html</code></p><p>开启校验使用<code>@Valid</code>注解<br>封装了校验的结果<code>BindingResult</code></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot 表单数据校验 * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/addUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"add"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 完成用户添加     *@Valid 开启对Users对象的数据校验     *BindingResult:封装了校验的结果     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> Users users<span class="token punctuation">,</span>BindingResult result<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"add"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="修改页面-1"><a href="#修改页面-1" class="headerlink" title="修改页面"></a>修改页面</h3><p>添加用户页面<code>add.html</code>,使用<code>th:errors</code>取得校验信息</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>添加用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/save}<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        用户姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>errors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${users.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        用户密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>errors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${users.password}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        用户年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>errors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${users.age}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>OK<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="坑-1"><a href="#坑-1" class="headerlink" title="坑"></a>坑</h2><h3 id="java-lang-IllegalStateException-Neither-BindingResult-nor-plain-target-object-for-bean-name-‘users’-available-as-request-attribute"><a href="#java-lang-IllegalStateException-Neither-BindingResult-nor-plain-target-object-for-bean-name-‘users’-available-as-request-attribute" class="headerlink" title="java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name ‘users’ available as request attribute"></a>java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name ‘users’ available as request attribute</h3><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>浏览器请求<code>http://localhost:8080/addUser</code>方法，该方法并没有传递<code>Users</code>对象，跳转到添加用户页面<code>add.html</code>取不到数据所以报错</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><h5 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h5><p><strong>跳转页面注入对象</strong></p><p>可以在浏览器请求<code>http://localhost:8080/addUser</code>方法中注入一个<code>Uesrs</code>对象<br>由于<code>springmvc</code>会将<code>Uesrs</code>对象放入到<code>Model</code>模型中传递,使用驼峰命名规则,<strong>参数的变量名需要与对象的名称相同,将首字母小写</strong></p><p>修改Controller</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot 表单数据校验 * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     *      * 如果想为传递的对象更改名称，可以使用@ModelAttribute("aa")这表示当前传递的对象的key为aa。     * 那么我们在页面中获取该对象的key也需要修改为aa     * @param users     * @return     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/addUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showPage</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"add"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 完成用户添加     *@Valid 开启对Users对象的数据校验     *BindingResult:封装了校验的结果     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> Users users<span class="token punctuation">,</span>BindingResult result<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"add"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h5><p><strong>设置参数名称可变</strong></p><p>如果想为传递的对象更改名称,可以使用<code>@ModelAttribute(&quot;aa&quot;)</code>这表示当前传递的对象的<code>key</code>为<code>aa</code><br>那么我们在页面中获取该对象的<code>key</code>也需要修改为<code>aa</code></p><p>修改Controller</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot 表单数据校验 * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersController</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     *      * 如果想为传递的对象更改名称，可以使用@ModelAttribute("aa")这表示当前传递的对象的key为aa。     * 那么我们在页面中获取该对象的key也需要修改为aa     * @param users     * @return     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/addUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ModelAttribute</span><span class="token punctuation">(</span><span class="token string">"aa"</span><span class="token punctuation">)</span> Users users<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"add"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 完成用户添加     *@Valid 开启对Users对象的数据校验     *BindingResult:封装了校验的结果     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ModelAttribute</span><span class="token punctuation">(</span><span class="token string">"aa"</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@Valid</span> Users users<span class="token punctuation">,</span>BindingResult result<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">"add"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>修改页面</p><p>添加用户页面<code>add.html</code>,<code>${aa.name}</code>需要和请求<code>http://localhost:8080/addUser</code>方法中设置的<code>@ModelAttribute(&quot;aa&quot;)</code>一样</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>添加用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/save}<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        用户姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>errors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${aa.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        用户密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>errors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${aa.password}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        用户年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>errors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${aa.age}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        用户邮箱：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>errors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${aa.email}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>OK<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="其他校验规则"><a href="#其他校验规则" class="headerlink" title="其他校验规则"></a>其他校验规则</h2><p><code>@NotBlank</code>判断字符串是否为<code>null</code>或者是空串(去掉首尾空格)。<br><code>@NotEmpty</code>判断字符串是否<code>null</code>或者是空串。<br><code>@Length</code>判断字符的长度(最大或者最小)<br><code>@Min</code>判断数值最小值<br><code>@Max</code>判断数值最大值<br><code>@Email</code>判断邮箱是否合法</p><h3 id="修改实体类-1"><a href="#修改实体类-1" class="headerlink" title="修改实体类"></a>修改实体类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message<span class="token operator">=</span><span class="token string">"用户名不能为空"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//非空校验</span>    <span class="token annotation punctuation">@Length</span><span class="token punctuation">(</span>min<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>max<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>message<span class="token operator">=</span><span class="token string">"最小长度为2位，最大长度为6位"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@NotEmpty</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Min</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Email</span>    <span class="token keyword">private</span> String email<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> email<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span>String email<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span>String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", password="</span> <span class="token operator">+</span> password <span class="token operator">+</span> <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p><code>SpringBoot</code>中对于异常处理提供了五种处理方式</p><h2 id="自定义错误页面"><a href="#自定义错误页面" class="headerlink" title="自定义错误页面"></a>自定义错误页面</h2><p>默认的处理异常的机制</p><p>一旦程序中出现了异常<code>SpringBoot</code>会向<code>/error</code>发送请求。在<code>springBoot</code>中提供了一个<br>叫<code>BasicExceptionController</code>类来处理<code>/error</code>请求，然后跳转到默认显示异常的页面来展示异常<br>信息</p><h3 id="修改Controller-5"><a href="#修改Controller-5" class="headerlink" title="修改Controller"></a>修改Controller</h3><p>浏览器请求<code>http://localhost:8080/show</code>和<code>http://localhost:8080/show2</code>发生了异常,并不会跳转到<code>index.html</code>页面，而是会有默认异常页面<code>error.html</code>来显示异常信息</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * SpringBoot处理异常方式一：自定义错误页面 * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        String str <span class="token operator">=</span> null<span class="token punctuation">;</span>        str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%BB%98%E8%AE%A4%E5%BC%82%E5%B8%B8%E9%A1%B5%E9%9D%A2.png" alt></p><h3 id="修改页面-2"><a href="#修改页面-2" class="headerlink" title="修改页面"></a>修改页面</h3><p>如果我们需要将所有的异常同一跳转到自定义的错误页面需要在<code>src/main/resources/templates</code>目录下创建<code>error.html</code>页面,名称必须叫<code>error.html</code></p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>错误提示页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    出错了，请与管理员联系。。。    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${exception}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h3><p>对所有异常都显示到异常页面<code>error.html</code>,不能处理对不同的异常跳转到不同的异常显示页面</p><h2 id="ExceptionHandle"><a href="#ExceptionHandle" class="headerlink" title="@ExceptionHandle"></a>@ExceptionHandle</h2><h3 id="修改Controller-6"><a href="#修改Controller-6" class="headerlink" title="修改Controller"></a>修改Controller</h3><p>使用<code>@ExceptionHandler</code>注解标注在方法上分别对不同的异常进行处理</p><p>使用<code>ModelAndView</code>可以指定异常信息及异常视图页面</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * SpringBoot处理异常方式二：@ExceptionHandle注解处理异常 * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        String str <span class="token operator">=</span> null<span class="token punctuation">;</span>        str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showInfo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * java.lang.ArithmeticException     * 该方法需要返回一个ModelAndView：目的是可以让我们封装异常信息以及视图的指定     * 参数Exception e:会将产生异常对象注入到方法中     */</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">{</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ArithmeticException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">arithmeticExceptionHandler</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>        ModelAndView mv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"error1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * java.lang.NullPointerException     * 该方法需要返回一个ModelAndView：目的是可以让我们封装异常信息以及视图的指定     * 参数Exception e:会将产生异常对象注入到方法中     */</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">{</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>NullPointerException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">nullPointerExceptionHandler</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>        ModelAndView mv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"error2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="修改页面-3"><a href="#修改页面-3" class="headerlink" title="修改页面"></a>修改页面</h3><p>进入<code>src/main/resources/templates</code>目录下，创建空指针和算术异常页面</p><h4 id="算术异常页面error1-html"><a href="#算术异常页面error1-html" class="headerlink" title="算术异常页面error1.html"></a>算术异常页面<code>error1.html</code></h4><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>错误提示页面-ArithmeticException<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    出错了，请与管理员联系。。。    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${error}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="空指针异常页面error2-html"><a href="#空指针异常页面error2-html" class="headerlink" title="空指针异常页面error2.html"></a>空指针异常页面<code>error2.html</code></h4><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>错误提示页面-NullPointerException<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    出错了，请与管理员联系。。。    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${error}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/@ExceptionHandle%E6%B3%A8%E8%A7%A3%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8.png" alt></p><h3 id="弊端-1"><a href="#弊端-1" class="headerlink" title="弊端"></a>弊端</h3><p>只有标记了<code>@ExceptionHandle</code>注解的<code>Controller</code>类才能处理跳转到自定义异常页面，而其它的<code>Controller</code>类中的方法则还是跳转到<code>springboot</code>默认机制的异常处理</p><h2 id="ControllerAdvice-ExceptionHandler"><a href="#ControllerAdvice-ExceptionHandler" class="headerlink" title="@ControllerAdvice+@ExceptionHandler"></a>@ControllerAdvice+@ExceptionHandler</h2><h3 id="修改Controller-7"><a href="#修改Controller-7" class="headerlink" title="修改Controller"></a>修改Controller</h3><p>全局异常控制类<code>GlobalException.java</code>,浏览器请求<code>Controller</code>，如果发生了异常，则会走全局异常控制类<code>GlobalException.java</code>,该类可以对不同的异常进行不同的处理(指定异常信息、视图页面)</p><p>该方式优于<code>@ExceptionHandle</code>注解处理异常</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 全局异常处理类 * * */</span><span class="token annotation punctuation">@ControllerAdvice</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalException</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * java.lang.ArithmeticException     * 该方法需要返回一个ModelAndView：目的是可以让我们封装异常信息以及视图的指定     * 参数Exception e:会将产生异常对象注入到方法中     */</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">{</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ArithmeticException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">arithmeticExceptionHandler</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>        ModelAndView mv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"error1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * java.lang.NullPointerException     * 该方法需要返回一个ModelAndView：目的是可以让我们封装异常信息以及视图的指定     * 参数Exception e:会将产生异常对象注入到方法中     */</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">{</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>NullPointerException<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">nullPointerExceptionHandler</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>        ModelAndView mv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"error2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/@ControllerAdvice+@ExceptionHandler%E6%B3%A8%E8%A7%A3%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8.png" alt></p><h2 id="SimpleMappingExceptionResolver"><a href="#SimpleMappingExceptionResolver" class="headerlink" title="SimpleMappingExceptionResolver"></a>SimpleMappingExceptionResolver</h2><p>比起<code>@ControllerAdvice+@ExceptionHandler</code>处理异常,通过<code>SimpleMappingExceptionResolver</code>做全局异常处理,方式更优雅,但是有个缺点即在异常页面不能输出异常信息</p><h3 id="修改Controller-8"><a href="#修改Controller-8" class="headerlink" title="修改Controller"></a>修改Controller</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 通过SimpleMappingExceptionResolver做全局异常处理 * * */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalException</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 该方法必须要有返回值。返回值类型必须是：SimpleMappingExceptionResolver     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> SimpleMappingExceptionResolver <span class="token function">getSimpleMappingExceptionResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        SimpleMappingExceptionResolver resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleMappingExceptionResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Properties mappings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * 参数一：异常的类型，注意必须是异常类型的全名         * 参数二：视图名称         */</span>        mappings<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"java.lang.ArithmeticException"</span><span class="token punctuation">,</span> <span class="token string">"error1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mappings<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"java.lang.NullPointerException"</span><span class="token punctuation">,</span><span class="token string">"error2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置异常与视图映射信息的</span>        resolver<span class="token punctuation">.</span><span class="token function">setExceptionMappings</span><span class="token punctuation">(</span>mappings<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h3><p>不能输出异常信息</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/SimpleMappingExceptionResolver%E7%B1%BB%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8.png" alt></p><h3 id="弊端-2"><a href="#弊端-2" class="headerlink" title="弊端"></a>弊端</h3><p>不能在异常页面输出异常信息，<code>SimpleMappingExceptionResolver</code>类处理异常只能针对不同的异常映射不同的视图逻辑</p><h2 id="自定义HandlerExceptionResolver"><a href="#自定义HandlerExceptionResolver" class="headerlink" title="自定义HandlerExceptionResolver"></a>自定义HandlerExceptionResolver</h2><h3 id="修改Controller-9"><a href="#修改Controller-9" class="headerlink" title="修改Controller"></a>修改Controller</h3><p>定义全局异常控制类必须要实现<code>HandlerExceptionResolver</code>接口,该种方式可以针对不同异常跳转不同的异常页面，并且在异常异页面可以输出异常信息，但是平常异常信息不会直接输出在异常页，避免异常数据被人窃取</p><p>推荐使用</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 通过实现HandlerExceptionResolver接口做全局异常处理 * * */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalException</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerExceptionResolver</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">resolveException</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span>            Exception ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ModelAndView mv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断不同异常类型，做不同视图跳转</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">ArithmeticException</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"error1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            mv<span class="token punctuation">.</span><span class="token function">setViewName</span><span class="token punctuation">(</span><span class="token string">"error2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        mv<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mv<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><h2 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 添加junit环境的jar包 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h2 id="创建dao"><a href="#创建dao" class="headerlink" title="创建dao"></a>创建dao</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token annotation punctuation">@Repository</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDaoImpl</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"insert into users....."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="创建service"><a href="#创建service" class="headerlink" title="创建service"></a>创建service</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UserDaoImpl<span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserDaoImpl userDaoImpl<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userDaoImpl<span class="token punctuation">.</span><span class="token function">saveUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="创建启动类-3"><a href="#创建启动类-3" class="headerlink" title="创建启动类"></a>创建启动类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="整合Junit做单元测试"><a href="#整合Junit做单元测试" class="headerlink" title="整合Junit做单元测试"></a>整合Junit做单元测试</h2><p><code>@RunWith</code>启动器<code>SpringJUnit4ClassRunner.class</code>让<code>junit</code>与<code>spring</code>环境进行整合</p><p><code>@SpringBootTest(classes={App.class})</code>说明当前类为<code>springBoot</code>的测试类加载<code>SpringBoot</code>启动类<code>App.class</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>App<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UserServiceImpl<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * SpringBoot测试类 *@RunWith:启动器  *SpringJUnit4ClassRunner.class：让junit与spring环境进行整合 * *@SpringBootTest(classes={App.class}) 1,当前类为springBoot的测试类 *@SpringBootTest(classes={App.class}) 2,加载SpringBoot启动类。启动springBoot * *junit与spring整合 @Contextconfiguartion("classpath:applicationContext.xml") */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes<span class="token operator">=</span><span class="token punctuation">{</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserServiceImpl userServiceImpl<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userServiceImpl<span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h1 id="热部署"><a href="#热部署" class="headerlink" title="热部署"></a>热部署</h1><h2 id="SpringLoader插件"><a href="#SpringLoader插件" class="headerlink" title="SpringLoader插件"></a>SpringLoader插件</h2><h3 id="创建controller"><a href="#创建controller" class="headerlink" title="创建controller"></a>创建controller</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * SpringBoot----SpringLoader * * */</span><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/show"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">showPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ShowPage......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="创建页面-1"><a href="#创建页面-1" class="headerlink" title="创建页面"></a>创建页面</h3><p>进入<code>/src/main/resources/templates</code>目录下，创建热部署前端测试页面</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hello....<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="创建启动类-4"><a href="#创建启动类-4" class="headerlink" title="创建启动类"></a>创建启动类</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h3><h4 id="方式一-1"><a href="#方式一-1" class="headerlink" title="方式一"></a>方式一</h4><h5 id="修改pom-xml-1"><a href="#修改pom-xml-1" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h5><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- springloader插件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springloaded<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span></code></pre><h5 id="maven命令启动"><a href="#maven命令启动" class="headerlink" title="maven命令启动"></a>maven命令启动</h5><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/maven%E5%91%BD%E4%BB%A4%E5%90%AF%E7%94%A8%E7%83%AD%E9%83%A8%E7%BD%B2.png" alt></p><h5 id="弊端-3"><a href="#弊端-3" class="headerlink" title="弊端"></a>弊端</h5><p>这种方式的缺点是<code>Springloader</code>热部署程序是在系统后台以进程的形式来运行,需要手动关闭该进程<br>对<code>Java</code>代码做部署处理,但是对页面无能为力</p><h4 id="方式二-1"><a href="#方式二-1" class="headerlink" title="方式二"></a>方式二</h4><p>在项目中直接使用<code>jar</code>包的方式</p><p>启动命令<code>VM Options</code>参数<code>-javaagent:.\lib\springloaded-1.2.5.RELEASE.jar -noverify</code></p><h2 id="DevTools工具"><a href="#DevTools工具" class="headerlink" title="DevTools工具"></a>DevTools工具</h2><h3 id="修改pom-xml-2"><a href="#修改pom-xml-2" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h3><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- DevTools的坐标 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="SpringLoader与DevTools的区别"><a href="#SpringLoader与DevTools的区别" class="headerlink" title="SpringLoader与DevTools的区别"></a>SpringLoader与DevTools的区别</h3><p><code>SpringLoader</code>在部署项目时使用的是热部署的方式</p><p><code>DevTools</code>在部署项目时使用的是重新部署的方式</p><h1 id="整合Ehcache"><a href="#整合Ehcache" class="headerlink" title="整合Ehcache"></a>整合Ehcache</h1><h2 id="修改pom-xml-3"><a href="#修改pom-xml-3" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- springBoot的启动器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- springBoot的启动器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- springBoot的启动器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-jpa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 测试工具的启动器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- mysql --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- druid连接池 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>druid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Spring Boot缓存支持启动器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-cache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Ehcache坐标 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>net.sf.ehcache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>ehcache<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><h2 id="创建Ehcache的配置文件"><a href="#创建Ehcache的配置文件" class="headerlink" title="创建Ehcache的配置文件"></a>创建Ehcache的配置文件</h2><p>进入<code>src/main/resources/</code>目录下,创建<code>ehcache.xml</code></p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ehcache</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xsi:</span>noNamespaceSchemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../config/ehcache.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>diskStore</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.io.tmpdir<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token comment" spellcheck="true">&lt;!--defaultCache:echcache的默认缓存策略  --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defaultCache</span>            <span class="token attr-name">maxElementsInMemory</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10000<span class="token punctuation">"</span></span>            <span class="token attr-name">eternal</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name">timeToIdleSeconds</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">timeToLiveSeconds</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">maxElementsOnDisk</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10000000<span class="token punctuation">"</span></span>            <span class="token attr-name">diskExpiryThreadIntervalSeconds</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">memoryStoreEvictionPolicy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>LRU<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistence</span> <span class="token attr-name">strategy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>localTempSwap<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defaultCache</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 自定义缓存策略 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users<span class="token punctuation">"</span></span>            <span class="token attr-name">maxElementsInMemory</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10000<span class="token punctuation">"</span></span>            <span class="token attr-name">eternal</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>            <span class="token attr-name">timeToIdleSeconds</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">timeToLiveSeconds</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">maxElementsOnDisk</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10000000<span class="token punctuation">"</span></span>            <span class="token attr-name">diskExpiryThreadIntervalSeconds</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>            <span class="token attr-name">memoryStoreEvictionPolicy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>LRU<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistence</span> <span class="token attr-name">strategy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>localTempSwap<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cache</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ehcache</span><span class="token punctuation">></span></span></code></pre><h2 id="修改application-properties文件"><a href="#修改application-properties文件" class="headerlink" title="修改application.properties文件"></a>修改application.properties文件</h2><p>进入<code>src/main/resources/</code>目录下,修改<code>application.properties</code></p><pre><code>spring.datasource.driverClassName=com.mysql.jdbc.Driverspring.datasource.url=jdbc:mysql://localhost:3306/ssmspring.datasource.username=rootspring.datasource.password=rootspring.datasource.type=com.alibaba.druid.pool.DruidDataSourcespring.jpa.hibernate.ddl-auto=updatespring.jpa.show-sql=truespring.cache.ehcache.cofnig=ehcache.xml</code></pre><h2 id="创建service-1"><a href="#创建service-1" class="headerlink" title="创建service"></a>创建service</h2><p>使用缓存策略<code>@Cacheable(value=&quot;users&quot;)</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Cacheable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UsersService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * UsersService接口实现类 * * */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UsersService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersRepository usersRepository<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">findUserAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token comment" spellcheck="true">//@Cacheable:对当前查询的对象做缓存处理</span>    <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"users"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Users <span class="token function">findUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Page<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">findUserByPage</span><span class="token punctuation">(</span>Pageable pageable<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="修改实体类-2"><a href="#修改实体类-2" class="headerlink" title="修改实体类"></a>修改实体类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Column<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Entity<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GeneratedValue<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>GenerationType<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Id<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>Table<span class="token punctuation">;</span><span class="token annotation punctuation">@Entity</span><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"t_users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy<span class="token operator">=</span>GenerationType<span class="token punctuation">.</span>IDENTITY<span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"id"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"name"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"age"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"address"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String address<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span>String address<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [id="</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">", address="</span> <span class="token operator">+</span> address <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="创建启动类-5"><a href="#创建启动类-5" class="headerlink" title="创建启动类"></a>创建启动类</h2><p>开启缓存使用<code>@EnableCaching</code>注解</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>EnableCaching<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableCaching</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>App<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UsersService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * UsersService测试 * * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes<span class="token operator">=</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersService usersService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindUserById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//第一次查询</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//第二次查询</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h2><p>后台输出执行了一次<code>sql</code>查询，第二条结果是从缓存中取出来的</p><pre><code>Hibernate: select users0_.id as id1_0_0_, users0_.address as address2_0_0_, users0_.age as age3_0_0_, users0_.name as name4_0_0_ from t_users users0_ where users0_.id=?Users [id=1, name=shenlibing, age=18, address=haikoou]Users [id=1, name=shenlibing, age=18, address=haikoou]2019-04-08 15:28:17.262  INFO 1320 --- [       Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Mon Apr 08 15:28:11 CST 2019]; root of context hierarchy2019-04-08 15:28:17.265  INFO 1320 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &#39;default&#39;2019-04-08 15:28:17.270  INFO 1320 --- [       Thread-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed</code></pre><h2 id="Cacheable"><a href="#Cacheable" class="headerlink" title="@Cacheable"></a>@Cacheable</h2><p>把方法的返回值添加到<code>Ehcache</code>中做缓存</p><p><code>Value</code>属性：指定一个<code>Ehcache</code>配置文件中的缓存策略，如果么有给定<code>value</code>，则<br>表示使用默认的缓存策略</p><p><code>Key</code>属性：给存储的值起个名称。在查询时如果有名称相同的，那么则知己从缓存中将<br>数据返回</p><h3 id="修改service"><a href="#修改service" class="headerlink" title="修改service"></a>修改service</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Cacheable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UsersRepository<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UsersService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * UsersService接口实现类 * * */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UsersService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersRepository usersRepository<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">findUserAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token comment" spellcheck="true">//@Cacheable:对当前查询的对象做缓存处理</span>    <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"users"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Users <span class="token function">findUserById</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"users"</span><span class="token punctuation">,</span>key<span class="token operator">=</span><span class="token string">"#pageable.pageSize"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> Page<span class="token operator">&lt;</span>Users<span class="token operator">></span> <span class="token function">findUserByPage</span><span class="token punctuation">(</span>Pageable pageable<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="修改测试"><a href="#修改测试" class="headerlink" title="修改测试"></a>修改测试</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>App<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UsersService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * UsersService测试 * * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes<span class="token operator">=</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersService usersService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindUserByPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Pageable pageable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageRequest</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//第一次查询</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserByPage</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTotalElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//第二次查询</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserByPage</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTotalElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//第三次查询</span>        pageable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageRequest</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserByPage</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTotalElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h3><p>后台输出执行了一次<code>sql</code>查询，后面两次是从缓存取出来的</p><p>因为<code>service</code>层使用了缓存策略<code>@Cacheable(value=&quot;users&quot;,key=&quot;#pageable.pageSize&quot;)</code>且指定了<code>key</code>为分页的每页条数<br>在测试查询的时候虽然第三次查询重新<code>new PageRequest(1, 2)</code>，但是<code>size</code>还是为2，所以还是从缓存中取</p><pre><code>Hibernate: select users0_.id as id1_0_, users0_.address as address2_0_, users0_.age as age3_0_, users0_.name as name4_0_ from t_users users0_ limit ?Hibernate: select count(users0_.id) as col_0_0_ from t_users users0_5552019-04-08 15:45:08.451  INFO 20352 --- [       Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@192c3f1e: startup date [Mon Apr 08 15:45:02 CST 2019]; root of context hierarchy2019-04-08 15:45:08.457  INFO 20352 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &#39;default&#39;2019-04-08 15:45:08.464  INFO 20352 --- [       Thread-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed</code></pre><h2 id="CacheEvict"><a href="#CacheEvict" class="headerlink" title="@CacheEvict"></a>@CacheEvict</h2><p>清除缓存,在对频繁查询的数据可以从缓存中取,然而一旦有新的数据写入数据库,必须重新刷新缓存,即清除缓存</p><h3 id="修改service-1"><a href="#修改service-1" class="headerlink" title="修改service"></a>修改service</h3><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token comment" spellcheck="true">//@CacheEvict(value="users",allEntries=true) 清除缓存中以users缓存策略缓存的对象</span><span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"users"</span><span class="token punctuation">,</span>allEntries<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveUsers</span><span class="token punctuation">(</span>Users users<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>usersRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="修改测试-1"><a href="#修改测试-1" class="headerlink" title="修改测试"></a>修改测试</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>PageRequest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Pageable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>App<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span>UsersService<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * UsersService测试 * * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes<span class="token operator">=</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsersServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UsersService usersService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//第一次查询</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">"南京"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"朱七"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">saveUsers</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//第二次查询</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>usersService<span class="token punctuation">.</span><span class="token function">findUserAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>效果</p><p>后台输出第一次查询和第二次查询之间插入了一条新数据，第一次查询结果是5条，在插入数据方法<code>saveUsers</code>上开启了清除缓存，所以插入数据之后再一次查询的数据也就同步过来更新为6条</p><pre><code>Hibernate: select users0_.id as id1_0_, users0_.address as address2_0_, users0_.age as age3_0_, users0_.name as name4_0_ from t_users users0_5Hibernate: insert into t_users (address, age, name) values (?, ?, ?)Hibernate: select users0_.id as id1_0_, users0_.address as address2_0_, users0_.age as age3_0_, users0_.name as name4_0_ from t_users users0_62019-04-08 15:54:13.046  INFO 19660 --- [       Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@192c3f1e: startup date [Mon Apr 08 15:54:08 CST 2019]; root of context hierarchy2019-04-08 15:54:13.049  INFO 19660 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit &#39;default&#39;2019-04-08 15:54:13.053  INFO 19660 --- [       Thread-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed</code></pre><h1 id="整合Redis"><a href="#整合Redis" class="headerlink" title="整合Redis"></a>整合Redis</h1><h2 id="修改pom-xml-4"><a href="#修改pom-xml-4" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- Spring Data Redis的启动器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h2 id="创建Redis配置类"><a href="#创建Redis配置类" class="headerlink" title="创建Redis配置类"></a>创建Redis配置类</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>JedisConnectionFactory<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>StringRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>JedisPoolConfig<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 完成对Redis的整合的一些配置 * * */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisConfig</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 1.创建JedisPoolConfig对象。在该对象中完成一些链接池配置     *     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> JedisPoolConfig <span class="token function">jedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        JedisPoolConfig config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//最大空闲数</span>        config<span class="token punctuation">.</span><span class="token function">setMaxIdle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//最小空闲数</span>        config<span class="token punctuation">.</span><span class="token function">setMinIdle</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//最大链接数</span>        config<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> config<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 2.创建JedisConnectionFactory：配置redis链接信息     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> JedisConnectionFactory <span class="token function">jedisConnectionFactory</span><span class="token punctuation">(</span>JedisPoolConfig config<span class="token punctuation">)</span><span class="token punctuation">{</span>        JedisConnectionFactory factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关联链接池的配置对象</span>        factory<span class="token punctuation">.</span><span class="token function">setPoolConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置链接Redis的信息</span>        <span class="token comment" spellcheck="true">//主机地址</span>        factory<span class="token punctuation">.</span><span class="token function">setHostName</span><span class="token punctuation">(</span><span class="token string">"192.168.1.104"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//端口</span>        factory<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> factory<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 3.创建RedisTemplate:用于执行Redis操作的方法     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span>JedisConnectionFactory factory<span class="token punctuation">)</span><span class="token punctuation">{</span>        RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisTemplate</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关联</span>        template<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为key设置序列化器</span>        template<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为value设置序列化器</span>        template<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> template<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="创建测试"><a href="#创建测试" class="headerlink" title="创建测试"></a>创建测试</h2><h3 id="修改pom-xml-5"><a href="#修改pom-xml-5" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h3><p>添加测试启动依赖坐标</p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- Test的启动器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>App<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Spring Data Redis测试 * * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes<span class="token operator">=</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加一个字符串     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span> <span class="token string">"北京尚学堂"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取一个字符串     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        String value <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="提取redis的配置信息"><a href="#提取redis的配置信息" class="headerlink" title="提取redis的配置信息"></a>提取redis的配置信息</h2><h3 id="修改application-properties"><a href="#修改application-properties" class="headerlink" title="修改application.properties"></a>修改application.properties</h3><p>进入<code>src/main/resource/</code>目录,修改<code>application.properties</code></p><pre><code>spring.redis.pool.max-idle=10spring.redis.pool.min-idle=5spring.redis.pool.max-total=20spring.redis.hostName=192.168.1.104spring.redis.port=6379</code></pre><h3 id="修改redis配置类"><a href="#修改redis配置类" class="headerlink" title="修改redis配置类"></a>修改redis配置类</h3><p>将前缀相同的内容创建一个实体使用<code>@ConfigurationProperties</code>注解</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>ConfigurationProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>JedisConnectionFactory<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>StringRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>JedisPoolConfig<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 完成对Redis的整合的一些配置 * * */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisConfig</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 1.创建JedisPoolConfig对象。在该对象中完成一些链接池配置     * @ConfigurationProperties:会将前缀相同的内容创建一个实体。     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">"spring.redis.pool"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> JedisPoolConfig <span class="token function">jedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        JedisPoolConfig config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*//最大空闲数        config.setMaxIdle(10);        //最小空闲数        config.setMinIdle(5);        //最大链接数        config.setMaxTotal(20);*/</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"默认值："</span><span class="token operator">+</span>config<span class="token punctuation">.</span><span class="token function">getMaxIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"默认值："</span><span class="token operator">+</span>config<span class="token punctuation">.</span><span class="token function">getMinIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"默认值："</span><span class="token operator">+</span>config<span class="token punctuation">.</span><span class="token function">getMaxTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> config<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 2.创建JedisConnectionFactory：配置redis链接信息     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">"spring.redis"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> JedisConnectionFactory <span class="token function">jedisConnectionFactory</span><span class="token punctuation">(</span>JedisPoolConfig config<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"配置完毕："</span><span class="token operator">+</span>config<span class="token punctuation">.</span><span class="token function">getMaxIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"配置完毕："</span><span class="token operator">+</span>config<span class="token punctuation">.</span><span class="token function">getMinIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"配置完毕："</span><span class="token operator">+</span>config<span class="token punctuation">.</span><span class="token function">getMaxTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        JedisConnectionFactory factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关联链接池的配置对象</span>        factory<span class="token punctuation">.</span><span class="token function">setPoolConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置链接Redis的信息</span>        <span class="token comment" spellcheck="true">//主机地址</span>        <span class="token comment" spellcheck="true">/*factory.setHostName("192.168.1.104");        //端口        factory.setPort(6379);*/</span>        <span class="token keyword">return</span> factory<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 3.创建RedisTemplate:用于执行Redis操作的方法     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>Object<span class="token operator">></span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span>JedisConnectionFactory factory<span class="token punctuation">)</span><span class="token punctuation">{</span>        RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisTemplate</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//关联</span>        template<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为key设置序列化器</span>        template<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为value设置序列化器</span>        template<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> template<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h3><pre><code>2019-04-08 16:24:36.624  INFO 9340 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!默认值：8默认值：0默认值：8配置完毕：10配置完毕：5配置完毕：202019-04-08 16:24:38.113  INFO 9340 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@79d8407f: startup date [Mon Apr 08 16:24:35 CST 2019]; root of context hierarchy2019-04-08 16:24:38.184  INFO 9340 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;{[/error]}&quot; onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)2019-04-08 16:24:38.185  INFO 9340 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;{[/error],produces=[text/html]}&quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)2019-04-08 16:24:38.221  INFO 9340 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:24:38.221  INFO 9340 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:24:38.269  INFO 9340 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:24:38.317  WARN 9340 --- [           main] org.thymeleaf.templatemode.TemplateMode  : [THYMELEAF][main] Template Mode &#39;HTML5&#39; is deprecated. Using Template Mode &#39;HTML&#39; instead.2019-04-08 16:24:38.931  INFO 9340 --- [           main] com.bjsxt.test.RedisTest                 : Started RedisTest in 4.089 seconds (JVM running for 5.112)北京尚学堂2019-04-08 16:24:39.039  INFO 9340 --- [       Thread-2] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@79d8407f: startup date [Mon Apr 08 16:24:35 CST 2019]; root of context hierarchy</code></pre><h2 id="存储实体对象"><a href="#存储实体对象" class="headerlink" title="存储实体对象"></a>存储实体对象</h2><h3 id="创建实体"><a href="#创建实体" class="headerlink" title="创建实体"></a>创建实体</h3><p>实体必须实现序列化接口</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Users</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Users [id="</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="修改测试-2"><a href="#修改测试-2" class="headerlink" title="修改测试"></a>修改测试</h3><p>保存实体前时必须重新设置序列化器</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>JdkSerializationRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>App<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Spring Data Redis测试 * * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes<span class="token operator">=</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 添加Users对象     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSetUesrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三丰"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//重新设置序列化器</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JdkSerializationRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 取Users对象     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGetUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//重新设置序列化器</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JdkSerializationRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Users users <span class="token operator">=</span> <span class="token punctuation">(</span>Users<span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a>效果</h3><pre><code>2019-04-08 16:29:32.045  INFO 12720 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!默认值：8默认值：0默认值：8配置完毕：10配置完毕：5配置完毕：202019-04-08 16:29:33.400  INFO 12720 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1e66f1f5: startup date [Mon Apr 08 16:29:31 CST 2019]; root of context hierarchy2019-04-08 16:29:33.477  INFO 12720 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;{[/error]}&quot; onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)2019-04-08 16:29:33.478  INFO 12720 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;{[/error],produces=[text/html]}&quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)2019-04-08 16:29:33.518  INFO 12720 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:29:33.518  INFO 12720 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:29:33.564  INFO 12720 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:29:33.607  WARN 12720 --- [           main] org.thymeleaf.templatemode.TemplateMode  : [THYMELEAF][main] Template Mode &#39;HTML5&#39; is deprecated. Using Template Mode &#39;HTML&#39; instead.2019-04-08 16:29:34.223  INFO 12720 --- [           main] com.bjsxt.test.RedisTest                 : Started RedisTest in 3.616 seconds (JVM running for 4.489)Users [id=1, name=张三丰, age=20]2019-04-08 16:29:34.352  INFO 12720 --- [       Thread-2] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@1e66f1f5: startup date [Mon Apr 08 16:29:31 CST 2019]; root of context hierarchy</code></pre><h3 id="JdkSerializationRedisSerializer弊端"><a href="#JdkSerializationRedisSerializer弊端" class="headerlink" title="JdkSerializationRedisSerializer弊端"></a>JdkSerializationRedisSerializer弊端</h3><p>实体对象通过<code>JdkSerializationRedisSerializer</code>序列化后存到<code>Redis</code>中占用空间大</p><h2 id="JSON格式存储实体对象"><a href="#JSON格式存储实体对象" class="headerlink" title="JSON格式存储实体对象"></a>JSON格式存储实体对象</h2><p><strong>推荐使用</strong></p><h3 id="修改测试-3"><a href="#修改测试-3" class="headerlink" title="修改测试"></a>修改测试</h3><p>重置序列化<code>Jackson2JsonRedisSerializer</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>Jackson2JsonRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span>JdkSerializationRedisSerializer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringJUnit4ClassRunner<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>App<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>bjsxt<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Users<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Spring Data Redis测试 * * */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringJUnit4ClassRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes<span class="token operator">=</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 基于JSON格式存Users对象     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSetUsersUseJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Users users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"李四丰"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        users<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"users_json"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 基于JSON格式取Users对象     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGetUseJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Users users <span class="token operator">=</span> <span class="token punctuation">(</span>Users<span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"users_json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="效果-8"><a href="#效果-8" class="headerlink" title="效果"></a>效果</h3><pre><code>2019-04-08 16:41:53.694  INFO 19280 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!默认值：8默认值：0默认值：8配置完毕：10配置完毕：5配置完毕：202019-04-08 16:41:55.094  INFO 19280 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1e66f1f5: startup date [Mon Apr 08 16:41:52 CST 2019]; root of context hierarchy2019-04-08 16:41:55.177  INFO 19280 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;{[/error]}&quot; onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)2019-04-08 16:41:55.178  INFO 19280 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;{[/error],produces=[text/html]}&quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)2019-04-08 16:41:55.216  INFO 19280 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:41:55.216  INFO 19280 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:41:55.259  INFO 19280 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]2019-04-08 16:41:55.311  WARN 19280 --- [           main] org.thymeleaf.templatemode.TemplateMode  : [THYMELEAF][main] Template Mode &#39;HTML5&#39; is deprecated. Using Template Mode &#39;HTML&#39; instead.2019-04-08 16:41:55.957  INFO 19280 --- [           main] com.bjsxt.test.RedisTest                 : Started RedisTest in 3.767 seconds (JVM running for 4.678)Users [id=1, name=李四丰, age=20]2019-04-08 16:41:56.141  INFO 19280 --- [       Thread-2] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@1e66f1f5: startup date [Mon Apr 08 16:41:52 CST 2019]; root of context hierarchy</code></pre>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat集群与Redis分布式</title>
      <link href="/2019/03/25/java-qi-ye-ji-dian-shang-xiang-mu-jia-gou-yan-jin-zhi-lu-tomcat-ji-qun-yu-redis-fen-bu-shi/"/>
      <url>/2019/03/25/java-qi-ye-ji-dian-shang-xiang-mu-jia-gou-yan-jin-zhi-lu-tomcat-ji-qun-yu-redis-fen-bu-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="Lombok原理及使用"><a href="#Lombok原理及使用" class="headerlink" title="Lombok原理及使用"></a>Lombok原理及使用</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://projectlombok.org/" target="_blank" rel="noopener">官网</a></p><p><a href="https://plugins.jetbrains.com/files/6317/53293/lombok-plugin-0.23-2018.3.zip?updateId=53293&pluginId=6317&family=intellij" target="_blank" rel="noopener">插件下载</a></p><h3 id="IDEA安装Lombok插件"><a href="#IDEA安装Lombok插件" class="headerlink" title="IDEA安装Lombok插件"></a>IDEA安装Lombok插件</h3><p>Add the <strong>Lombok IntelliJ plugin</strong> to add lombok support for IntelliJ:<br>Go to <strong>File</strong> &gt; <strong>Settings</strong> &gt; <strong>Plugins</strong><br>Click on <strong>Browse repositories</strong>…<br>Search for <strong>Lombok Plugin</strong><br>Click on <strong>Install plugin</strong><br>Restart IntelliJ IDEA</p><h3 id="Maven引入Lombok"><a href="#Maven引入Lombok" class="headerlink" title="Maven引入Lombok"></a>Maven引入Lombok</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></code></pre><h3 id="Java-Decompiler"><a href="#Java-Decompiler" class="headerlink" title="Java Decompiler"></a>Java Decompiler</h3><p><a href="http://java-decompiler.github.io/" target="_blank" rel="noopener">官网</a></p><p><a href="https://github-production-release-asset-2e65be.s3.amazonaws.com/32844456/ce9b5e00-42a0-11e9-9001-1d805c82cb1e?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20190325%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20190325T025102Z&X-Amz-Expires=300&X-Amz-Signature=6b28f4eb01b049712bf9b7fc4d2ebf7dc0c55f83ceb82e1159994c7c9f8c37a3&X-Amz-SignedHeaders=host&actor_id=26431704&response-content-disposition=attachment%3B%20filename%3Djd-gui-windows-1.4.1.zip&response-content-type=application%2Foctet-stream" target="_blank" rel="noopener">下载</a></p><h3 id="Lombok验证"><a href="#Lombok验证" class="headerlink" title="Lombok验证"></a>Lombok验证</h3><p>通过Java Decompiler验证class文件</p><h3 id="Lombok原理"><a href="#Lombok原理" class="headerlink" title="Lombok原理"></a>Lombok原理</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Lombok%E5%8E%9F%E7%90%86.png" alt></p><h2 id="Maven环境隔离"><a href="#Maven环境隔离" class="headerlink" title="Maven环境隔离"></a>Maven环境隔离</h2><h3 id="项目环境"><a href="#项目环境" class="headerlink" title="项目环境"></a>项目环境</h3><p>本地开发环境(Local)</p><p>开发环境(Dev)</p><p>测试环境(Beta)</p><p>线上环境(Prod)</p><h3 id="目录初始化"><a href="#目录初始化" class="headerlink" title="目录初始化"></a>目录初始化</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Maven%E7%8E%AF%E5%A2%83%E9%9A%94%E7%A6%BB%E7%9B%AE%E5%BD%95%E5%88%9D%E5%A7%8B%E5%8C%96.png" alt></p><h3 id="配置pom-xml"><a href="#配置pom-xml" class="headerlink" title="配置pom.xml"></a>配置pom.xml</h3><p><code>build</code>节点中的<code>resources</code>中增加<code>resource</code>节点</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources.${deploy.type}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>*.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span></code></pre><p><code>project</code>节点中增加<code>profiles</code>节点</p><pre class=" language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>deploy.type</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>deploy.type</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>beta<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>deploy.type</span><span class="token punctuation">></span></span>beta<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>deploy.type</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>deploy.type</span><span class="token punctuation">></span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>deploy.type</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span></code></pre><h3 id="IDEA中设置默认环境"><a href="#IDEA中设置默认环境" class="headerlink" title="IDEA中设置默认环境"></a>IDEA中设置默认环境</h3><p>在IDEA右侧<code>Maven Projects</code>,选中本地开发环境对应的的环境，点击右下角出现<code>import changes</code>进行更新</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Maven%E7%8E%AF%E5%A2%83%E9%9A%94%E7%A6%BBIDEA%E4%B8%AD%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E7%8E%AF%E5%A2%83.png" alt></p><p>这里设置的默认环境作用于IDEA中配置的Tomcat启动时发布部署的<code>war</code>包</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Maven%E7%8E%AF%E5%A2%83%E9%9A%94%E7%A6%BBIDEA%E4%B8%AD%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E7%8E%AF%E5%A2%832.png" alt></p><h3 id="编译打包命令"><a href="#编译打包命令" class="headerlink" title="编译打包命令"></a>编译打包命令</h3><h4 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h4><p>手动打<code>war</code>包</p><pre><code>mvn clean package -Dmaven.test.skip=true -Pdev</code></pre><h4 id="线上环境"><a href="#线上环境" class="headerlink" title="线上环境"></a>线上环境</h4><pre><code>mvn clean package -Dmaven.test.skip=true -Pprod</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Maven%E7%8E%AF%E5%A2%83%E9%9A%94%E7%A6%BB%E9%AA%8C%E8%AF%812.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Maven%E7%8E%AF%E5%A2%83%E9%9A%94%E7%A6%BB%E9%AA%8C%E8%AF%81.png" alt></p><h2 id="Tomcat集群搭建"><a href="#Tomcat集群搭建" class="headerlink" title="Tomcat集群搭建"></a>Tomcat集群搭建</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>通过Nginx负载均衡进行请求转发</p><h3 id="单机部署多应用"><a href="#单机部署多应用" class="headerlink" title="单机部署多应用"></a>单机部署多应用</h3><p>单机部署多个Tomcat，第一个Tomcat不变,修改第二个Tomcat</p><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>修改/etc/profile增加Tomcat环境变量</p><pre><code>#tomcatexport CATALINA_BASE=/opt/module/tomcat1export CATALINA_HOME=/opt/module/tomcat1export TOMCAT_HOME=/opt/module/tomcat1export CATALINA_BASE_2=/opt/module/tomcat2export CATALINA_HOME_2=/opt/module/tomcat2export TOMCAT_HOME_2=/opt/module/tomcat2#export PATH=$PATH:$CATALINA_HOME/bin</code></pre><p><code>source /etc/profile</code>使配置文件立即生效</p><h4 id="编辑catalina-sh"><a href="#编辑catalina-sh" class="headerlink" title="编辑catalina.sh"></a>编辑<code>catalina.sh</code></h4><p>进入<code>/opt/module/tomcat2/bin</code>目录,编辑<code>catalina.sh</code></p><pre><code># OS specific support.  $var _must_ be set to either true or false.export CATALINA_BASE=$CATALINA_BASE_2export CATALINA_HOME=$CATALINA_HOME_2</code></pre><h4 id="编辑server-xml"><a href="#编辑server-xml" class="headerlink" title="编辑server.xml"></a>编辑<code>server.xml</code></h4><p>进入<code>/opt/module/tomcat2/conf</code>目录，编辑<code>server.xml</code>，修改3个端口，为了方便，每个端口号加上1000</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%BF%AE%E6%94%B9server.xml.png" alt><br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%BF%AE%E6%94%B9server.xml2.png" alt><br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%BF%AE%E6%94%B9server.xml3.png" alt></p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>启动<code>Tomcat2</code></p><pre><code>[root@192 bin]# pwd/opt/module/tomcat2/bin[root@192 bin]# ./startup.sh Using CATALINA_BASE:   /opt/module/tomcat2Using CATALINA_HOME:   /opt/module/tomcat2Using CATALINA_TMPDIR: /opt/module/tomcat2/tempUsing JRE_HOME:        /usr/java/jdk1.7.0_80Using CLASSPATH:       /opt/module/tomcat2/bin/bootstrap.jar:/opt/module/tomcat2/bin/tomcat-juli.jarTomcat started.</code></pre><p>启动<code>Tomcat1</code></p><pre><code>[root@192 bin]# pwd/opt/module/tomcat1/bin[root@192 bin]# ./startup.sh Using CATALINA_BASE:   /opt/module/tomcat1Using CATALINA_HOME:   /opt/module/tomcat1Using CATALINA_TMPDIR: /opt/module/tomcat1/tempUsing JRE_HOME:        /usr/java/jdk1.7.0_80Using CLASSPATH:       /opt/module/tomcat1/bin/bootstrap.jar:/opt/module/tomcat1/bin/tomcat-juli.jarTomcat started.</code></pre><h3 id="多机部署多应用"><a href="#多机部署多应用" class="headerlink" title="多机部署多应用"></a>多机部署多应用</h3><p>多个服务器并且每个服务器只安装一个<code>Tomcat</code>，要保证它们之间的网络是互通的，方可集群，<code>Nginx</code>在任意一台服务器上即可，也可单独把<code>Nginx</code>服务独立出来一台。</p><h2 id="Nginx负载均衡实现"><a href="#Nginx负载均衡实现" class="headerlink" title="Nginx负载均衡实现"></a>Nginx负载均衡实现</h2><h3 id="负载均衡常用策略"><a href="#负载均衡常用策略" class="headerlink" title="负载均衡常用策略"></a>负载均衡常用策略</h3><h4 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h4><p>默认<br>优点：实现简单<br>缺点：不考虑每台服务器处理能力</p><h4 id="权重"><a href="#权重" class="headerlink" title="权重"></a>权重</h4><p>优点：<br>考虑了每台服务器处理能力的不同，<code>weight</code>默认是1</p><h4 id="ip-hash"><a href="#ip-hash" class="headerlink" title="ip hash"></a>ip hash</h4><p>优点：<br>能实现同一个用户访问同一个服务器,可以不改变现有技术架构，直接实现横向拓展<br>缺点：<br>导致服务器请求(负载)不平均(完全依赖<code>ip hash</code>的结果)<br>在<code>ip</code>变化的环境下无法服务</p><h4 id="url-hash-第三方"><a href="#url-hash-第三方" class="headerlink" title="url hash(第三方)"></a>url hash(第三方)</h4><p>优点：<br>能实现同一个服务器访问同一个服务器<br>缺点：<br>根据<code>url hash</code>分配请求会不平均，请求频繁的url会请求到同一个服务器上的</p><h4 id="fair-第三方"><a href="#fair-第三方" class="headerlink" title="fair(第三方)"></a>fair(第三方)</h4><p>缺点：<br>按后端服务器的响应时间来分配请求，响应时间短的优先分配</p><h3 id="负载均衡策略权重配置"><a href="#负载均衡策略权重配置" class="headerlink" title="负载均衡策略权重配置"></a>负载均衡策略权重配置</h3><p>编辑<code>/usr/local/nginx/conf/nginx.conf</code>文件，追加</p><pre><code> ###########################vhost##############################################    include vhost/*.conf;</code></pre><p>在<code>/usr/local/nginx/conf</code>目录下，新建<code>vhost</code>文件夹</p><p>在<code>/usr/local/nginx/conf/vhost</code>目录下，编辑<code>www.mytest.com.conf</code>配置文件</p><pre><code>[root@192 sbin]# cat ../conf/vhost/www.mytest.com.confupstream 127.0.0.1{    server 127.0.0.1:8080 weight=1;    server 127.0.0.1:9080 weight=2;}#Start www.mytest.comserver {    listen 80;    server_name  www.mytest.com;    access_log  /usr/local/nginx/logs/access.log combined;    index  index.html index.htm index.php;    # send request back to apach    location / {         proxy_pass http://127.0.0.1;    }}</code></pre><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><p>替换<code>/opt/module/tomcat2/webapps/ROOT</code>目录下<code>tomcat.png</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%AA%8C%E8%AF%81%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5%E6%9D%83%E9%87%8D.png" alt></p><p>访问<code>www.mytest.com</code>,请求分流一下打到<code>Tomcat1</code>，一下打到<code>Tomcat2</code>，<code>Nginx</code>负载均衡策略权重<code>Tomcat2</code>配置<strong><code>weight=2</code></strong>，Tomcat1配置<strong><code>weight=1</code></strong>，所以访问到<code>Tomcat2</code>的概率是<code>Tomcat1</code>的2倍</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%AA%8C%E8%AF%81%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5%E6%9D%83%E9%87%8D2.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%AA%8C%E8%AF%81%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5%E6%9D%83%E9%87%8D3.png" alt></p><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><h4 id="Session登录信息存储及读取的问题"><a href="#Session登录信息存储及读取的问题" class="headerlink" title="Session登录信息存储及读取的问题"></a><code>Session</code>登录信息存储及读取的问题</h4><h5 id="轮询-1"><a href="#轮询-1" class="headerlink" title="轮询"></a>轮询</h5><p>登录的时候登录了A服务器，session信息存储到A服务器上了<br>Nginx负载均衡策略使用<strong>轮询</strong>或者<strong>最小连接</strong>会导致，第一次访问A服务器，第二次可能访问到B服务器，这个时候存储在A服务器上的session信息在B服务器上读取不到。</p><h5 id="ip-hash-1"><a href="#ip-hash-1" class="headerlink" title="ip hash"></a>ip hash</h5><p>Nginx负载均衡策略使用<strong><code>ip hash</code></strong>，那么登录信息还可以从A服务器上访问，但是这个有可能造成某些服务器压力过大，某些服务器又没有什么压力，这个时候压力过大的机器(包括网卡带宽)有可能成为瓶颈，并且请求不够分散。</p><h4 id="服务器定时任务并发的问题"><a href="#服务器定时任务并发的问题" class="headerlink" title="服务器定时任务并发的问题"></a>服务器定时任务并发的问题</h4><p>假设有定时关单的<code>Job</code>，单个<code>Tomcat</code>没有任何问题，但是在集群环境下，<code>Spring Schedule</code>定时执行的时候，会都一起执行，会导致数据错乱和资源浪费</p><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>高性能的<code>key-value</code>数据库</p><p>内存数据库，支持数据持久化</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="http://download.redis.io/releases/" target="_blank" rel="noopener">linux下载redis-2.8.0.tar.gz</a><br><a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="noopener">windows</a></p><p>解压</p><pre><code>[root@192 soft]# tar -zxvf redis-2.8.0.tar.gz -C /opt/module/</code></pre><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><h4 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h4><h5 id="直接启动"><a href="#直接启动" class="headerlink" title="直接启动"></a>直接启动</h5><p>默认是6379端口</p><pre><code>[root@192 src]# pwd/opt/module/redis-2.8.0/src[root@192 src]# ./redis-server [6448] 26 Mar 18:30:37.044 # Warning: no config file specified, using the default config. In order to specify a config file use ./redis-server /path/to/redis.conf[6448] 26 Mar 18:30:37.045 * Max number of open files set to 10032                _._                                                             _.-``__ &#39;&#39;-._                                                   _.-``    `.  `_.  &#39;&#39;-._           Redis 2.8.0 (00000000/0) 64 bit  .-`` .-```.  ```\/    _.,_ &#39;&#39;-._                                    (    &#39;      ,       .-`  | `,    )     Running in stand alone mode |`-._`-...-` __...-.``-._|&#39;` _.-&#39;|     Port: 6379 |    `-._   `._    /     _.-&#39;    |     PID: 6448  `-._    `-._  `-./  _.-&#39;    _.-&#39;                                    |`-._`-._    `-.__.-&#39;    _.-&#39;_.-&#39;|                                   |    `-._`-._        _.-&#39;_.-&#39;    |           http://redis.io          `-._    `-._`-.__.-&#39;_.-&#39;    _.-&#39;                                    |`-._`-._    `-.__.-&#39;    _.-&#39;_.-&#39;|                                   |    `-._`-._        _.-&#39;_.-&#39;    |                                    `-._    `-._`-.__.-&#39;_.-&#39;    _.-&#39;                                         `-._    `-.__.-&#39;    _.-&#39;                                                 `-._        _.-&#39;                                                         `-.__.-&#39;                                               [6448] 26 Mar 18:30:37.046 # Server started, Redis version 2.8.0</code></pre><h5 id="指定端口启动"><a href="#指定端口启动" class="headerlink" title="指定端口启动"></a>指定端口启动</h5><pre><code>[root@192 src]# ./redis-server --port 6380[6457] 26 Mar 18:32:55.317 * Max number of open files set to 10032                _._                                                             _.-``__ &#39;&#39;-._                                                   _.-``    `.  `_.  &#39;&#39;-._           Redis 2.8.0 (00000000/0) 64 bit  .-`` .-```.  ```\/    _.,_ &#39;&#39;-._                                    (    &#39;      ,       .-`  | `,    )     Running in stand alone mode |`-._`-...-` __...-.``-._|&#39;` _.-&#39;|     Port: 6380 |    `-._   `._    /     _.-&#39;    |     PID: 6457  `-._    `-._  `-./  _.-&#39;    _.-&#39;                                    |`-._`-._    `-.__.-&#39;    _.-&#39;_.-&#39;|                                   |    `-._`-._        _.-&#39;_.-&#39;    |           http://redis.io          `-._    `-._`-.__.-&#39;_.-&#39;    _.-&#39;                                    |`-._`-._    `-.__.-&#39;    _.-&#39;_.-&#39;|                                   |    `-._`-._        _.-&#39;_.-&#39;    |                                    `-._    `-._`-.__.-&#39;_.-&#39;    _.-&#39;                                         `-._    `-.__.-&#39;    _.-&#39;                                                 `-._        _.-&#39;                                                         `-.__.-&#39;                                               [6457] 26 Mar 18:32:55.318 # Server started, Redis version 2.8.0</code></pre><h5 id="指定配置文件配置启动"><a href="#指定配置文件配置启动" class="headerlink" title="指定配置文件配置启动"></a>指定配置文件配置启动</h5><p>配置文件修改端口,登录密码</p><pre><code>[root@192 redis-2.8.0]# pwd/opt/module/redis-2.8.0[root@192 redis-2.8.0]# vim redis.conf </code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Redis%E6%8C%87%E5%AE%9A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%AF%E5%8A%A8.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Redis%E6%8C%87%E5%AE%9A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%AF%E5%8A%A82.png" alt></p><pre><code>[root@192 src]# ./redis-server ../redis.conf [6468] 26 Mar 18:37:12.957 * Max number of open files set to 10032                _._                                                             _.-``__ &#39;&#39;-._                                                   _.-``    `.  `_.  &#39;&#39;-._           Redis 2.8.0 (00000000/0) 64 bit  .-`` .-```.  ```\/    _.,_ &#39;&#39;-._                                    (    &#39;      ,       .-`  | `,    )     Running in stand alone mode |`-._`-...-` __...-.``-._|&#39;` _.-&#39;|     Port: 6380 |    `-._   `._    /     _.-&#39;    |     PID: 6468  `-._    `-._  `-./  _.-&#39;    _.-&#39;                                    |`-._`-._    `-.__.-&#39;    _.-&#39;_.-&#39;|                                   |    `-._`-._        _.-&#39;_.-&#39;    |           http://redis.io          `-._    `-._`-.__.-&#39;_.-&#39;    _.-&#39;                                    |`-._`-._    `-.__.-&#39;    _.-&#39;_.-&#39;|                                   |    `-._`-._        _.-&#39;_.-&#39;    |                                    `-._    `-._`-.__.-&#39;_.-&#39;    _.-&#39;                                         `-._    `-.__.-&#39;    _.-&#39;                                                 `-._        _.-&#39;                                                         `-.__.-&#39;                                               [6468] 26 Mar 18:37:12.959 # Server started, Redis version 2.8.0</code></pre><h4 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h4><h5 id="直接关闭"><a href="#直接关闭" class="headerlink" title="直接关闭"></a>直接关闭</h5><pre><code>[root@192 src]# ./redis-cli shutdown</code></pre><h5 id="指定端口关闭"><a href="#指定端口关闭" class="headerlink" title="指定端口关闭"></a>指定端口关闭</h5><p>启动如果指定了端口，关闭必须指定端口</p><pre><code>[root@192 src]# ./redis-cli -p 6379 shutdown </code></pre><h5 id="指定端口、ip地址、密码关闭"><a href="#指定端口、ip地址、密码关闭" class="headerlink" title="指定端口、ip地址、密码关闭"></a>指定端口、ip地址、密码关闭</h5><p>启动指定配置文件启动，配置文件修改了端口、密码，关闭的时候必须指定端口、密码</p><pre><code>[root@192 src]# ./redis-cli -p 6380 shutdown(error) NOAUTH Authentication required.[root@192 src]# ./redis-cli -p 6380 -h 127.0.0.1 -a 000000 shutdown[root@192 src]# ps -ef | grep redisroot       6526   6337  0 18:51 pts/6    00:00:00 grep redis[root@192 src]# </code></pre><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><h4 id="连接服务端"><a href="#连接服务端" class="headerlink" title="连接服务端"></a>连接服务端</h4><h5 id="直接连接"><a href="#直接连接" class="headerlink" title="直接连接"></a>直接连接</h5><p>服务端默认启动，客户端可以直接默认连接</p><pre><code>[root@192 src]# ./redis-cli 127.0.0.1:6379&gt; keys *1) &quot;b&quot;2) &quot;hash&quot;3) &quot;a2&quot;4) &quot;a1&quot;5) &quot;1&quot;6) &quot;hash2&quot;7) &quot;word&quot;8) &quot;a&quot;9) &quot;a3&quot;127.0.0.1:6379&gt; quit</code></pre><h5 id="指定端口连接"><a href="#指定端口连接" class="headerlink" title="指定端口连接"></a>指定端口连接</h5><p>服务端指定端口启动，客户端启连接必须指定端口</p><pre><code>[root@192 src]# ./redis-cli -p 6379</code></pre><h5 id="指定端口、ip连接"><a href="#指定端口、ip连接" class="headerlink" title="指定端口、ip连接"></a>指定端口、ip连接</h5><pre><code>[root@192 src]# ./redis-cli -p 6379 -h 127.0.0.1</code></pre><h5 id="指定端口、ip、密码连接"><a href="#指定端口、ip、密码连接" class="headerlink" title="指定端口、ip、密码连接"></a>指定端口、ip、密码连接</h5><p>服务端指定配置文件启动，配置文件修改了端口、密码，客户端连接必须指定端口、密码</p><pre><code>[root@192 src]# pwd/opt/module/redis-2.8.0/src[root@192 src]# ./redis-cli -p 6380127.0.0.1:6380&gt; keys *(error) NOAUTH Authentication required.127.0.0.1:6380&gt; quit[root@192 src]# ./redis-cli -p 6380 -h 127.0.0.1 -a 000000127.0.0.1:6380&gt; keys *1) &quot;1&quot;2) &quot;a&quot;3) &quot;a2&quot;4) &quot;hash2&quot;5) &quot;word&quot;6) &quot;b&quot;7) &quot;hash&quot;8) &quot;a3&quot;9) &quot;a1&quot;127.0.0.1:6380&gt; </code></pre><h4 id="关闭-1"><a href="#关闭-1" class="headerlink" title="关闭"></a>关闭</h4><pre><code>127.0.0.1:6379&gt; quit</code></pre><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><h4 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h4><h5 id="查看键"><a href="#查看键" class="headerlink" title="查看键"></a>查看键</h5><pre><code>127.0.0.1:6379&gt; keys *</code></pre><h5 id="查看基本信息"><a href="#查看基本信息" class="headerlink" title="查看基本信息"></a>查看基本信息</h5><pre><code>127.0.0.1:6379&gt; info</code></pre><h5 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h5><pre><code>127.0.0.1:6379&gt; exit</code></pre><pre><code>127.0.0.1:6379&gt; quit</code></pre><h5 id="切换库"><a href="#切换库" class="headerlink" title="切换库"></a>切换库</h5><p>默认使用0库</p><pre><code>127.0.0.1:6379&gt; select 2</code></pre><h5 id="清除当前库数据"><a href="#清除当前库数据" class="headerlink" title="清除当前库数据"></a>清除当前库数据</h5><pre><code>127.0.0.1:6379&gt; flushdb</code></pre><h5 id="清除所有库数据"><a href="#清除所有库数据" class="headerlink" title="清除所有库数据"></a>清除所有库数据</h5><pre><code>127.0.0.1:6379&gt; flushall</code></pre><h5 id="查看键的数量"><a href="#查看键的数量" class="headerlink" title="查看键的数量"></a>查看键的数量</h5><pre><code>127.0.0.1:6379&gt; dbsize</code></pre><h5 id="查看键生命时间"><a href="#查看键生命时间" class="headerlink" title="查看键生命时间"></a>查看键生命时间</h5><p>-1代表永久有效</p><pre><code>127.0.0.1:6379[1]&gt; keys  *1) &quot;a&quot;2) &quot;b&quot;127.0.0.1:6379[1]&gt; ttl a(integer) -1</code></pre><h5 id="查看类型"><a href="#查看类型" class="headerlink" title="查看类型"></a>查看类型</h5><pre><code>127.0.0.1:6379[1]&gt; type astring</code></pre><h5 id="日志监听"><a href="#日志监听" class="headerlink" title="日志监听"></a>日志监听</h5><pre><code>127.0.0.1:6379&gt; monitorOK</code></pre><h4 id="String字符串"><a href="#String字符串" class="headerlink" title="String字符串"></a>String字符串</h4><h5 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h5><h6 id="设置单个"><a href="#设置单个" class="headerlink" title="设置单个"></a>设置单个</h6><pre><code>127.0.0.1:6379[1]&gt; set c cOK</code></pre><h6 id="设置指定生命时间-秒"><a href="#设置指定生命时间-秒" class="headerlink" title="设置指定生命时间(秒)"></a>设置指定生命时间(秒)</h6><pre><code>127.0.0.1:6379[1]&gt; setex d 10 dOK127.0.0.1:6379[1]&gt; ttl d(integer) 7127.0.0.1:6379[1]&gt; ttl d(integer) 6</code></pre><h6 id="设置指定生命时间-毫秒秒"><a href="#设置指定生命时间-毫秒秒" class="headerlink" title="设置指定生命时间(毫秒秒)"></a>设置指定生命时间(毫秒秒)</h6><pre><code>127.0.0.1:6379[1]&gt; psetex e 10000 eOK127.0.0.1:6379[1]&gt; ttl e(integer) 8127.0.0.1:6379[1]&gt; ttl e(integer) 6127.0.0.1:6379[1]&gt; ttl e(integer) 5</code></pre><h6 id="重置单个"><a href="#重置单个" class="headerlink" title="重置单个"></a>重置单个</h6><pre><code>127.0.0.1:6379[1]&gt; get a&quot;a&quot;127.0.0.1:6379[1]&gt; getset a aaa&quot;a&quot;127.0.0.1:6379[1]&gt; get a&quot;aaa&quot;</code></pre><h6 id="设置多个"><a href="#设置多个" class="headerlink" title="设置多个"></a>设置多个</h6><pre><code>127.0.0.1:6379[1]&gt; mset a1 a1_value a2 a2_value a3 a3_valueOK127.0.0.1:6379[1]&gt; keys *1) &quot;a&quot;2) &quot;b&quot;3) &quot;a1&quot;4) &quot;a3&quot;5) &quot;hello&quot;6) &quot;a2&quot;7) &quot;c&quot;127.0.0.1:6379[1]&gt;</code></pre><h6 id="设置前判断键是否存在setnx"><a href="#设置前判断键是否存在setnx" class="headerlink" title="设置前判断键是否存在setnx"></a>设置前判断键是否存在<code>setnx</code></h6><pre><code>127.0.0.1:6379[1]&gt; keys *1) &quot;a&quot;2) &quot;b&quot;3) &quot;a1&quot;4) &quot;a3&quot;5) &quot;hello&quot;6) &quot;a2&quot;7) &quot;c&quot;127.0.0.1:6379[1]&gt; get a&quot;aaa&quot;127.0.0.1:6379[1]&gt; setnx a a(integer) 0127.0.0.1:6379[1]&gt; get a&quot;aaa&quot;</code></pre><h6 id="设置多个，判断键是否存在，只要一个失败就失败"><a href="#设置多个，判断键是否存在，只要一个失败就失败" class="headerlink" title="设置多个，判断键是否存在，只要一个失败就失败"></a>设置多个，判断键是否存在，只要一个失败就失败</h6><pre><code>127.0.0.1:6379[1]&gt; keys *(empty list or set)127.0.0.1:6379[1]&gt; msetnx a a b b c c(integer) 1127.0.0.1:6379[1]&gt; keys *1) &quot;a&quot;2) &quot;b&quot;3) &quot;c&quot;</code></pre><h6 id="追加"><a href="#追加" class="headerlink" title="追加"></a>追加</h6><pre><code>127.0.0.1:6379[1]&gt; append a aaa(integer) 4127.0.0.1:6379[1]&gt; get a&quot;aaaa&quot;</code></pre><h6 id="默认增长"><a href="#默认增长" class="headerlink" title="默认增长"></a>默认增长</h6><p>只能是数字增长，默认步长是1</p><pre><code>127.0.0.1:6379[1]&gt; set 1 1OK127.0.0.1:6379[1]&gt; incr 1 (integer) 2127.0.0.1:6379[1]&gt; incr 1 (integer) 3127.0.0.1:6379[1]&gt; get 1&quot;3&quot;</code></pre><h6 id="指定步长增长"><a href="#指定步长增长" class="headerlink" title="指定步长增长"></a>指定步长增长</h6><pre><code>127.0.0.1:6379[1]&gt; get 1&quot;3&quot;127.0.0.1:6379[1]&gt; incrby 1 100(integer) 103127.0.0.1:6379[1]&gt; incrby 1 100(integer) 203127.0.0.1:6379[1]&gt; get 1&quot;203&quot;</code></pre><h6 id="默认减值"><a href="#默认减值" class="headerlink" title="默认减值"></a>默认减值</h6><pre><code>127.0.0.1:6379[1]&gt; get 1&quot;203&quot;127.0.0.1:6379[1]&gt; decr 1(integer) 202127.0.0.1:6379[1]&gt; decr 1(integer) 201127.0.0.1:6379[1]&gt; decr 1(integer) 200127.0.0.1:6379[1]&gt; get 1&quot;200&quot;</code></pre><h6 id="指定步长减值"><a href="#指定步长减值" class="headerlink" title="指定步长减值"></a>指定步长减值</h6><pre><code>127.0.0.1:6379[1]&gt; get 1&quot;200&quot;127.0.0.1:6379[1]&gt; decrby 1 20(integer) 180127.0.0.1:6379[1]&gt; decrby 1 20(integer) 160127.0.0.1:6379[1]&gt; decrby 1 20(integer) 140127.0.0.1:6379[1]&gt; get 1&quot;140&quot;</code></pre><h5 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h5><h6 id="获取单个"><a href="#获取单个" class="headerlink" title="获取单个"></a>获取单个</h6><pre><code>127.0.0.1:6379[1]&gt; get a&quot;a&quot;127.0.0.1:6379[1]&gt; get b&quot;b&quot;</code></pre><h6 id="截取"><a href="#截取" class="headerlink" title="截取"></a>截取</h6><pre><code>127.0.0.1:6379[1]&gt; set hello helloOK127.0.0.1:6379[1]&gt; getrange hello 0 2&quot;hel&quot;</code></pre><h6 id="获取多个"><a href="#获取多个" class="headerlink" title="获取多个"></a>获取多个</h6><pre><code>127.0.0.1:6379[1]&gt; mget a1 a2 a3 1) &quot;a1_value&quot;2) &quot;a2_value&quot;3) &quot;a3_value&quot;127.0.0.1:6379[1]&gt;</code></pre><h6 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h6><pre><code>127.0.0.1:6379[1]&gt; get hello&quot;hello&quot;127.0.0.1:6379[1]&gt; strlen hello(integer) 5</code></pre><h4 id="哈希hash"><a href="#哈希hash" class="headerlink" title="哈希hash"></a>哈希hash</h4><h5 id="设置-1"><a href="#设置-1" class="headerlink" title="设置"></a>设置</h5><h6 id="设置单个-1"><a href="#设置单个-1" class="headerlink" title="设置单个"></a>设置单个</h6><pre><code>127.0.0.1:6379[1]&gt; hset hash username shenlibing(integer) 1</code></pre><h6 id="设置多个-1"><a href="#设置多个-1" class="headerlink" title="设置多个"></a>设置多个</h6><pre><code>127.0.0.1:6379[1]&gt; hmset hash address haikou phone 15501892660OK127.0.0.1:6379[1]&gt; hgetall hash1) &quot;username&quot;2) &quot;shenlibing&quot;3) &quot;age&quot;4) &quot;18&quot;5) &quot;address&quot;6) &quot;haikou&quot;7) &quot;phone&quot;8) &quot;15501892660&quot;127.0.0.1:6379[1]&gt; hkeys hash1) &quot;username&quot;2) &quot;age&quot;3) &quot;address&quot;4) &quot;phone&quot;</code></pre><h6 id="删除多个"><a href="#删除多个" class="headerlink" title="删除多个"></a>删除多个</h6><pre><code>127.0.0.1:6379[1]&gt; hkeys hash1) &quot;username&quot;2) &quot;age&quot;3) &quot;address&quot;4) &quot;phone&quot;127.0.0.1:6379[1]&gt; hdel hash address phone(integer) 2127.0.0.1:6379[1]&gt; hkeys hash1) &quot;username&quot;2) &quot;age&quot;</code></pre><h6 id="设置单个前判断键是否存在"><a href="#设置单个前判断键是否存在" class="headerlink" title="设置单个前判断键是否存在"></a>设置单个前判断键是否存在</h6><pre><code>127.0.0.1:6379[1]&gt; hsetnx hash username xiaobingbing(integer) 0127.0.0.1:6379[1]&gt; hget hash username&quot;shenlibing&quot;</code></pre><h5 id="获取-1"><a href="#获取-1" class="headerlink" title="获取"></a>获取</h5><h6 id="获取单个-1"><a href="#获取单个-1" class="headerlink" title="获取单个"></a>获取单个</h6><pre><code>127.0.0.1:6379[1]&gt; hget hash username&quot;shenlibing&quot;</code></pre><h6 id="判断键是否存在"><a href="#判断键是否存在" class="headerlink" title="判断键是否存在"></a>判断键是否存在</h6><pre><code>127.0.0.1:6379[1]&gt; hexists hash username(integer) 1</code></pre><h6 id="获取整个"><a href="#获取整个" class="headerlink" title="获取整个"></a>获取整个</h6><pre><code>127.0.0.1:6379[1]&gt; hgetall hash1) &quot;username&quot;2) &quot;shenlibing&quot;3) &quot;age&quot;4) &quot;18&quot;</code></pre><h6 id="获取键"><a href="#获取键" class="headerlink" title="获取键"></a>获取键</h6><pre><code>127.0.0.1:6379[1]&gt; hkeys hash1) &quot;username&quot;2) &quot;age&quot;</code></pre><h6 id="获取值"><a href="#获取值" class="headerlink" title="获取值"></a>获取值</h6><pre><code>127.0.0.1:6379[1]&gt; hvals hash1) &quot;shenlibing&quot;2) &quot;18&quot;</code></pre><h6 id="获取长度"><a href="#获取长度" class="headerlink" title="获取长度"></a>获取长度</h6><pre><code>127.0.0.1:6379[1]&gt; hlen hash(integer) 2</code></pre><h6 id="获取多个-1"><a href="#获取多个-1" class="headerlink" title="获取多个"></a>获取多个</h6><pre><code>127.0.0.1:6379[1]&gt; hmget hash username age1) &quot;shenlibing&quot;2) &quot;18&quot;</code></pre><h4 id="列表list"><a href="#列表list" class="headerlink" title="列表list"></a>列表list</h4><h5 id="设置-2"><a href="#设置-2" class="headerlink" title="设置"></a>设置</h5><h6 id="从左往右进"><a href="#从左往右进" class="headerlink" title="从左往右进"></a>从左往右进</h6><pre><code>127.0.0.1:6379&gt; lpush list 1 2 3 4 5 6 7 8 9 10(integer) 10</code></pre><h6 id="重置"><a href="#重置" class="headerlink" title="重置"></a>重置</h6><p>根据索引重置某个元素</p><pre><code>127.0.0.1:6379&gt; lset list 0 100OK</code></pre><h6 id="向左弹出"><a href="#向左弹出" class="headerlink" title="向左弹出"></a>向左弹出</h6><pre><code>127.0.0.1:6379&gt; lpop list&quot;100&quot;</code></pre><h6 id="向右弹出"><a href="#向右弹出" class="headerlink" title="向右弹出"></a>向右弹出</h6><pre><code>127.0.0.1:6379&gt; rpop list&quot;1&quot;</code></pre><h5 id="获取-2"><a href="#获取-2" class="headerlink" title="获取"></a>获取</h5><h6 id="获取多个-2"><a href="#获取多个-2" class="headerlink" title="获取多个"></a>获取多个</h6><p>根据索引截取<code>list</code>元素，获取多个元素</p><pre><code>127.0.0.1:6379&gt; lrange list 0 21) &quot;10&quot;2) &quot;9&quot;3) &quot;8&quot;</code></pre><h6 id="获取单个-2"><a href="#获取单个-2" class="headerlink" title="获取单个"></a>获取单个</h6><p>根据索引查找<code>list</code>中某个元素，获取单个元素</p><pre><code>127.0.0.1:6379&gt; lindex list 0&quot;100&quot;</code></pre><h6 id="长度-1"><a href="#长度-1" class="headerlink" title="长度"></a>长度</h6><pre><code>127.0.0.1:6379&gt; llen list(integer) 10</code></pre><h6 id="获取所有"><a href="#获取所有" class="headerlink" title="获取所有"></a>获取所有</h6><pre><code>127.0.0.1:6379&gt; llen list(integer) 8127.0.0.1:6379&gt; lrange list 0 71) &quot;9&quot;2) &quot;8&quot;3) &quot;7&quot;4) &quot;6&quot;5) &quot;5&quot;6) &quot;4&quot;7) &quot;3&quot;8) &quot;2&quot;</code></pre><h4 id="集合set"><a href="#集合set" class="headerlink" title="集合set"></a>集合set</h4><p>无序，不允许重复</p><h5 id="设置-3"><a href="#设置-3" class="headerlink" title="设置"></a>设置</h5><h6 id="设置多个-2"><a href="#设置多个-2" class="headerlink" title="设置多个"></a>设置多个</h6><pre><code>127.0.0.1:6379&gt; sadd set a b c d(integer) 4</code></pre><h6 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h6><pre><code>127.0.0.1:6379&gt; rename set set1OK</code></pre><h6 id="删除指定元素-一个或者多个"><a href="#删除指定元素-一个或者多个" class="headerlink" title="删除指定元素,一个或者多个"></a>删除指定元素,一个或者多个</h6><pre><code>127.0.0.1:6379&gt; srem set1 a b(integer) 2127.0.0.1:6379&gt; srem set1 c(integer) 1</code></pre><h6 id="随机删除一个元素"><a href="#随机删除一个元素" class="headerlink" title="随机删除一个元素"></a>随机删除一个元素</h6><pre><code>127.0.0.1:6379&gt; spop set2&quot;f&quot;</code></pre><h5 id="获取-3"><a href="#获取-3" class="headerlink" title="获取"></a>获取</h5><h6 id="长度-2"><a href="#长度-2" class="headerlink" title="长度"></a>长度</h6><pre><code>127.0.0.1:6379&gt; scard set1(integer) 4</code></pre><h6 id="获取所有-1"><a href="#获取所有-1" class="headerlink" title="获取所有"></a>获取所有</h6><pre><code>127.0.0.1:6379&gt; smembers set21) &quot;d&quot;2) &quot;e&quot;3) &quot;c&quot;4) &quot;f&quot;</code></pre><h6 id="差集"><a href="#差集" class="headerlink" title="差集"></a>差集</h6><pre><code>127.0.0.1:6379&gt; smembers set1 1) &quot;d&quot;2) &quot;b&quot;3) &quot;c&quot;4) &quot;a&quot;127.0.0.1:6379&gt; smembers set21) &quot;d&quot;2) &quot;e&quot;3) &quot;c&quot;4) &quot;f&quot;127.0.0.1:6379&gt; sdiff set1 set21) &quot;b&quot;2) &quot;a&quot;</code></pre><pre><code>127.0.0.1:6379&gt; sdiff set2 set11) &quot;e&quot;2) &quot;f&quot;</code></pre><h6 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h6><pre><code>127.0.0.1:6379&gt; sinter set1 set21) &quot;c&quot;2) &quot;d&quot;</code></pre><h6 id="并集"><a href="#并集" class="headerlink" title="并集"></a>并集</h6><pre><code>127.0.0.1:6379&gt; sunion set1 set21) &quot;c&quot;2) &quot;e&quot;3) &quot;f&quot;4) &quot;a&quot;5) &quot;b&quot;6) &quot;d&quot;</code></pre><h6 id="是否存在某个元素"><a href="#是否存在某个元素" class="headerlink" title="是否存在某个元素"></a>是否存在某个元素</h6><pre><code>127.0.0.1:6379&gt; sismember set1 a(integer) 1</code></pre><h4 id="有序集合sortedset"><a href="#有序集合sortedset" class="headerlink" title="有序集合sortedset"></a>有序集合sortedset</h4><h5 id="设置-4"><a href="#设置-4" class="headerlink" title="设置"></a>设置</h5><h6 id="根据分数设置"><a href="#根据分数设置" class="headerlink" title="根据分数设置"></a>根据分数设置</h6><pre><code>127.0.0.1:6379&gt; zadd sortedset1 100 a 200 b 300 c(integer) 3</code></pre><h6 id="重命名-1"><a href="#重命名-1" class="headerlink" title="重命名"></a>重命名</h6><pre><code>127.0.0.1:6379&gt; rename sortedset1 sortedsetOK</code></pre><h6 id="加分数"><a href="#加分数" class="headerlink" title="加分数"></a>加分数</h6><pre><code>127.0.0.1:6379&gt; zincrby sortedset 1000 a&quot;1100&quot;127.0.0.1:6379&gt; zrank sortedset a(integer) 2</code></pre><h5 id="获取-4"><a href="#获取-4" class="headerlink" title="获取"></a>获取</h5><h6 id="长度-3"><a href="#长度-3" class="headerlink" title="长度"></a>长度</h6><pre><code>127.0.0.1:6379&gt; zcard sortedset(integer) 3</code></pre><h6 id="获取分数"><a href="#获取分数" class="headerlink" title="获取分数"></a>获取分数</h6><p>获取元素的分数</p><pre><code>127.0.0.1:6379&gt; zscore sortedset a&quot;100&quot;</code></pre><h6 id="根据分数范围返回成员个数"><a href="#根据分数范围返回成员个数" class="headerlink" title="根据分数范围返回成员个数"></a>根据分数范围返回成员个数</h6><pre><code>127.0.0.1:6379&gt; zcount sortedset 0 200(integer) 2127.0.0.1:6379&gt; zcount sortedset 0 300(integer) 3</code></pre><h6 id="获取元素索引"><a href="#获取元素索引" class="headerlink" title="获取元素索引"></a>获取元素索引</h6><pre><code>127.0.0.1:6379&gt; zrank sortedset a(integer) 0127.0.0.1:6379&gt; zrank sortedset b(integer) 1</code></pre><h6 id="根据索引区间返回元素"><a href="#根据索引区间返回元素" class="headerlink" title="根据索引区间返回元素"></a>根据索引区间返回元素</h6><p>可以带分数显示</p><pre><code>127.0.0.1:6379&gt; zcard sortedset(integer) 3127.0.0.1:6379&gt; zrange sortedset 0 21) &quot;b&quot;2) &quot;c&quot;3) &quot;a&quot;127.0.0.1:6379&gt; zrange sortedset 0 2 withscores1) &quot;b&quot;2) &quot;200&quot;3) &quot;c&quot;4) &quot;300&quot;5) &quot;a&quot;6) &quot;1100&quot;</code></pre><h3 id="Redis-Desktop-Manager工具"><a href="#Redis-Desktop-Manager工具" class="headerlink" title="Redis_Desktop_Manager工具"></a>Redis_Desktop_Manager工具</h3><p><a href="https://redisdesktop.com/download" target="_blank" rel="noopener">下载</a></p><p><a href="http://learning.happymmall.com/%E4%BA%8C%E6%9C%9F%E9%9B%86%E7%BE%A4%E5%8F%8A%E7%BC%93%E5%AD%98%E5%88%86%E5%B8%83%E5%BC%8FJava%E7%AB%AF/redis-desktop-manager-088-windows.exe" target="_blank" rel="noopener">下载2</a></p><p><a href="http://docs.redisdesktop.com/en/latest/quick-start/" target="_blank" rel="noopener">Quick Start</a></p><h2 id="原生单点登录"><a href="#原生单点登录" class="headerlink" title="原生单点登录"></a>原生单点登录</h2><p>原生Redis+Cookie+Jackson+Filter解决session共享问题实现单点登录</p><h3 id="java使用Jedis客户端"><a href="#java使用Jedis客户端" class="headerlink" title="java使用Jedis客户端"></a>java使用Jedis客户端</h3><h4 id="编辑pom-xml"><a href="#编辑pom-xml" class="headerlink" title="编辑pom.xml"></a>编辑<code>pom.xml</code></h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h4 id="获取连接"><a href="#获取连接" class="headerlink" title="获取连接"></a>获取连接</h4><p>从连接池获取连接</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>PropertiesUtil<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>Jedis<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>JedisPool<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>JedisPoolConfig<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisPool</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//jedis连接池</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> JedisPool pool<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//最大连接数</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer maxTotal <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.max.total"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//在jedispool中最大的idle状态(空闲的)的jedis实例的个数</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer maxIdle <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.max.idle"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//在jedispool中最小的idle状态(空闲的)的jedis实例的个数</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer minIdle <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.min.idle"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//在borrow一个jedis实例的时候，是否要进行验证操作，如果赋值true。则得到的jedis实例肯定是可以用的。</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Boolean testOnBorrow <span class="token operator">=</span> Boolean<span class="token punctuation">.</span><span class="token function">parseBoolean</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.test.borrow"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//在return一个jedis实例的时候，是否要进行验证操作，如果赋值true。则放回jedispool的jedis实例肯定是可以用的。</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Boolean testOnReturn <span class="token operator">=</span> Boolean<span class="token punctuation">.</span><span class="token function">parseBoolean</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.test.return"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String redisIp <span class="token operator">=</span> PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.ip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer redisPort <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.port"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">initPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        JedisPoolConfig config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span>maxTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setMaxIdle</span><span class="token punctuation">(</span>maxIdle<span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setMinIdle</span><span class="token punctuation">(</span>minIdle<span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setTestOnBorrow</span><span class="token punctuation">(</span>testOnBorrow<span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setTestOnReturn</span><span class="token punctuation">(</span>testOnReturn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//连接耗尽的时候，是否阻塞，false会抛出异常，true阻塞直到超时。默认为true。</span>        config<span class="token punctuation">.</span><span class="token function">setBlockWhenExhausted</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPool</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> redisIp<span class="token punctuation">,</span> redisPort<span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        <span class="token function">initPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Jedis <span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>Jedis jedis<span class="token punctuation">)</span> <span class="token punctuation">{</span>        pool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">returnResource</span><span class="token punctuation">(</span>Jedis jedis<span class="token punctuation">)</span> <span class="token punctuation">{</span>        pool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Jedis jedis <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"geelykey"</span><span class="token punctuation">,</span> <span class="token string">"geelyvalue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//临时调用，销毁连接池中的所有连接</span>        pool<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"program is end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="Jedis-API封装"><a href="#Jedis-API封装" class="headerlink" title="Jedis API封装"></a>Jedis API封装</h4><p>读写数据</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">.</span>RedisPool<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>Jedis<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisPoolUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 设置key的有效期，单位是秒     * @param key     * @param exTime     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Long <span class="token function">expire</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span><span class="token keyword">int</span> exTime<span class="token punctuation">)</span><span class="token punctuation">{</span>        Jedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        Long result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>exTime<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"expire key:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//exTime的单位是秒</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">setEx</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String value<span class="token punctuation">,</span><span class="token keyword">int</span> exTime<span class="token punctuation">)</span><span class="token punctuation">{</span>        Jedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        String result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">setex</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>exTime<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"setex key:{} value:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">set</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>        Jedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        String result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"set key:{} value:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">get</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{</span>        Jedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        String result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"get key:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Long <span class="token function">del</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{</span>        Jedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        Long result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"del key:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Jedis jedis <span class="token operator">=</span> RedisPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisPoolUtil<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"keyTest"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String value <span class="token operator">=</span> RedisPoolUtil<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"keyTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisPoolUtil<span class="token punctuation">.</span><span class="token function">setEx</span><span class="token punctuation">(</span><span class="token string">"keyex"</span><span class="token punctuation">,</span><span class="token string">"valueex"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisPoolUtil<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span><span class="token string">"keyTest"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisPoolUtil<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token string">"keyTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String aaa <span class="token operator">=</span> RedisPoolUtil<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>aaa<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="Jackson封装JacksonUtil"><a href="#Jackson封装JacksonUtil" class="headerlink" title="Jackson封装JacksonUtil"></a>Jackson封装JacksonUtil</h3><h4 id="编辑pom-xml-1"><a href="#编辑pom-xml-1" class="headerlink" title="编辑pom.xml"></a>编辑<code>pom.xml</code></h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.codehaus.jackson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-mapper-asl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.9.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h4 id="多泛型序列化和反序列化"><a href="#多泛型序列化和反序列化" class="headerlink" title="多泛型序列化和反序列化"></a>多泛型序列化和反序列化</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>Lists<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>Category<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>TestPojo<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>map<span class="token punctuation">.</span>DeserializationConfig<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>map<span class="token punctuation">.</span>ObjectMapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>map<span class="token punctuation">.</span>SerializationConfig<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>map<span class="token punctuation">.</span>annotate<span class="token punctuation">.</span>JsonSerialize<span class="token punctuation">.</span>Inclusion<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>type<span class="token punctuation">.</span>JavaType<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>type<span class="token punctuation">.</span>TypeReference<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonUtil</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> ObjectMapper objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//对象的所有字段全部列入</span>        objectMapper<span class="token punctuation">.</span><span class="token function">setSerializationInclusion</span><span class="token punctuation">(</span>Inclusion<span class="token punctuation">.</span>ALWAYS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//取消默认转换timestamps形式</span>        objectMapper<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>SerializationConfig<span class="token punctuation">.</span>Feature<span class="token punctuation">.</span>WRITE_DATES_AS_TIMESTAMPS<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//忽略空Bean转json的错误</span>        objectMapper<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>SerializationConfig<span class="token punctuation">.</span>Feature<span class="token punctuation">.</span>FAIL_ON_EMPTY_BEANS<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//所有的日期格式都统一为以下的样式，即yyyy-MM-dd HH:mm:ss</span>        objectMapper<span class="token punctuation">.</span><span class="token function">setDateFormat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span>DateTimeUtil<span class="token punctuation">.</span>STANDARD_FORMAT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//忽略 在json字符串中存在，但是在java对象中不存在对应属性的情况。防止错误</span>        objectMapper<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>DeserializationConfig<span class="token punctuation">.</span>Feature<span class="token punctuation">.</span>FAIL_ON_UNKNOWN_PROPERTIES<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> String <span class="token function">obj2String</span><span class="token punctuation">(</span>T obj<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>obj <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token operator">?</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>obj <span class="token operator">:</span>  objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"Parse Object to String error"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> String <span class="token function">obj2StringPretty</span><span class="token punctuation">(</span>T obj<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>obj <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token operator">?</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>obj <span class="token operator">:</span>  objectMapper<span class="token punctuation">.</span><span class="token function">writerWithDefaultPrettyPrinter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"Parse Object to String error"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">string2Obj</span><span class="token punctuation">(</span>String str<span class="token punctuation">,</span>Class<span class="token operator">&lt;</span>T<span class="token operator">></span> clazz<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">||</span> clazz <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> clazz<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span>str <span class="token operator">:</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"Parse String to Object error"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">string2Obj</span><span class="token punctuation">(</span>String str<span class="token punctuation">,</span> TypeReference<span class="token operator">&lt;</span>T<span class="token operator">></span> typeReference<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">||</span> typeReference <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token punctuation">(</span>typeReference<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">?</span> str <span class="token operator">:</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>typeReference<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"Parse String to Object error"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">string2Obj</span><span class="token punctuation">(</span>String str<span class="token punctuation">,</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> collectionClass<span class="token punctuation">,</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> elementClasses<span class="token punctuation">)</span><span class="token punctuation">{</span>        JavaType javaType <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">getTypeFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">constructParametricType</span><span class="token punctuation">(</span>collectionClass<span class="token punctuation">,</span>elementClasses<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>javaType<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"Parse String to Object error"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        TestPojo testPojo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestPojo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        testPojo<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"Geely"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        testPojo<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//{"name":"Geely","id":666}</span>        String json <span class="token operator">=</span> <span class="token string">"{\"name\":\"Geely\",\"color\":\"blue\",\"id\":666}"</span><span class="token punctuation">;</span>        TestPojo testPojoObject <span class="token operator">=</span> JsonUtil<span class="token punctuation">.</span><span class="token function">string2Obj</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span>TestPojo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        String testPojoJson = JsonUtil.obj2String(testPojo);</span><span class="token comment" spellcheck="true">//        log.info("testPojoJson:{}",testPojoJson);</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        User user = new User();</span><span class="token comment" spellcheck="true">//        user.setId(2);</span><span class="token comment" spellcheck="true">//        user.setEmail("geely@happymmall.com");</span><span class="token comment" spellcheck="true">//        user.setCreateTime(new Date());</span><span class="token comment" spellcheck="true">//        String userJsonPretty = JsonUtil.obj2StringPretty(user);</span><span class="token comment" spellcheck="true">//        log.info("userJson:{}",userJsonPretty);</span><span class="token comment" spellcheck="true">//        User u2 = new User();</span><span class="token comment" spellcheck="true">//        u2.setId(2);</span><span class="token comment" spellcheck="true">//        u2.setEmail("geelyu2@happymmall.com");</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        String user1Json = JsonUtil.obj2String(u1);</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        String user1JsonPretty = JsonUtil.obj2StringPretty(u1);</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        log.info("user1Json:{}",user1Json);</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        log.info("user1JsonPretty:{}",user1JsonPretty);</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        User user = JsonUtil.string2Obj(user1Json,User.class);</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        List&lt;User> userList = Lists.newArrayList();</span><span class="token comment" spellcheck="true">//        userList.add(u1);</span><span class="token comment" spellcheck="true">//        userList.add(u2);</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        String userListStr = JsonUtil.obj2StringPretty(userList);</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        log.info("==================");</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        log.info(userListStr);</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        List&lt;User> userListObj1 = JsonUtil.string2Obj(userListStr, new TypeReference&lt;List&lt;User>>() {</span><span class="token comment" spellcheck="true">//        });</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        List&lt;User> userListObj2 = JsonUtil.string2Obj(userListStr,List.class,User.class);</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="Cookie封装"><a href="#Cookie封装" class="headerlink" title="Cookie封装"></a>Cookie封装</h3><p>其中<code>COOKIE_NAME</code>和<code>COOKIE_DOMAIN</code>是根据实际项目，线上的域名来配置的，如果扩展开来讲，对于里面每个属性，在二级/三级域名下的读写问题是必须要细化的</p><p>Cookie的读、写、删</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Cookie<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CookieUtil</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> String COOKIE_DOMAIN <span class="token operator">=</span> <span class="token string">".happymmall.com"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> String COOKIE_NAME <span class="token operator">=</span> <span class="token string">"mmall_login_token"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">readLoginToken</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span><span class="token punctuation">{</span>        Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> cks <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>cks <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>Cookie ck <span class="token operator">:</span> cks<span class="token punctuation">)</span><span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"read cookieName:{},cookieValue:{}"</span><span class="token punctuation">,</span>ck<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ck<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ck<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>COOKIE_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"return cookieName:{},cookieValue:{}"</span><span class="token punctuation">,</span>ck<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ck<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> ck<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//X:domain=".happymmall.com"</span>    <span class="token comment" spellcheck="true">//a:A.happymmall.com            cookie:domain=A.happymmall.com;path="/"</span>    <span class="token comment" spellcheck="true">//b:B.happymmall.com            cookie:domain=B.happymmall.com;path="/"</span>    <span class="token comment" spellcheck="true">//c:A.happymmall.com/test/cc    cookie:domain=A.happymmall.com;path="/test/cc"</span>    <span class="token comment" spellcheck="true">//d:A.happymmall.com/test/dd    cookie:domain=A.happymmall.com;path="/test/dd"</span>    <span class="token comment" spellcheck="true">//e:A.happymmall.com/test       cookie:domain=A.happymmall.com;path="/test"</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">writeLoginToken</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span>String token<span class="token punctuation">)</span><span class="token punctuation">{</span>        Cookie ck <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span>COOKIE_NAME<span class="token punctuation">,</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        ck<span class="token punctuation">.</span><span class="token function">setDomain</span><span class="token punctuation">(</span>COOKIE_DOMAIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        ck<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//代表设置在根目录</span>        ck<span class="token punctuation">.</span><span class="token function">setHttpOnly</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//单位是秒。</span>        <span class="token comment" spellcheck="true">//如果这个maxage不设置的话，cookie就不会写入硬盘，而是写在内存。只在当前页面有效。</span>        ck<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果是-1，代表永久</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"write cookieName:{},cookieValue:{}"</span><span class="token punctuation">,</span>ck<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ck<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>ck<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">delLoginToken</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span>HttpServletResponse response<span class="token punctuation">)</span><span class="token punctuation">{</span>        Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> cks <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>cks <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>Cookie ck <span class="token operator">:</span> cks<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ck<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>COOKIE_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    ck<span class="token punctuation">.</span><span class="token function">setDomain</span><span class="token punctuation">(</span>COOKIE_DOMAIN<span class="token punctuation">)</span><span class="token punctuation">;</span>                    ck<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    ck<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置成0，代表删除此cookie。</span>                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"del cookieName:{},cookieValue:{}"</span><span class="token punctuation">,</span>ck<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ck<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>ck<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="SessionExpireFilter构建Session时间重置过滤器"><a href="#SessionExpireFilter构建Session时间重置过滤器" class="headerlink" title="SessionExpireFilter构建Session时间重置过滤器"></a>SessionExpireFilter构建Session时间重置过滤器</h3><h4 id="编辑web-xml"><a href="#编辑web-xml" class="headerlink" title="编辑web.xml"></a>编辑<code>web.xml</code></h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>sessionExpireFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.mmall.controller.common.SessionExpireFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>sessionExpireFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>*.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span></code></pre><h4 id="时间重置过滤器类"><a href="#时间重置过滤器类" class="headerlink" title="时间重置过滤器类"></a>时间重置过滤器类</h4><p>SessionExpireFilter.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Const<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CookieUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>JsonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>RedisShardedPoolUtil<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>Filter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FilterChain<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FilterConfig<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SessionExpireFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        HttpServletRequest httpServletRequest <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletRequest<span class="token punctuation">)</span>servletRequest<span class="token punctuation">;</span>        String loginToken <span class="token operator">=</span> CookieUtil<span class="token punctuation">.</span><span class="token function">readLoginToken</span><span class="token punctuation">(</span>httpServletRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>loginToken<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//判断logintoken是否为空或者""；</span>            <span class="token comment" spellcheck="true">//如果不为空的话，符合条件，继续拿user信息</span>            String userJsonStr <span class="token operator">=</span> RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>loginToken<span class="token punctuation">)</span><span class="token punctuation">;</span>            User user <span class="token operator">=</span> JsonUtil<span class="token punctuation">.</span><span class="token function">string2Obj</span><span class="token punctuation">(</span>userJsonStr<span class="token punctuation">,</span>User<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//如果user不为空，则重置session的时间，即调用expire命令</span>                RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>loginToken<span class="token punctuation">,</span> Const<span class="token punctuation">.</span>RedisCacheExtime<span class="token punctuation">.</span>REDIS_SESSION_EXTIME<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span>servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="Guava-Cache迁移Redis分布式缓存"><a href="#Guava-Cache迁移Redis分布式缓存" class="headerlink" title="Guava Cache迁移Redis分布式缓存"></a>Guava Cache迁移Redis分布式缓存</h3><p>描述：修改密码时需要验证<code>token</code>，<code>token</code>的生成是在校验忘记密码的问题答案是正确的时候生成，如果答案是正确的话，返回给前台。重置密码发起请求携带该<code>token</code>到后台校验是否一致。</p><h4 id="集群后Guava-Cache的不足"><a href="#集群后Guava-Cache的不足" class="headerlink" title="集群后Guava Cache的不足"></a>集群后Guava Cache的不足</h4><p><code>Tomcat</code>之前使用的<code>guava cache</code>存储<code>token</code>，它只存在于<code>tomcat</code>实例上，<code>tomcat</code>及<code>tomcat</code>之间并不共享，所以必须迁移。否则负载均衡就<code>TomcatA</code>存储了<code>guava cache</code>，<code>TomcatB</code>想拿就拿不到了</p><h4 id="Guava-Cache迁移Redis缓存"><a href="#Guava-Cache迁移Redis缓存" class="headerlink" title="Guava Cache迁移Redis缓存"></a>Guava Cache迁移Redis缓存</h4><h5 id="修改前"><a href="#修改前" class="headerlink" title="修改前"></a>修改前</h5><p><code>guava cache</code>存储<code>token</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">checkAnswer</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span>String question<span class="token punctuation">,</span>String answer<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> resultCount <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">checkAnswer</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>question<span class="token punctuation">,</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>resultCount<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//说明问题及问题答案是这个用户的,并且是正确的</span>        String forgetToken <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TokenCache<span class="token punctuation">.</span><span class="token function">setKey</span><span class="token punctuation">(</span>TokenCache<span class="token punctuation">.</span>TOKEN_PREFIX<span class="token operator">+</span>username<span class="token punctuation">,</span>forgetToken<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccess</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"问题的答案错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">forgetResetPassword</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span>String passwordNew<span class="token punctuation">,</span>String forgetToken<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"参数错误,token需要传递"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    ServerResponse validResponse <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkValid</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>Const<span class="token punctuation">.</span>USERNAME<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>validResponse<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//用户不存在</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"用户不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    String token <span class="token operator">=</span> TokenCache<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span>TokenCache<span class="token punctuation">.</span>TOKEN_PREFIX<span class="token operator">+</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"token无效或者过期"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">,</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        String md5Password  <span class="token operator">=</span> MD5Util<span class="token punctuation">.</span><span class="token function">MD5EncodeUtf8</span><span class="token punctuation">(</span>passwordNew<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rowCount <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">updatePasswordByUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>md5Password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>rowCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccessMessage</span><span class="token punctuation">(</span><span class="token string">"修改密码成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"token错误,请重新获取重置密码的token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"修改密码失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="修改后"><a href="#修改后" class="headerlink" title="修改后"></a>修改后</h5><p>后台<code>token</code>保存在<code>Redis</code>上</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">checkAnswer</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span>String question<span class="token punctuation">,</span>String answer<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> resultCount <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">checkAnswer</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>question<span class="token punctuation">,</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>resultCount<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//说明问题及问题答案是这个用户的,并且是正确的</span>        String forgetToken <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">setEx</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>TOKEN_PREFIX<span class="token operator">+</span>username<span class="token punctuation">,</span>forgetToken<span class="token punctuation">,</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccess</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"问题的答案错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">forgetResetPassword</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span>String passwordNew<span class="token punctuation">,</span>String forgetToken<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"参数错误,token需要传递"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    ServerResponse validResponse <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkValid</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>Const<span class="token punctuation">.</span>USERNAME<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>validResponse<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//用户不存在</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"用户不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    String token <span class="token operator">=</span> RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>TOKEN_PREFIX<span class="token operator">+</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"token无效或者过期"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">,</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        String md5Password  <span class="token operator">=</span> MD5Util<span class="token punctuation">.</span><span class="token function">MD5EncodeUtf8</span><span class="token punctuation">(</span>passwordNew<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rowCount <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">updatePasswordByUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>md5Password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>rowCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccessMessage</span><span class="token punctuation">(</span><span class="token string">"修改密码成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"token错误,请重新获取重置密码的token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"修改密码失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="Redis分布式环境搭建"><a href="#Redis分布式环境搭建" class="headerlink" title="Redis分布式环境搭建"></a>Redis分布式环境搭建</h2><p>第一个Redis不变，修改第二个Redis</p><h3 id="编辑redis-conf"><a href="#编辑redis-conf" class="headerlink" title="编辑redis.conf"></a>编辑<code>redis.conf</code></h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98%E4%BF%AE%E6%94%B9%E7%AB%AF%E5%8F%A3.png" alt></p><h3 id="启动-2"><a href="#启动-2" class="headerlink" title="启动"></a>启动</h3><p>第一个默认启动,默认端口6379</p><pre><code>[root@192 src]# ./redis-server &amp;</code></pre><p>第二个指定配置文件启动，修改后的端口6380</p><pre><code>[root@192 src]# ./redis-server ../redis.conf &amp;</code></pre><h3 id="java代码连接Redis分布式缓存"><a href="#java代码连接Redis分布式缓存" class="headerlink" title="java代码连接Redis分布式缓存"></a>java代码连接Redis分布式缓存</h3><p>一致性算法</p><h4 id="获取连接-1"><a href="#获取连接-1" class="headerlink" title="获取连接"></a>获取连接</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>PropertiesUtil<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>JedisPoolConfig<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>JedisShardInfo<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>ShardedJedis<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>ShardedJedisPool<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Hashing<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Sharded<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisShardedPool</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> ShardedJedisPool pool<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//sharded jedis连接池</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer maxTotal <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.max.total"</span><span class="token punctuation">,</span><span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//最大连接数</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer maxIdle <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.max.idle"</span><span class="token punctuation">,</span><span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//在jedispool中最大的idle状态(空闲的)的jedis实例的个数</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer minIdle <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.min.idle"</span><span class="token punctuation">,</span><span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//在jedispool中最小的idle状态(空闲的)的jedis实例的个数</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Boolean testOnBorrow <span class="token operator">=</span> Boolean<span class="token punctuation">.</span><span class="token function">parseBoolean</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.test.borrow"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//在borrow一个jedis实例的时候，是否要进行验证操作，如果赋值true。则得到的jedis实例肯定是可以用的。</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Boolean testOnReturn <span class="token operator">=</span> Boolean<span class="token punctuation">.</span><span class="token function">parseBoolean</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis.test.return"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//在return一个jedis实例的时候，是否要进行验证操作，如果赋值true。则放回jedispool的jedis实例肯定是可以用的。</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String redis1Ip <span class="token operator">=</span> PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis1.ip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer redis1Port <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis1.port"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String redis2Ip <span class="token operator">=</span> PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis2.ip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer redis2Port <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"redis2.port"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">initPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        JedisPoolConfig config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span>maxTotal<span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setMaxIdle</span><span class="token punctuation">(</span>maxIdle<span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setMinIdle</span><span class="token punctuation">(</span>minIdle<span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setTestOnBorrow</span><span class="token punctuation">(</span>testOnBorrow<span class="token punctuation">)</span><span class="token punctuation">;</span>        config<span class="token punctuation">.</span><span class="token function">setTestOnReturn</span><span class="token punctuation">(</span>testOnReturn<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//连接耗尽的时候，是否阻塞，false会抛出异常，true阻塞直到超时。默认为true。</span>        config<span class="token punctuation">.</span><span class="token function">setBlockWhenExhausted</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        JedisShardInfo info1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisShardInfo</span><span class="token punctuation">(</span>redis1Ip<span class="token punctuation">,</span>redis1Port<span class="token punctuation">,</span><span class="token number">1000</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        JedisShardInfo info2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisShardInfo</span><span class="token punctuation">(</span>redis2Ip<span class="token punctuation">,</span>redis2Port<span class="token punctuation">,</span><span class="token number">1000</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>JedisShardInfo<span class="token operator">></span> jedisShardInfoList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>JedisShardInfo<span class="token operator">></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jedisShardInfoList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>info1<span class="token punctuation">)</span><span class="token punctuation">;</span>        jedisShardInfoList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>info2<span class="token punctuation">)</span><span class="token punctuation">;</span>        pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ShardedJedisPool</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span>jedisShardInfoList<span class="token punctuation">,</span> Hashing<span class="token punctuation">.</span>MURMUR_HASH<span class="token punctuation">,</span> Sharded<span class="token punctuation">.</span>DEFAULT_KEY_TAG_PATTERN<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span><span class="token punctuation">{</span>        <span class="token function">initPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ShardedJedis <span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> pool<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>ShardedJedis jedis<span class="token punctuation">)</span><span class="token punctuation">{</span>        pool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">returnResource</span><span class="token punctuation">(</span>ShardedJedis jedis<span class="token punctuation">)</span><span class="token punctuation">{</span>        pool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token operator">+</span>i<span class="token punctuation">,</span><span class="token string">"value"</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        pool.destroy();//临时调用，销毁连接池中的所有连接</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"program is end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="读写数据"><a href="#读写数据" class="headerlink" title="读写数据"></a>读写数据</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">.</span>RedisShardedPool<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> redis<span class="token punctuation">.</span>clients<span class="token punctuation">.</span>jedis<span class="token punctuation">.</span>ShardedJedis<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisShardedPoolUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 设置key的有效期，单位是秒     * @param key     * @param exTime     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Long <span class="token function">expire</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span><span class="token keyword">int</span> exTime<span class="token punctuation">)</span><span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        Long result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisShardedPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>exTime<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"expire key:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//exTime的单位是秒</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">setEx</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String value<span class="token punctuation">,</span><span class="token keyword">int</span> exTime<span class="token punctuation">)</span><span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        String result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisShardedPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">setex</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>exTime<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"setex key:{} value:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">set</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        String result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisShardedPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"set key:{} value:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getSet</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        String result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisShardedPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">getSet</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"getset key:{} value:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">get</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        String result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisShardedPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"get key:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Long <span class="token function">del</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        Long result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisShardedPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"del key:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Long <span class="token function">setnx</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> null<span class="token punctuation">;</span>        Long result <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            jedis <span class="token operator">=</span> RedisShardedPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">setnx</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"setnx key:{} value:{} error"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnBrokenResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        RedisShardedPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ShardedJedis jedis <span class="token operator">=</span> RedisShardedPool<span class="token punctuation">.</span><span class="token function">getJedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisPoolUtil<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"keyTest"</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String value <span class="token operator">=</span> RedisPoolUtil<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"keyTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisPoolUtil<span class="token punctuation">.</span><span class="token function">setEx</span><span class="token punctuation">(</span><span class="token string">"keyex"</span><span class="token punctuation">,</span><span class="token string">"valueex"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisPoolUtil<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span><span class="token string">"keyTest"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisPoolUtil<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token string">"keyTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String aaa <span class="token operator">=</span> RedisPoolUtil<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>aaa<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="Spring-Session单点登录"><a href="#Spring-Session单点登录" class="headerlink" title="Spring Session单点登录"></a>Spring Session单点登录</h2><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://spring.io/projects/spring-session" target="_blank" rel="noopener">官网</a></p><p><a href="https://docs.spring.io/spring-session/docs/current/reference/html5/" target="_blank" rel="noopener">官方文档</a></p><p><a href="https://github.com/spring-projects/spring-session/tree/1.2.x" target="_blank" rel="noopener">GitHub地址</a></p><p><a href="https://docs.spring.io/spring-session/docs/current/reference/html5/guides/java-redis.html" target="_blank" rel="noopener">Quick Start</a></p><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- spring session 单点登录 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.session<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-session-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="Spring-Session整合Redis"><a href="#Spring-Session整合Redis" class="headerlink" title="Spring Session整合Redis"></a>Spring Session整合Redis</h3><p><code>applicationContext.xml</code>引入整合配置文件</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>applicationContext-spring-session.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><p>新建<code>applicationContext-spring-session.xml</code>资源文件</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/tx<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>jdbc</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/jdbc<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>redisHttpSessionConfiguration<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maxInactiveIntervalInSeconds<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1800<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultCookieSerializer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.session.web.http.DefaultCookieSerializer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>domainName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>localhost<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>useHttpOnlyCookie<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cookiePath<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cookieMaxAge<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>31536000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jedisPoolConfig<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>redis.clients.jedis.JedisPoolConfig<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maxTotal<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jedisConnectionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.data.redis.connection.jedis.JedisConnectionFactory<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hostName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>192.168.1.104<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>port<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6379<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>poolConfig<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jedisPoolConfig<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h3 id="配置web-xml"><a href="#配置web-xml" class="headerlink" title="配置web.xml"></a>配置<code>web.xml</code></h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>springSessionRepositoryFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.DelegatingFilterProxy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>springSessionRepositoryFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>*.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span></code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>这里的<code>session</code>是经过包装过的代理类</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%8C%85%E8%A3%85%E4%BB%A3%E7%90%86%E7%B1%BB.png" alt></p><pre><code>session.setAttribute(Const.CURRENT_USER,response.getData());session.removeAttribute(Const.CURRENT_USER);User user = (User)session.getAttribute(Const.CURRENT_USER);</code></pre><h3 id="坑-1"><a href="#坑-1" class="headerlink" title="坑"></a>坑</h3><h4 id="Caused-by-org-springframework-beans-factory-NoSuchBeanDefinitionException-No-qualifying-bean-of-type-org-springframework-session-SessionRepository-found-for-dependency-expected-at-least-1-bean-which-qualifies-as-autowire-candidate-for-this-dependency-Dependency-annotations"><a href="#Caused-by-org-springframework-beans-factory-NoSuchBeanDefinitionException-No-qualifying-bean-of-type-org-springframework-session-SessionRepository-found-for-dependency-expected-at-least-1-bean-which-qualifies-as-autowire-candidate-for-this-dependency-Dependency-annotations" class="headerlink" title="Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.session.SessionRepository] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}"></a>Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.session.SessionRepository] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}</h4><p>描述： 启动报错</p><p>解决：修改<code>&lt;org.springframework.version&gt;4.0.0.RELEASE&lt;/org.springframework.version&gt;</code>为<br> <code>&lt;org.springframework.version&gt;4.0.3.RELEASE&lt;/org.springframework.version&gt;</code></p><h4 id="No-bean-named-‘springSessionRepositoryFilter’-is-defined"><a href="#No-bean-named-‘springSessionRepositoryFilter’-is-defined" class="headerlink" title="No bean named ‘springSessionRepositoryFilter’ is defined"></a>No bean named ‘springSessionRepositoryFilter’ is defined</h4><p>描述：启动报错，容器找不到该<code>bean</code></p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>springSessionRepositoryFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.DelegatingFilterProxy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>springSessionRepositoryFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>*.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span></code></pre><p>解决：</p><p><code>spring</code>配置文件没有引入<code>spring-session</code>整合配置文件</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>applicationContext-spring-session.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><h2 id="SpringMVC全局异常控制"><a href="#SpringMVC全局异常控制" class="headerlink" title="SpringMVC全局异常控制"></a>SpringMVC全局异常控制</h2><h3 id="Spring及SpringMVC包扫描隔离"><a href="#Spring及SpringMVC包扫描隔离" class="headerlink" title="Spring及SpringMVC包扫描隔离"></a>Spring及SpringMVC包扫描隔离</h3><h4 id="Spring扫描"><a href="#Spring扫描" class="headerlink" title="Spring扫描"></a>Spring扫描</h4><p>排除<code>controller</code>扫描注解</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mmall<span class="token punctuation">"</span></span> <span class="token attr-name">annotation-config</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>exclude-filter</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>annotation<span class="token punctuation">"</span></span> <span class="token attr-name">expression</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.stereotype.Controller<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">></span></span></code></pre><h4 id="SpringMVC扫描"><a href="#SpringMVC扫描" class="headerlink" title="SpringMVC扫描"></a>SpringMVC扫描</h4><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--springmvc扫描包指定到controller，防止重复扫描    use-default-filters="false" 关闭默认扫描 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mmall.controller<span class="token punctuation">"</span></span> <span class="token attr-name">annotation-config</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">use-default-filters</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>include-filter</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>annotation<span class="token punctuation">"</span></span> <span class="token attr-name">expression</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.stereotype.Controller<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">></span></span></code></pre><h3 id="Component注解"><a href="#Component注解" class="headerlink" title="@Component注解"></a>@Component注解</h3><p>异常包装类<code>ExceptionResolver.java</code>,必须要加上<code>@Component</code>注解，使其成为容器中的<code>bean</code>，<code>@Component</code>类似于<code>@Controller、@Service、@Repository</code></p><p><code>dao</code>层用<code>@Repository</code><br><code>service</code>层用<code>@Service</code><br><code>controller</code>层用<code>@Controller</code><br>其它的用<code>@Component</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Repository<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerExceptionResolver<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ModelAndView<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>view<span class="token punctuation">.</span>json<span class="token punctuation">.</span>MappingJacksonJsonView<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExceptionResolver</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerExceptionResolver</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ModelAndView <span class="token function">resolveException</span><span class="token punctuation">(</span>HttpServletRequest httpServletRequest<span class="token punctuation">,</span> HttpServletResponse httpServletResponse<span class="token punctuation">,</span> Object o<span class="token punctuation">,</span> Exception e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"{} Exception"</span><span class="token punctuation">,</span>httpServletRequest<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        ModelAndView modelAndView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJacksonJsonView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//当使用是jackson2.x的时候使用MappingJackson2JsonView，本项目使用的是1.9。</span>        modelAndView<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">,</span>ResponseCode<span class="token punctuation">.</span>ERROR<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        modelAndView<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"接口异常,详情请查看服务端日志的异常信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        modelAndView<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> modelAndView<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="SpringMVC拦截器"><a href="#SpringMVC拦截器" class="headerlink" title="SpringMVC拦截器"></a>SpringMVC拦截器</h2><h3 id="springmvc配置拦截器"><a href="#springmvc配置拦截器" class="headerlink" title="springmvc配置拦截器"></a>springmvc配置拦截器</h3><p><code>&lt;mvc:mapping path=&quot;/manage/**&quot;/&gt;</code>代表请求经过<code>/manage</code>目录下的<strong>子目录</strong>下的<code>controller</code>也会被拦截</p><p><code>&lt;mvc:mapping path=&quot;/manage/*&quot;/&gt;</code>代表请求经过<code>/manage</code>目录下的<code>controller</code>会被拦截，而子目录下的<code>controller</code>不会被拦截</p><p><code>&lt;mvc:exclude-mapping path=&quot;/manage/user/login.do&quot;/&gt;</code>配置不拦截某些请求</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>interceptors</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 定义在这里的，所有的都会拦截--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>interceptor</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--manage/a.do  /manage/*--></span>        <span class="token comment" spellcheck="true">&lt;!--manage/b.do  /manage/*--></span>        <span class="token comment" spellcheck="true">&lt;!--manage/product/save.do /manage/**--></span>        <span class="token comment" spellcheck="true">&lt;!--manage/order/detail.do /manage/**--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>mapping</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/manage/**<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--&lt;mvc:exclude-mapping path="/manage/user/login.do"/>--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mmall.controller.common.interceptor.AuthorityInterceptor<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>interceptor</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>interceptors</span><span class="token punctuation">></span></span></code></pre><h3 id="定义拦截器处理类"><a href="#定义拦截器处理类" class="headerlink" title="定义拦截器处理类"></a>定义拦截器处理类</h3><p><strong>preHandle</strong>请求到达<code>controll</code>之前会调用该方法</p><p><strong>postHandle</strong>请求到达<code>controller</code>处理后会调用该方法</p><p><strong>afterCompletion</strong>请求到达<code>controller</code>处理后返回<code>ModelAndView</code>后会调用该方法</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>common<span class="token punctuation">.</span>interceptor<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>Maps<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Const<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">.</span>ServerResponse<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CookieUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>JsonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>RedisShardedPoolUtil<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>HandlerMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ModelAndView<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>PrintWriter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthorityInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"preHandle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//请求中Controller中的方法名</span>        HandlerMethod handlerMethod <span class="token operator">=</span> <span class="token punctuation">(</span>HandlerMethod<span class="token punctuation">)</span>handler<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//解析HandlerMethod</span>        String methodName <span class="token operator">=</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String className <span class="token operator">=</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//解析参数,具体的参数key以及value是什么，我们打印日志</span>        StringBuffer requestParamBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map paramMap <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Iterator it <span class="token operator">=</span> paramMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            Map<span class="token punctuation">.</span>Entry entry <span class="token operator">=</span> <span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token punctuation">)</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String mapKey <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String mapValue <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>EMPTY<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//request这个参数的map，里面的value返回的是一个String[]</span>            Object obj <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                String<span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>obj<span class="token punctuation">;</span>                mapValue <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            requestParamBuffer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>mapKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>mapValue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span><span class="token string">"UserManageController"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span><span class="token string">"login"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"权限拦截器拦截到请求,className:{},methodName:{}"</span><span class="token punctuation">,</span>className<span class="token punctuation">,</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//如果是拦截到登录请求，不打印参数，因为参数里面有密码，全部会打印到日志中，防止日志泄露</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"权限拦截器拦截到请求,className:{},methodName:{},param:{}"</span><span class="token punctuation">,</span>className<span class="token punctuation">,</span>methodName<span class="token punctuation">,</span>requestParamBuffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        User user <span class="token operator">=</span> null<span class="token punctuation">;</span>        String loginToken <span class="token operator">=</span> CookieUtil<span class="token punctuation">.</span><span class="token function">readLoginToken</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>loginToken<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            String userJsonStr <span class="token operator">=</span> RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>loginToken<span class="token punctuation">)</span><span class="token punctuation">;</span>            user <span class="token operator">=</span> JsonUtil<span class="token punctuation">.</span><span class="token function">string2Obj</span><span class="token punctuation">(</span>userJsonStr<span class="token punctuation">,</span>User<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">==</span> null <span class="token operator">||</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> Const<span class="token punctuation">.</span>Role<span class="token punctuation">.</span>ROLE_ADMIN<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//返回false.即不会调用controller里的方法</span>            response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//geelynote 这里要添加reset，否则报异常 getWriter() has already been called for this response.</span>            response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//geelynote 这里要设置编码，否则会乱码</span>            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//geelynote 这里要设置返回值的类型，因为全部是json接口。</span>            PrintWriter out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//上传由于富文本的控件要求，要特殊处理返回值，这里面区分是否登录以及是否有权限</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span><span class="token string">"ProductManageController"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span><span class="token string">"richtextImgUpload"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    Map resultMap <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"请登录管理员"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>JsonUtil<span class="token punctuation">.</span><span class="token function">obj2String</span><span class="token punctuation">(</span>resultMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>JsonUtil<span class="token punctuation">.</span><span class="token function">obj2String</span><span class="token punctuation">(</span>ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"拦截器拦截,用户未登录"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span><span class="token string">"ProductManageController"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span><span class="token string">"richtextImgUpload"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    Map resultMap <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"无权限操作"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>JsonUtil<span class="token punctuation">.</span><span class="token function">obj2String</span><span class="token punctuation">(</span>resultMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>JsonUtil<span class="token punctuation">.</span><span class="token function">obj2String</span><span class="token punctuation">(</span>ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"拦截器拦截,用户无权限操作"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//geelynote 这里要关闭</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span> ModelAndView modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"postHandle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span> Exception ex<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"afterCompletion"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="登录死循环"><a href="#登录死循环" class="headerlink" title="登录死循环"></a>登录死循环</h3><p>描述：<code>springmvc</code>配置拦截器，如果登录请求也拦截的话，会导致一直登录不上，陷入死循环当中</p><p>解决：<br>方式一：可以在配置拦截器的时候过滤掉登录请求<code>&lt;mvc:exclude-mapping path=&quot;/manage/user/login.do&quot;/&gt;</code></p><p>方式二：拦截器处理类的<code>preHandle</code>方法会在到达<code>controller</code>调用该方法,因此可以在该方法中过滤掉登录请求不拦截</p><pre class=" language-java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span><span class="token string">"UserManageController"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span><span class="token string">"login"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"权限拦截器拦截到请求,className:{},methodName:{}"</span><span class="token punctuation">,</span>className<span class="token punctuation">,</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果是拦截到登录请求，不打印参数，因为参数里面有密码，全部会打印到日志中，防止日志泄露</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="重置响应对象"><a href="#重置响应对象" class="headerlink" title="重置响应对象"></a>重置响应对象</h3><p>描述：拦截器处理类的三个方法都是返回布尔值，而<code>controller</code>都是返回<code>json</code>数据，请求如果被拦截到没有到达<code>controller</code>，那么在拦截器处理类的<code>preHandle</code>方法中必须重置响应对象</p><p>解决：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">==</span> null <span class="token operator">||</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> Const<span class="token punctuation">.</span>Role<span class="token punctuation">.</span>ROLE_ADMIN<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//返回false.即不会调用controller里的方法</span>    response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//geelynote 这里要添加reset，否则报异常 getWriter() has already been called for this response.</span>    response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//geelynote 这里要设置编码，否则会乱码</span>    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//geelynote 这里要设置返回值的类型，因为全部是json接口。</span>    PrintWriter out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//上传由于富文本的控件要求，要特殊处理返回值，这里面区分是否登录以及是否有权限</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span><span class="token string">"ProductManageController"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span><span class="token string">"richtextImgUpload"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            Map resultMap <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"请登录管理员"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>JsonUtil<span class="token punctuation">.</span><span class="token function">obj2String</span><span class="token punctuation">(</span>resultMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>JsonUtil<span class="token punctuation">.</span><span class="token function">obj2String</span><span class="token punctuation">(</span>ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"拦截器拦截,用户未登录"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span><span class="token string">"ProductManageController"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span><span class="token string">"richtextImgUpload"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            Map resultMap <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"无权限操作"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>JsonUtil<span class="token punctuation">.</span><span class="token function">obj2String</span><span class="token punctuation">(</span>resultMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>JsonUtil<span class="token punctuation">.</span><span class="token function">obj2String</span><span class="token punctuation">(</span>ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"拦截器拦截,用户无权限操作"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//geelynote 这里要关闭</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="SpringMVC-RESTful改造"><a href="#SpringMVC-RESTful改造" class="headerlink" title="SpringMVC RESTful改造"></a>SpringMVC RESTful改造</h2><h3 id="编辑web-xml-1"><a href="#编辑web-xml-1" class="headerlink" title="编辑web.xml"></a>编辑<code>web.xml</code></h3><p>修改前</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcher<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcher<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>*.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span></code></pre><p>修改后</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcher<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcher<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span></code></pre><h3 id="controller使用RESTful风格"><a href="#controller使用RESTful风格" class="headerlink" title="controller使用RESTful风格"></a>controller使用RESTful风格</h3><h4 id="根据id查询产品"><a href="#根据id查询产品" class="headerlink" title="根据id查询产品"></a>根据id查询产品</h4><p>修改前</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"detail.do"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>ProductDetailVo<span class="token operator">></span> <span class="token function">detail</span><span class="token punctuation">(</span>Integer productId<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> iProductService<span class="token punctuation">.</span><span class="token function">getProductDetail</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>修改后</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/{productId}"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>ProductDetailVo<span class="token operator">></span> <span class="token function">detailRESTful</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> Integer productId<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> iProductService<span class="token punctuation">.</span><span class="token function">getProductDetail</span><span class="token punctuation">(</span>productId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="搜索产品"><a href="#搜索产品" class="headerlink" title="搜索产品"></a>搜索产品</h4><h5 id="keyword、categoryId不为空"><a href="#keyword、categoryId不为空" class="headerlink" title="keyword、categoryId不为空"></a><code>keyword、categoryId</code>不为空</h5><p>修改前</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"list.do"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>PageInfo<span class="token operator">></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>String keyword<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"categoryId"</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>Integer categoryId<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageNum"</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> pageNum<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageSize"</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">"10"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"orderBy"</span><span class="token punctuation">,</span>defaultValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> String orderBy<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> iProductService<span class="token punctuation">.</span><span class="token function">getProductByKeywordCategory</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span>categoryId<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>修改后</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//http://www.happymmall.com/product/手机/100012/1/10/price_asc</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/{keyword}/{categoryId}/{pageNum}/{pageSize}/{orderBy}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>PageInfo<span class="token operator">></span> <span class="token function">listRESTful</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"keyword"</span><span class="token punctuation">)</span>String keyword<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"categoryId"</span><span class="token punctuation">)</span>Integer categoryId<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageNum"</span><span class="token punctuation">)</span> Integer pageNum<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageSize"</span><span class="token punctuation">)</span> Integer pageSize<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"orderBy"</span><span class="token punctuation">)</span> String orderBy<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageNum <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageSize <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        orderBy <span class="token operator">=</span> <span class="token string">"price_asc"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> iProductService<span class="token punctuation">.</span><span class="token function">getProductByKeywordCategory</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span>categoryId<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="keyword、categoryId有一个为空"><a href="#keyword、categoryId有一个为空" class="headerlink" title="keyword、categoryId有一个为空"></a><code>keyword、categoryId</code>有一个为空</h5><h6 id="修改后版本一"><a href="#修改后版本一" class="headerlink" title="修改后版本一"></a>修改后版本一</h6><p><code>keyword</code>为空</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//    http://www.happymmall.com/product/100012/1/10/price_asc</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/{categoryId}/{pageNum}/{pageSize}/{orderBy}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>PageInfo<span class="token operator">></span> <span class="token function">listRESTfulBadcase</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"categoryId"</span><span class="token punctuation">)</span>Integer categoryId<span class="token punctuation">,</span>                                            <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageNum"</span><span class="token punctuation">)</span> Integer pageNum<span class="token punctuation">,</span>                                            <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageSize"</span><span class="token punctuation">)</span> Integer pageSize<span class="token punctuation">,</span>                                            <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"orderBy"</span><span class="token punctuation">)</span> String orderBy<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageNum <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageSize <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        orderBy <span class="token operator">=</span> <span class="token string">"price_asc"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> iProductService<span class="token punctuation">.</span><span class="token function">getProductByKeywordCategory</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span>categoryId<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><code>categoryId</code>为空</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/{keyword}/{pageNum}/{pageSize}/{orderBy}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>PageInfo<span class="token operator">></span> <span class="token function">listRESTfulBadcase</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"keyword"</span><span class="token punctuation">)</span>String keyword<span class="token punctuation">,</span>                                            <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageNum"</span><span class="token punctuation">)</span> Integer pageNum<span class="token punctuation">,</span>                                            <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageSize"</span><span class="token punctuation">)</span> Integer pageSize<span class="token punctuation">,</span>                                            <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"orderBy"</span><span class="token punctuation">)</span> String orderBy<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageNum <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageSize <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        orderBy <span class="token operator">=</span> <span class="token string">"price_asc"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> iProductService<span class="token punctuation">.</span><span class="token function">getProductByKeywordCategory</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span>null<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>浏览器请求<a href="http://localhost:8088/mmall_war_exploded/product/100012/1/10/price_asc" target="_blank" rel="noopener">http://localhost:8088/mmall_war_exploded/product/100012/1/10/price_asc</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/controller%E4%BD%BF%E7%94%A8RESTful%E9%A3%8E%E6%A0%BC.png" alt></p><p>发生了歧义，不知道要走哪一个方法，所以报错了</p><h6 id="修改后版本二"><a href="#修改后版本二" class="headerlink" title="修改后版本二"></a>修改后版本二</h6><p><code>categoryId</code>为空</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//http://www.happymmall.com/product/keyword/手机/1/10/price_asc</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/keyword/{keyword}/{pageNum}/{pageSize}/{orderBy}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>PageInfo<span class="token operator">></span> <span class="token function">listRESTful</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"keyword"</span><span class="token punctuation">)</span>String keyword<span class="token punctuation">,</span>                                                   <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageNum"</span><span class="token punctuation">)</span> Integer pageNum<span class="token punctuation">,</span>                                                   <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageSize"</span><span class="token punctuation">)</span> Integer pageSize<span class="token punctuation">,</span>                                                   <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"orderBy"</span><span class="token punctuation">)</span> String orderBy<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageNum <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageSize <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        orderBy <span class="token operator">=</span> <span class="token string">"price_asc"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> iProductService<span class="token punctuation">.</span><span class="token function">getProductByKeywordCategory</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span>null<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><code>keyword</code>为空</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//http://www.happymmall.com/product/category/100012/1/10/price_asc</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/category/{categoryId}/{pageNum}/{pageSize}/{orderBy}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>PageInfo<span class="token operator">></span> <span class="token function">listRESTful</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"categoryId"</span><span class="token punctuation">)</span>Integer categoryId<span class="token punctuation">,</span>                                                   <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageNum"</span><span class="token punctuation">)</span> Integer pageNum<span class="token punctuation">,</span>                                                   <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pageSize"</span><span class="token punctuation">)</span> Integer pageSize<span class="token punctuation">,</span>                                                   <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"orderBy"</span><span class="token punctuation">)</span> String orderBy<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageNum <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pageSize <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        pageSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        orderBy <span class="token operator">=</span> <span class="token string">"price_asc"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> iProductService<span class="token punctuation">.</span><span class="token function">getProductByKeywordCategory</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span>categoryId<span class="token punctuation">,</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">,</span>orderBy<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>浏览器访问<code>http://localhost:8088/mmall_war_exploded/product/keyword/手机/1/10/price_asc</code>和<code>http://localhost:8088/mmall_war_exploded/product/category/100002/1/10/price_asc</code></p><p>这样子就可以避免歧义</p><h2 id="Spring-Schedul定时任务"><a href="#Spring-Schedul定时任务" class="headerlink" title="Spring Schedul定时任务"></a>Spring Schedul定时任务</h2><h3 id="Cron生成器"><a href="#Cron生成器" class="headerlink" title="Cron生成器"></a>Cron生成器</h3><p><a href="http://cron.qqe2.com/" target="_blank" rel="noopener">在线Cron表达式生成器</a></p><h3 id="定时任务配置"><a href="#定时任务配置" class="headerlink" title="定时任务配置"></a>定时任务配置</h3><p>注解方式配置定时任务</p><h4 id="编辑spring配置文件"><a href="#编辑spring配置文件" class="headerlink" title="编辑spring配置文件"></a>编辑spring配置文件</h4><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span><span class="token attr-name"><span class="token namespace">xmlns:</span>task</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/task<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/task     http://www.springframework.org/schema/task/spring-task.xsd<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">&lt;task:</span>annotation-driven</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><h4 id="创建定时任务类"><a href="#创建定时任务类" class="headerlink" title="创建定时任务类"></a>创建定时任务类</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>task<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>IOrderService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>PropertiesUtil<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Scheduled<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CloseOrderTask</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> IOrderService iOrderService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//每隔5秒执行一次</span>    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron<span class="token operator">=</span><span class="token string">"*/5 * * * * ?"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeOrderTaskV1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"关闭订单定时任务启动"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> hour <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"close.order.task.time.hour"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        iOrderService.closeOrder(hour);</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"关闭订单定时任务结束"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="MySQL行锁、表锁"><a href="#MySQL行锁、表锁" class="headerlink" title="MySQL行锁、表锁"></a>MySQL行锁、表锁</h2><h3 id="行锁"><a href="#行锁" class="headerlink" title="行锁"></a>行锁</h3><h4 id="明确的主键"><a href="#明确的主键" class="headerlink" title="明确的主键"></a>明确的主键</h4><h5 id="明确指定主键id，并且有结果集-产生行锁"><a href="#明确指定主键id，并且有结果集-产生行锁" class="headerlink" title="明确指定主键id，并且有结果集,产生行锁"></a>明确指定主键<code>id</code>，并且有结果集,产生行锁</h5><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>    <span class="token operator">*</span><span class="token keyword">FROM</span>    mmall_product<span class="token keyword">WHERE</span>    id <span class="token operator">=</span> <span class="token string">'26'</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></code></pre><h5 id="明确指定主键id，并且无结果集-无锁"><a href="#明确指定主键id，并且无结果集-无锁" class="headerlink" title="明确指定主键id，并且无结果集,无锁"></a>明确指定主键<code>id</code>，并且无结果集,无锁</h5><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>    <span class="token operator">*</span><span class="token keyword">FROM</span>    mmall_product<span class="token keyword">WHERE</span>    id <span class="token operator">=</span> <span class="token string">'66'</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></code></pre><h3 id="表锁"><a href="#表锁" class="headerlink" title="表锁"></a>表锁</h3><h4 id="无明确的主键"><a href="#无明确的主键" class="headerlink" title="无明确的主键"></a>无明确的主键</h4><h5 id="无主键-产生表锁"><a href="#无主键-产生表锁" class="headerlink" title="无主键,产生表锁"></a>无主键,产生表锁</h5><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>    <span class="token operator">*</span><span class="token keyword">FROM</span>    mmall_product<span class="token keyword">WHERE</span>    NAME <span class="token operator">=</span> <span class="token string">'Apple iPhone 7 Plus (A1661) 128G 玫瑰金色 移动联通电信4G手机'</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></code></pre><h5 id="主键不明确产生表锁"><a href="#主键不明确产生表锁" class="headerlink" title="主键不明确产生表锁"></a>主键不明确产生表锁</h5><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>    <span class="token operator">*</span><span class="token keyword">FROM</span>    mmall_product<span class="token keyword">WHERE</span>    id <span class="token operator">&lt;></span> <span class="token string">'66'</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>    <span class="token operator">*</span><span class="token keyword">FROM</span>    mmall_product<span class="token keyword">WHERE</span>    id <span class="token operator">LIKE</span> <span class="token string">'66'</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span></code></pre><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>关单:查询订单的时候，订单包含了子订单，根据子订单号查询产品</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectStockByProductId<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>int<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.Integer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>selectstockfrom mmall_productwhere id = #{id}for update<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h3 id="xml转义"><a href="#xml转义" class="headerlink" title="xml转义"></a>xml转义</h3><p>用<code>&amp;lt![CDATA[]]&gt;&amp;gt</code>包裹住有转义的字符即可</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectOrderStatusByCreateTime<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>SELECT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">refid</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Base_Column_List<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>from mmall_orderwhere status = #{status}&amp;lt![CDATA[and create_time &lt;= #{date}]]&amp;gtorder by create_time desc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h2 id="原生分布式锁"><a href="#原生分布式锁" class="headerlink" title="原生分布式锁"></a>原生分布式锁</h2><p>Spring Schedule+Redis分布式锁构建分布式任务调度</p><h3 id="简单版"><a href="#简单版" class="headerlink" title="简单版"></a>简单版</h3><p>获取到锁，锁住时间5秒，如果此期间发生中断，会导致死锁</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//    @Scheduled(cron="0 */1 * * * ?")</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeOrderTaskV2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"关闭订单定时任务启动"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> lockTimeout <span class="token operator">=</span> Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"lock.timeout"</span><span class="token punctuation">,</span><span class="token string">"5000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Long setnxResult <span class="token operator">=</span> RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">setnx</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>lockTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>setnxResult <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> setnxResult<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果返回值是1，代表设置成功，获取锁</span>            <span class="token function">closeOrder</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"没有获得分布式锁:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"关闭订单定时任务结束"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">closeOrder</span><span class="token punctuation">(</span>String lockName<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//有效期50秒，防止死锁</span>        RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>lockName<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"获取{},ThreadName:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> hour <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"close.order.task.time.hour"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        iOrderService<span class="token punctuation">.</span><span class="token function">closeOrder</span><span class="token punctuation">(</span>hour<span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"释放{},ThreadName:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"==============================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="安全版"><a href="#安全版" class="headerlink" title="安全版"></a>安全版</h3><p>双重防死锁</p><p>未获取到锁，继续判断，判断时间戳，看是否可以重置并获取到锁</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron<span class="token operator">=</span><span class="token string">"0 */1 * * * ?"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeOrderTaskV3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"关闭订单定时任务启动"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> lockTimeout <span class="token operator">=</span> Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"lock.timeout"</span><span class="token punctuation">,</span><span class="token string">"5000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Long setnxResult <span class="token operator">=</span> RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">setnx</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>lockTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>setnxResult <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> setnxResult<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">closeOrder</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//未获取到锁，继续判断，判断时间戳，看是否可以重置并获取到锁</span>            String lockValueStr <span class="token operator">=</span> RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>lockValueStr <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>lockValueStr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                String getSetResult <span class="token operator">=</span> RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">getSet</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>lockTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//再次用当前时间戳getset。</span>                <span class="token comment" spellcheck="true">//返回给定的key的旧值，->旧值判断，是否可以获取锁</span>                <span class="token comment" spellcheck="true">//当key没有旧值时，即key不存在时，返回nil ->获取锁</span>                <span class="token comment" spellcheck="true">//这里我们set了一个新的value值，获取旧的值。</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>getSetResult <span class="token operator">==</span> null <span class="token operator">||</span> <span class="token punctuation">(</span>getSetResult <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>lockValueStr<span class="token punctuation">,</span>getSetResult<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//真正获取到锁</span>                    <span class="token function">closeOrder</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"没有获取到分布式锁:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"没有获取到分布式锁:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"关闭订单定时任务结束"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">closeOrder</span><span class="token punctuation">(</span>String lockName<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//有效期50秒，防止死锁</span>        RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>lockName<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"获取{},ThreadName:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> hour <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"close.order.task.time.hour"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        iOrderService<span class="token punctuation">.</span><span class="token function">closeOrder</span><span class="token punctuation">(</span>hour<span class="token punctuation">)</span><span class="token punctuation">;</span>        RedisShardedPoolUtil<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"释放{},ThreadName:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"==============================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h2 id="Redisson分布式锁"><a href="#Redisson分布式锁" class="headerlink" title="Redisson分布式锁"></a>Redisson分布式锁</h2><h3 id="编辑pom-xml-2"><a href="#编辑pom-xml-2" class="headerlink" title="编辑pom.xml"></a>编辑pom.xml</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.redisson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>redisson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.dataformat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-dataformat-avro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="使用Redisson分布式锁"><a href="#使用Redisson分布式锁" class="headerlink" title="使用Redisson分布式锁"></a>使用Redisson分布式锁</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//    @Scheduled(cron="0 */1 * * * ?")</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeOrderTaskV4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        RLock lock <span class="token operator">=</span> redissonManager<span class="token punctuation">.</span><span class="token function">getRedisson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> getLock <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>getLock <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Redisson获取到分布式锁:{},ThreadName:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> hour <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"close.order.task.time.hour"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//                iOrderService.closeOrder(hour);</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Redisson没有获取到分布式锁:{},ThreadName:{}"</span><span class="token punctuation">,</span>Const<span class="token punctuation">.</span>REDIS_LOCK<span class="token punctuation">.</span>CLOSE_ORDER_TASK_LOCK<span class="token punctuation">,</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Redisson分布式锁获取异常"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>getLock<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Redisson分布式锁释放锁"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 集群 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
            <tag> Redis </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeJS</title>
      <link href="/2019/03/20/nodejs/"/>
      <url>/2019/03/20/nodejs/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="NodeJS入门"><a href="#NodeJS入门" class="headerlink" title="NodeJS入门"></a>NodeJS入门</h2></blockquote><blockquote><h3 id="NodeJS模块"><a href="#NodeJS模块" class="headerlink" title="NodeJS模块"></a>NodeJS模块</h3></blockquote><blockquote><h4 id="http模块"><a href="#http模块" class="headerlink" title="http模块"></a>http模块</h4></blockquote><p>server.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">switch</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">case</span> <span class="token string">'/aaa'</span><span class="token punctuation">:</span>      res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'/bbb'</span><span class="token punctuation">:</span>      res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'dddd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'/1.html'</span><span class="token punctuation">:</span>      res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;html>&lt;head>&lt;/head>&lt;body>sdfasfasf&lt;/body>&lt;/html>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>server2.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`www</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>req<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>      res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'404'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//?</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="断言——assert"><a href="#断言——assert" class="headerlink" title="断言——assert"></a>断言——assert</h4></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> assert<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'assert'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">assert</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'必须传2个参数'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a<span class="token operator">==</span><span class="token string">'number'</span><span class="token punctuation">,</span> <span class="token string">'第一个参数必须是数字'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> b<span class="token operator">==</span><span class="token string">'number'</span><span class="token punctuation">,</span> <span class="token string">'第二个参数必须是数字'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="File-System"><a href="#File-System" class="headerlink" title="File System"></a>File System</h4></blockquote><p>读写文件</p><p>fs.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">'1.txt'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'有错'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//'ads'.charCodeAt(0)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*fs.writeFile('3.txt', 'erqwreqwere', err=>{  if(err){    console.log(err);  }else{    console.log('成功');  }});*/</span></code></pre><p>fs2.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">'ofo.png'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">'ofo2.png'</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h4></blockquote><p>进程和线程的区别：</p><p>进程拥有独立的执行空间、存储<br>同一个进程内的所有线程共享一套空间、代码</p><p>多进程(PHP、Node)   成本高(慢)；安全(进程间隔离)；进程间通信麻烦；写代码简单<br>多线程(Java、C)   成本低(快)；不安全(线程要死一块死)；线程间通信容易；写代码复杂</p><p>进程间通信的几种方式<br>管道<br>共享内存<br>socket</p><blockquote><h4 id="Crypto——签名"><a href="#Crypto——签名" class="headerlink" title="Crypto——签名"></a>Crypto——签名</h4></blockquote><p>MD5是单向散列生成hash值，不可逆破解</p><p>md5.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> crypto<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'crypto'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span>crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">'md5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>obj<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// obj.update('123');</span><span class="token comment" spellcheck="true">// obj.update('4');</span><span class="token comment" spellcheck="true">// obj.update('56');</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>双重加密</p><p>md5_2.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> crypto<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'crypto'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">md5</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">let</span> obj<span class="token operator">=</span>crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">'md5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  obj<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> obj<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'se32ssdfsd43'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h4></blockquote><p>获取系统信息</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> os<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h4></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> str<span class="token operator">=</span><span class="token string">'/var/local/www/aaa/1.png'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//dirname</span><span class="token comment" spellcheck="true">//basename</span><span class="token comment" spellcheck="true">//extname</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="Events事件队列"><a href="#Events事件队列" class="headerlink" title="Events事件队列"></a>Events事件队列</h4></blockquote><p>和普通js函数的定义调用区别：解耦</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> Event<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'events'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>EventEmitter<span class="token punctuation">;</span><span class="token keyword">let</span> ev<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//1.监听(接收)</span>ev<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'msg'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'收到了msg事件：'</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//2.派发(发送)</span>ev<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'msg'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*function msg(a, b, c){  console.log('收到了msg事件：', a, b, c);}msg(12, 5, 88);*/</span></code></pre><blockquote><h4 id="Query-Strings、URL"><a href="#Query-Strings、URL" class="headerlink" title="Query Strings、URL"></a>Query Strings、URL</h4></blockquote><p>地址解析</p><p>querystring.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> querystring<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'querystring'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span>querystring<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">'ie=utf-8&amp;f=8&amp;rsv_bp=0&amp;rsv_idx=1&amp;tn=baidu&amp;wd=aa&amp;rsv_pq=f80d982000063ffb&amp;rsv_t=6498LAZdRZjq9v4v0hs88kZItnCjDpT6UNBKr%2FF83%2F%2Bg4eiPURW2eQl9Iwc&amp;rqlang=cn&amp;rsv_enter=1&amp;rsv_sug2=0&amp;inputT=10&amp;rsv_sug4=10'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>url.js</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> url<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span>url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">'https://www.baidu.com:8080/s?ie=utf-8&amp;f=8&amp;rsv_bp=0&amp;rsv_idx=1&amp;tn=baidu&amp;wd=aa&amp;rsv_pq=f80d982000063ffb&amp;rsv_t=6498LAZdRZjq9v4v0hs88kZItnCjDpT6UNBKr%2FF83%2F%2Bg4eiPURW2eQl9Iwc&amp;rqlang=cn&amp;rsv_enter=1&amp;rsv_sug2=0&amp;inputT=10&amp;rsv_sug4=10'</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4></blockquote><p>DNS、Domain</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> dns<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'dns'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dns<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'www.goole.com'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'解析失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="流操作——Stream"><a href="#流操作——Stream" class="headerlink" title="流操作——Stream"></a>流操作——Stream</h4></blockquote><p>连续数据都是流——视频流、网络流、文件流、语音流</p><blockquote><h4 id="TLS-SSL"><a href="#TLS-SSL" class="headerlink" title="TLS/SSL"></a>TLS/SSL</h4></blockquote><p>加密、安全</p><blockquote><h4 id="ZLIB——gz"><a href="#ZLIB——gz" class="headerlink" title="ZLIB——gz"></a>ZLIB——gz</h4></blockquote><p>压缩</p><blockquote><h2 id="NodeJS数据交互"><a href="#NodeJS数据交互" class="headerlink" title="NodeJS数据交互"></a>NodeJS数据交互</h2></blockquote><blockquote><h3 id="设置响应头"><a href="#设置响应头" class="headerlink" title="设置响应头"></a>设置响应头</h3></blockquote><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E8%AE%BE%E7%BD%AE%E5%93%8D%E5%BA%94%E5%A4%B4.png" alt></p><blockquote><h3 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h3></blockquote><p>数据放在url地址上，存放的数量小(32k)</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/get%E8%AF%B7%E6%B1%82.png" alt></p><blockquote><h3 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h3></blockquote><p>在body里面,存放的数据量大(1G),一个大数据包切成一堆小包传输,容错性强</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/post%E8%AF%B7%E6%B1%82.png" alt></p><blockquote><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3></blockquote><p>一切来自前台的数据都不可信<br>前后台都得进行数据校验<br>  前台校验：提高用户体验<br>  后台校验：提高安全性</p><blockquote><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3></blockquote><blockquote><h4 id="关系型数据库——MySQL、Oracle"><a href="#关系型数据库——MySQL、Oracle" class="headerlink" title="关系型数据库——MySQL、Oracle"></a>关系型数据库——MySQL、Oracle</h4></blockquote><blockquote><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5></blockquote><p>最常见、最常用,数据之间是有关系的<br>MySQL使用占比80%，免费，绝大多数普通应用，性能很高、安全性很高，容灾略差<br>Oracle收费，应用在金融、医疗，容灾特别强</p><blockquote><h5 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h5></blockquote><blockquote><h6 id="增"><a href="#增" class="headerlink" title="增"></a>增</h6></blockquote><p>INSERT INTO 表 (字段列表) VALUES(值列表)</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> user_table <span class="token punctuation">(</span>ID<span class="token punctuation">,</span> name<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> chinese<span class="token punctuation">,</span> math<span class="token punctuation">,</span> english<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h6 id="删"><a href="#删" class="headerlink" title="删"></a>删</h6></blockquote><p>DELETE FROM 表 WHERE 条件</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> user_table <span class="token keyword">WHERE</span> ID<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span></code></pre><blockquote><h6 id="改"><a href="#改" class="headerlink" title="改"></a>改</h6></blockquote><p>UPDATE 表 SET 字段=值, 字段2=值2, … WHERE 条件</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">UPDATE</span> user_table <span class="token keyword">SET</span> chinese<span class="token operator">=</span><span class="token number">100</span> <span class="token keyword">WHERE</span> ID<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span></code></pre><blockquote><h6 id="查"><a href="#查" class="headerlink" title="查"></a>查</h6></blockquote><p>SELECT 字段列表 FROM 表 WHERE 条件</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> gender <span class="token keyword">FROM</span> user_table <span class="token keyword">WHERE</span> ID<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="文件型数据库——sqlite"><a href="#文件型数据库——sqlite" class="headerlink" title="文件型数据库——sqlite"></a>文件型数据库——sqlite</h4></blockquote><p>使用简单、存储数据量小</p><blockquote><h4 id="文档型数据库——MongoDB"><a href="#文档型数据库——MongoDB" class="headerlink" title="文档型数据库——MongoDB"></a>文档型数据库——MongoDB</h4></blockquote><p>直接存储异构数据，使用方便</p><blockquote><h4 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h4></blockquote><p>没有复杂的关系、对性能有极高的要求常见的有redis、memcached、hypertable、bigtable</p><blockquote><h2 id="NodeJS进阶上"><a href="#NodeJS进阶上" class="headerlink" title="NodeJS进阶上"></a>NodeJS进阶上</h2></blockquote><blockquote><h3 id="文件数据解析"><a href="#文件数据解析" class="headerlink" title="文件数据解析"></a>文件数据解析</h3></blockquote><blockquote><h4 id="表单的三种POST"><a href="#表单的三种POST" class="headerlink" title="表单的三种POST"></a>表单的三种POST</h4></blockquote><p><code>text/plain</code>,用的很少，纯文字<br><code>application/x-www-form-urlencoded</code>,默认,以url编码方式,<code>xxx=xxx&amp;xxx=xx...</code><br><code>multipart/form-data</code>上传文件内容</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E8%A1%A8%E5%8D%95post%E8%AF%B7%E6%B1%823%E7%A7%8D%E6%96%B9%E5%BC%8F.png" alt></p><p>file上传，是post请求方式</p><blockquote><h4 id="普通纯文本表单文件上传"><a href="#普通纯文本表单文件上传" class="headerlink" title="普通纯文本表单文件上传"></a>普通纯文本表单文件上传</h4></blockquote><p>普通纯文本文件上传可以用字符串拼接接收，有弊端，如果是图片文件上传，用字符串接收会出现数据错乱</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%99%AE%E9%80%9A%E7%BA%AF%E6%96%87%E6%9C%AC%E8%A1%A8%E5%8D%95%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.png" alt></p><p>描述：可以看到纯文本文件上传请求了2个资源</p><p>浏览器<br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%99%AE%E9%80%9A%E7%BA%AF%E6%96%87%E6%9C%AC%E8%A1%A8%E5%8D%95%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A02.png" alt></p><p>后台结果输出</p><p>包含了前台表单用户名、密码和纯文本文件的描述和内容</p><pre><code>/upload------WebKitFormBoundaryNIoabcKEXajTUMAIContent-Disposition: form-data; name=&quot;user&quot;shenlibing------WebKitFormBoundaryNIoabcKEXajTUMAIContent-Disposition: form-data; name=&quot;pass&quot;000000------WebKitFormBoundaryNIoabcKEXajTUMAIContent-Disposition: form-data; name=&quot;f1&quot;; filename=&quot;1.txt&quot;Content-Type: text/plainabc------WebKitFormBoundaryNIoabcKEXajTUMAI--/favicon.ico</code></pre><blockquote><h4 id="Buffer接收文件上传的原始二进制数据"><a href="#Buffer接收文件上传的原始二进制数据" class="headerlink" title="Buffer接收文件上传的原始二进制数据"></a><code>Buffer</code>接收文件上传的原始二进制数据</h4></blockquote><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0post%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8.png" alt></p><pre><code>/upload&lt;Buffer 2d 2d 2d 2d 2d 2d 57 65 62 4b 69 74 46 6f 72 6d 42 6f 75 6e 64 61 72 79 75 42 6d 6b 78 4a 65 51 6d 35 6b 4a 4f 68 59 65 0d 0a 43 6f 6e 74 65 6e 74 2d ... &gt;/favicon.ico&lt;Buffer &gt;</code></pre><blockquote><h4 id="Buffer数据进行查找、截取、切分"><a href="#Buffer数据进行查找、截取、切分" class="headerlink" title="Buffer数据进行查找、截取、切分"></a>Buffer数据进行查找、截取、切分</h4></blockquote><p>如果是非纯文本文件上传，用字符串接收会破坏数据的完整性，需要用<code>Buffer</code>接收二进制数据</p><blockquote><h5 id="Buffer数据查找"><a href="#Buffer数据查找" class="headerlink" title="Buffer数据查找"></a><code>Buffer</code>数据查找</h5></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span><span class="token string">'abccc-=-dddder-=-qwerqwer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'-=-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h5 id="Buffer数据截取"><a href="#Buffer数据截取" class="headerlink" title="Buffer数据截取"></a><code>Buffer</code>数据截取</h5></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span><span class="token string">'abccc-=-dddder-=-qwerqwer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h5 id="Buffer数据切分"><a href="#Buffer数据切分" class="headerlink" title="Buffer数据切分"></a><code>Buffer</code>数据切分</h5></blockquote><p><code>Buffer</code>本身不具有<code>split</code>方法</p><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span><span class="token string">'abccc-=-dddder-=-qwerqwer'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Buffer<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>split<span class="token operator">=</span>Buffer<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>split<span class="token operator">||</span><span class="token keyword">function</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> cur<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> cur<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cur<span class="token operator">=</span>n<span class="token operator">+</span>b<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> arr<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> arr<span class="token operator">=</span>b<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'-=-'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>buffer<span class="token operator">=</span><span class="token operator">></span>buffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="解析数据"><a href="#解析数据" class="headerlink" title="解析数据"></a>解析数据</h4></blockquote><blockquote><h5 id="数据化简"><a href="#数据化简" class="headerlink" title="数据化简"></a>数据化简</h5></blockquote><p>先对纯文本文件上传用字符串拼接的结果进行分析<br>化简版本一</p><pre><code>分隔符Content-Disposition: form-data; name=&quot;user&quot;shenlibing分隔符Content-Disposition: form-data; name=&quot;pass&quot;000000分隔符Content-Disposition: form-data; name=&quot;f1&quot;; filename=&quot;1.txt&quot;Content-Type: text/plainabc分隔符--</code></pre><p>化简版本二：每一行末尾会自动加上<code>\r\n</code></p><pre><code>分隔符\r\nContent-Disposition: form-data; name=&quot;user&quot;\r\n\r\nshenlibing\r\n分隔符\r\nContent-Disposition: form-data; name=&quot;pass&quot;\r\n\r\n000000\r\n分隔符\r\nContent-Disposition: form-data; name=&quot;f1&quot;; filename=&quot;1.txt&quot;\r\nContent-Type: text/plain\r\n\r\nabc\r\n分隔符--\r\n</code></pre><p>化简版本三</p><pre><code>分隔符\r\n数据描述\r\n\r\n数据值\r\n分隔符\r\n数据描述\r\n\r\n数据值\r\n分隔符\r\n数据描述1\r\n数据描述2\r\n\r\n文件内容\r\n分隔符--\r\n</code></pre><p>化简到版本三的时候，就可以开始解析数据了</p><blockquote><h5 id="用分隔符切开数据"><a href="#用分隔符切开数据" class="headerlink" title="用分隔符切开数据"></a>用分隔符切开数据</h5></blockquote><pre><code>[  空,  \r\n数据描述\r\n\r\n数据值\r\n,  \r\n数据描述\r\n\r\n数据值\r\n,  \r\n数据描述1\r\n数据描述2\r\n\r\n&lt;文件内容&gt;\r\n,  --\r\n]</code></pre><blockquote><h5 id="丢弃头尾元素"><a href="#丢弃头尾元素" class="headerlink" title="丢弃头尾元素"></a>丢弃头尾元素</h5></blockquote><pre><code>[  \r\n数据描述\r\n\r\n数据值\r\n,  \r\n数据描述\r\n\r\n数据值\r\n,  \r\n数据描述1\r\n数据描述2\r\n\r\n&lt;文件内容&gt;\r\n,]</code></pre><blockquote><h5 id="丢弃每一项的头尾-r-n"><a href="#丢弃每一项的头尾-r-n" class="headerlink" title="丢弃每一项的头尾\r\n"></a>丢弃每一项的头尾<code>\r\n</code></h5></blockquote><pre><code>[  数据描述\r\n\r\n数据值,  数据描述\r\n\r\n数据值,  数据描述1\r\n数据描述2\r\n\r\n&lt;文件内容&gt;,]</code></pre><blockquote><h5 id="用第一次出现的-r-n-r-n切分"><a href="#用第一次出现的-r-n-r-n切分" class="headerlink" title="用第一次出现的\r\n\r\n切分"></a>用第一次出现的<code>\r\n\r\n</code>切分</h5></blockquote><p> 普通数据：[数据描述, 数据值]<br> 文件数据：[数据描述1\r\n数据描述2, &lt;文件内容&gt;]</p><blockquote><h5 id="判断描述的里面有没有-r-n"><a href="#判断描述的里面有没有-r-n" class="headerlink" title="判断描述的里面有没有\r\n"></a>判断描述的里面有没有<code>\r\n</code></h5></blockquote><p>有的话就是文件数据：[数据描述1\r\n数据描述2, &lt;文件内容&gt;]<br>没有的话就是普通数据：[数据描述, 数据值]</p><blockquote><h5 id="分析数据描述"><a href="#分析数据描述" class="headerlink" title="分析数据描述"></a>分析数据描述</h5></blockquote><blockquote><h4 id="文件上传代码实现"><a href="#文件上传代码实现" class="headerlink" title="文件上传代码实现"></a>文件上传代码实现</h4></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> common<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./libs/common'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> uuid<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'uuid/v4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">let</span> data<span class="token operator">=</span>Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//data</span>    <span class="token comment" spellcheck="true">//解析二进制文件上传数据</span>    <span class="token keyword">let</span> post<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> files<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'content-type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> str<span class="token operator">=</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'content-type'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'; '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> boundary<span class="token operator">=</span><span class="token string">'--'</span><span class="token operator">+</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//1.用"分隔符切分整个数据"</span>        <span class="token keyword">let</span> arr<span class="token operator">=</span>data<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>boundary<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.丢弃头尾两个数据</span>        arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3.丢弃掉每个数据头尾的"\r\n"</span>        arr<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>buffer<span class="token operator">=</span><span class="token operator">></span>buffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>buffer<span class="token punctuation">.</span>length<span class="token number">-2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//4.每个数据在第一个"\r\n\r\n"处切成两半</span>        arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>buffer<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          <span class="token keyword">let</span> n<span class="token operator">=</span>buffer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'\r\n\r\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> disposition<span class="token operator">=</span>buffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> content<span class="token operator">=</span>buffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          disposition<span class="token operator">=</span>disposition<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>disposition<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'\r\n'</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//普通数据</span>            <span class="token comment" spellcheck="true">//Content-Disposition: form-data; name="user"</span>            content<span class="token operator">=</span>content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> name<span class="token operator">=</span>disposition<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'; '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            name<span class="token operator">=</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            post<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span>content<span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//文件数据</span>            <span class="token comment" spellcheck="true">/*Content-Disposition: form-data; name="f1"; filename="a.txt"\r\n            Content-Type: text/plain*/</span>            <span class="token keyword">let</span> <span class="token punctuation">[</span>line1<span class="token punctuation">,</span> line2<span class="token punctuation">]</span><span class="token operator">=</span>disposition<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\r\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> <span class="token punctuation">[</span><span class="token punctuation">,</span>name<span class="token punctuation">,</span>filename<span class="token punctuation">]</span><span class="token operator">=</span>line1<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'; '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> type<span class="token operator">=</span>line2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">': '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            name<span class="token operator">=</span>name<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            name<span class="token operator">=</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>name<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            filename<span class="token operator">=</span>filename<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            filename<span class="token operator">=</span>filename<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>filename<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> path<span class="token operator">=</span><span class="token template-string"><span class="token string">`upload/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">uuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\-/g</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>            fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> content<span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'文件写入失败'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                files<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span>filename<span class="token punctuation">,</span> path<span class="token punctuation">,</span> type<span class="token punctuation">}</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//5.完成</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>post<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h3 id="流操作"><a href="#流操作" class="headerlink" title="流操作"></a>流操作</h3></blockquote><blockquote><h4 id="fs-readFile和fs-writeFile的弊端"><a href="#fs-readFile和fs-writeFile的弊端" class="headerlink" title="fs.readFile和fs.writeFile的弊端"></a><code>fs.readFile</code>和<code>fs.writeFile</code>的弊端</h4></blockquote><p>描述：以上文件上传的一个瑕疵就是会等到所有数据都到达了才开始处理，然后通过<code>fs.writeFile</code>上传文件</p><pre class=" language-js"><code class="language-js">http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`www</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>req<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><code>fs.readFile</code>先把所有数据全读到内存中，然后回调,这种方式极其占用内存且资源利用极其不充分，读取文件的过程中网络传输一直空闲，等到文件IO读取完毕，IO一直空闲，网络传输变得繁忙</p><p>解决：收到一部分就解析一部分，极大节约内存,使用流读取文件，读一点、发一点</p><blockquote><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4></blockquote><p>读取流<code>fs.createReadStream</code><br>写入流<code>fs.createWriteStream</code></p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">let</span> rs<span class="token operator">=</span>fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`www</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>req<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h3 id="gz压缩"><a href="#gz压缩" class="headerlink" title="gz压缩"></a>gz压缩</h3></blockquote><blockquote><h4 id="无gz压缩传输"><a href="#无gz压缩传输" class="headerlink" title="无gz压缩传输"></a>无gz压缩传输</h4></blockquote><p>没有通过<code>gz</code>压缩传输,请求资源<code>1.html</code>文件大小<code>321B</code>，<code>jquery.js</code>文件大小<code>262KB</code></p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> zlib<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'zlib'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">let</span> rs<span class="token operator">=</span>fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`www</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>req<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*res.setHeader('content-encoding', 'gzip');  let gz=zlib.createGzip();  rs.pipe(gz).pipe(res);*/</span>  rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%B2%A1%E6%9C%89%E9%80%9A%E8%BF%87gz%E5%8E%8B%E7%BC%A9%E4%BC%A0%E8%BE%93.png" alt></p><blockquote><h4 id="gz压缩传输"><a href="#gz压缩传输" class="headerlink" title="gz压缩传输"></a>gz压缩传输</h4></blockquote><p>读写流,通过<code>gz</code>压缩传输,请求资源<code>1.html</code>文件大小<code>292B</code>，<code>jquery.js</code>文件大小<code>77.8KB</code></p><p>创建读取流读取<code>www${req.url}</code>文件，通过<code>gz</code>压缩、加密该文件然后返回给浏览器，需要设置响应头<code>res.setHeader(&#39;content-encoding&#39;, &#39;gzip&#39;)</code>,让浏览器识别该资源是通过<code>gz</code>压缩的文件</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> zlib<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'zlib'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">let</span> rs<span class="token operator">=</span>fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`www</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>req<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//rs.pipe(res);</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'content-encoding'</span><span class="token punctuation">,</span> <span class="token string">'gzip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> gz<span class="token operator">=</span>zlib<span class="token punctuation">.</span><span class="token function">createGzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gz<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%80%9A%E8%BF%87gz%E5%8E%8B%E7%BC%A9%E4%BC%A0%E8%BE%93.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%80%9A%E8%BF%87gz%E5%8E%8B%E7%BC%A9%E4%BC%A0%E8%BE%932.png" alt></p><blockquote><h2 id="NodeJS进阶下"><a href="#NodeJS进阶下" class="headerlink" title="NodeJS进阶下"></a>NodeJS进阶下</h2></blockquote><blockquote><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3></blockquote><blockquote><h4 id="标记文件修改时间实现缓存"><a href="#标记文件修改时间实现缓存" class="headerlink" title="标记文件修改时间实现缓存"></a>标记文件修改时间实现缓存</h4></blockquote><blockquote><h5 id="获得文件修改时间"><a href="#获得文件修改时间" class="headerlink" title="获得文件修改时间"></a>获得文件修改时间</h5></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span><span class="token string">'./www/1.html'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> stat<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'获取文件信息失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stat<span class="token punctuation">.</span>mtime<span class="token punctuation">.</span><span class="token function">toGMTString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h5 id="服务器设置响应头Last-Modified"><a href="#服务器设置响应头Last-Modified" class="headerlink" title="服务器设置响应头Last-Modified"></a>服务器设置响应头<code>Last-Modified</code></h5></blockquote><p>标记文件最后一次修改时间</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BE%E7%BD%AE%E5%93%8D%E5%BA%94%E5%A4%B4%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4.png" alt></p><blockquote><h5 id="缓存实现过程"><a href="#缓存实现过程" class="headerlink" title="缓存实现过程"></a>缓存实现过程</h5></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> url<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">let</span> <span class="token punctuation">{</span>pathname<span class="token punctuation">}</span><span class="token operator">=</span>url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取文件日期</span>  fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`www</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pathname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> stat<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>      res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// console.log(req)</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'if-modified-since'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> oDate<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'if-modified-since'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> time_client<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>oDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> time_server<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>stat<span class="token punctuation">.</span>mtime<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>time_server<span class="token operator">></span>time_client<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//服务器的文件时间>客户端手里的版本</span>          <span class="token function">sendFileToClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>          res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">304</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Not Modified'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token function">sendFileToClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">function</span> <span class="token function">sendFileToClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//发送</span>        <span class="token keyword">let</span> rs<span class="token operator">=</span>fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`www</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pathname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Last-Modified'</span><span class="token punctuation">,</span> stat<span class="token punctuation">.</span>mtime<span class="token punctuation">.</span><span class="token function">toGMTString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//输出</span>        rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>第一次请求,响应状态码200,浏览器没有缓存</p><p>服务器响应头带了<code>Last-Modified</code>标记该资源文件最后一次修改时间</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%B7%E6%B1%82%E6%9C%8D%E5%8A%A1%E5%99%A8.png" alt><br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%B7%E6%B1%82%E6%9C%8D%E5%8A%A1%E5%99%A82.png" alt></p><p>第二次请求,响应状态码304，浏览器有缓存</p><p>请求头带了<code>if-modified-since</code>标记该资源文件的最后一次修改时间,通过该标记去告诉服务器我本地有这个文件及这个文件最后一次修改时间，服务器收到请求通过<code>if-modified-since</code>标记的时间和服务器上该文件的时间进行比较，如果服务器的文件等于<code>if-modified-since</code>的时间，说明该资源文件没有被修改过，浏览器决定从不从缓存中取出</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%B7%E6%B1%82%E6%9C%8D%E5%8A%A1%E5%99%A83.png" alt></p><blockquote><h4 id="缓存策略"><a href="#缓存策略" class="headerlink" title="缓存策略"></a>缓存策略</h4></blockquote><p>服务器设置响应头<code>cache-control</code>和<code>expires</code></p><blockquote><h3 id="多进程-1"><a href="#多进程-1" class="headerlink" title="多进程"></a>多进程</h3></blockquote><p>主进程负责派生子进程，子进程负责干活</p><blockquote><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4></blockquote><p>普通程序不能“创建”进程，只有系统进程才能创建进程；只有主进程能分裂<br>进程是分裂出来<br>分裂出来的两个进程执行的是同一套代码<br>父子进程之间可以共享”句柄”(如：8080端口)</p><blockquote><h4 id="进程分裂实现"><a href="#进程分裂实现" class="headerlink" title="进程分裂实现"></a>进程分裂实现</h4></blockquote><p>通过<code>cluster.isMaster</code>判断是否是主进程，如果是主进程则<code>cluster.fork()</code>分裂子进程</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> cluster<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cluster'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> os<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> process<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'process'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>cluster<span class="token punctuation">.</span>isMaster<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>os<span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cluster<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'主进程'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'子进程'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//进程id</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'子进程id'</span><span class="token punctuation">,</span>process<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'aaaa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'服务器开好了，在8080上'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre><code>主进程子进程服务器开好了，在8080上子进程服务器开好了，在8080上子进程服务器开好了，在8080上子进程服务器开好了，在8080上子进程服务器开好了，在8080上子进程服务器开好了，在8080上子进程服务器开好了，在8080上子进程服务器开好了，在8080上子进程 26956</code></pre><blockquote><h5 id="进程调度"><a href="#进程调度" class="headerlink" title="进程调度"></a>进程调度</h5></blockquote><p>主进程通过系统的CPU核数分裂了8个子进程，浏览器发起请求的时候只有一个<code>子进程 26956</code>干活</p><p>多个进程同时存在时，进程的调度原则是第一个进程满了才开启第二个进程，前面两个进程满了才开启第三个进程，这样做的原因是因为进程调度即进程切换是需要花费开销的</p><blockquote><h5 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h5></blockquote><blockquote><h6 id="主进程能否分裂100个进程，有必要么"><a href="#主进程能否分裂100个进程，有必要么" class="headerlink" title="主进程能否分裂100个进程，有必要么"></a>主进程能否分裂100个进程，有必要么</h6></blockquote><p>可以分裂100个进程，但是没有必要，进程调度需要花费开销，况且进程的实际工作计算能力需要根据计算机本身硬件的限制</p><blockquote><h2 id="NodeJS使用MySQL"><a href="#NodeJS使用MySQL" class="headerlink" title="NodeJS使用MySQL"></a>NodeJS使用MySQL</h2></blockquote><blockquote><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3></blockquote><blockquote><h4 id="一条连接"><a href="#一条连接" class="headerlink" title="一条连接"></a>一条连接</h4></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> db<span class="token operator">=</span>mysql<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>host<span class="token punctuation">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token number">3309</span><span class="token punctuation">,</span> database<span class="token punctuation">:</span> <span class="token string">'20180127'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h4 id="连接池获取连接"><a href="#连接池获取连接" class="headerlink" title="连接池获取连接"></a>连接池获取连接</h4></blockquote><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//连接池</span><span class="token keyword">let</span> db<span class="token operator">=</span>mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>host<span class="token punctuation">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token number">3309</span><span class="token punctuation">,</span> database<span class="token punctuation">:</span> <span class="token string">'20180127'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> mysql<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> db<span class="token operator">=</span>mysql<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>host<span class="token punctuation">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token number">3309</span><span class="token punctuation">,</span> database<span class="token punctuation">:</span> <span class="token string">'20180127'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`INSERT INTO user_table (ID, name, gender, chinese, math, english) VALUES(0, '小明', '男', 98, 5, 3);`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'错了'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><h3 id="用户登录注册"><a href="#用户登录注册" class="headerlink" title="用户登录注册"></a>用户登录注册</h3></blockquote><blockquote><h4 id="数据库结构-数据字典"><a href="#数据库结构-数据字典" class="headerlink" title="数据库结构(数据字典)"></a>数据库结构(数据字典)</h4></blockquote><blockquote><h4 id="接口格式-接口文档"><a href="#接口格式-接口文档" class="headerlink" title="接口格式(接口文档)"></a>接口格式(接口文档)</h4></blockquote><pre><code>注册：  /reg?user=xxx&amp;pass=xxx  =&gt;{err: 0, msg: &#39;原因&#39;}</code></pre><pre><code>登陆：  /login?user=xxx&amp;pass=xxx  =&gt;{err: 0, msg: &#39;原因&#39;}</code></pre><blockquote><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4></blockquote><p>前台</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//注册</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#btn_reg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          url<span class="token punctuation">:</span> <span class="token string">'/reg'</span><span class="token punctuation">,</span>          data<span class="token punctuation">:</span> <span class="token punctuation">{</span>user<span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#user'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pass<span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#pass'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>          <span class="token function">success</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'注册失败'</span><span class="token operator">+</span>json<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'注册成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//登陆</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#btn_login'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          url<span class="token punctuation">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>          data<span class="token punctuation">:</span> <span class="token punctuation">{</span>user<span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#user'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pass<span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#pass'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>          dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>          <span class="token function">success</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'登陆失败'</span><span class="token operator">+</span>json<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>              <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'登陆成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    用户：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pass<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>注册<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn_reg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>登陆<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn_login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>后台</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> http<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> mysql<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> url<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> zlib<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'zlib'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> crypto<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'crypto'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//盐值</span><span class="token keyword">const</span> _key<span class="token operator">=</span><span class="token string">'sadfslekrtuew5iutoselgdtjiypoydse4ufhs.edtyo;s8te4arfeliawkfhtsie5tlfia;sefdshroiupeoutwyeli5gurse;ihf'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//MD5加密</span><span class="token keyword">function</span> <span class="token function">md5</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">let</span> obj<span class="token operator">=</span>crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">'md5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  obj<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> obj<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//MD5盐值加密</span><span class="token keyword">function</span> <span class="token function">md5_2</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">+</span>_key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//从连接池获取连接</span><span class="token keyword">let</span> db<span class="token operator">=</span>mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>host<span class="token punctuation">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token number">3306</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string">'000000'</span><span class="token punctuation">,</span> database<span class="token punctuation">:</span> <span class="token string">'mytest'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> server<span class="token operator">=</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>  <span class="token keyword">let</span> <span class="token punctuation">{</span>pathname<span class="token punctuation">,</span> query<span class="token punctuation">}</span><span class="token operator">=</span>url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> <span class="token punctuation">{</span>user<span class="token punctuation">,</span> pass<span class="token punctuation">}</span><span class="token operator">=</span>query<span class="token punctuation">;</span>  <span class="token keyword">switch</span><span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//接口</span>    <span class="token keyword">case</span> <span class="token string">'/reg'</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">//校验</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "username can\'t be null"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>pass<span class="token punctuation">)</span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "password can\'t be null"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex">/^\w{4,16}$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "username is invaild"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex">/['|"]/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>pass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "password is invaild"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`SELECT * FROM user_table WHERE username='</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">'`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "database error"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "this username exsits"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`INSERT INTO user_table (ID,username,password) VALUES(0,'</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">','</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">md5_2</span><span class="token punctuation">(</span>pass<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">')`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>                res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "database error"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 0, "msg": "success"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'/login'</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">//校验</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "username can\'t be null"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>pass<span class="token punctuation">)</span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "password can\'t be null"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex">/^\w{4,16}$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "username is invaild"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex">/['|"]/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>pass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "password is invaild"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`SELECT * FROM user_table WHERE username='</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">'`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "database error"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "no this user"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>password<span class="token operator">!=</span><span class="token function">md5_2</span><span class="token punctuation">(</span>pass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 1, "msg": "username or password is incorrect"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'{"err": 0, "msg": "success"}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">//缓存      TODO</span>      <span class="token comment" spellcheck="true">//静态文件</span>      <span class="token keyword">let</span> rs<span class="token operator">=</span>fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`www</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pathname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> gz<span class="token operator">=</span>zlib<span class="token punctuation">.</span><span class="token function">createGzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'content-encoding'</span><span class="token punctuation">,</span> <span class="token string">'gzip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gz<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>      rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">writeHeader</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NodeJS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0开始独立完成企业级Java电商网站开发（服务端）</title>
      <link href="/2019/03/13/cong-0-kai-shi-du-li-wan-cheng-qi-ye-ji-java-dian-shang-wang-zhan-kai-fa-fu-wu-duan/"/>
      <url>/2019/03/13/cong-0-kai-shi-du-li-wan-cheng-qi-ye-ji-java-dian-shang-wang-zhan-kai-fa-fu-wu-duan/</url>
      
        <content type="html"><![CDATA[<h2 id="数据表结构设计"><a href="#数据表结构设计" class="headerlink" title="数据表结构设计"></a>数据表结构设计</h2><h3 id="唯一索引unique，保证数据唯一性"><a href="#唯一索引unique，保证数据唯一性" class="headerlink" title="唯一索引unique，保证数据唯一性"></a>唯一索引unique，保证数据唯一性</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>mmall_user<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'用户表id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>username<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'用户名'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>password<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'用户密码，MD5加密'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>email<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>question<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'找回密码问题'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>answer<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'找回密码答案'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>role<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'角色0-管理员,1-普通用户'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'创建时间'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'最后一次更新时间'</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">UNIQUE</span> <span class="token keyword">KEY</span> <span class="token punctuation">`</span>user_name_unique<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>username<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">22</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span></code></pre><h3 id="单索引及组合索引"><a href="#单索引及组合索引" class="headerlink" title="单索引及组合索引"></a>单索引及组合索引</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>mmall_order_item<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'订单子表id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>user_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>order_no<span class="token punctuation">`</span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>product_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'商品id'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>product_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'商品名称'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>product_image<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'商品图片地址'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>current_unit_price<span class="token punctuation">`</span> <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'生成订单时的商品单价，单位是元,保留两位小数'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>quantity<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'商品数量'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>total_price<span class="token punctuation">`</span> <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'商品总价,单位是元,保留两位小数'</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>create_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>update_time<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">KEY</span> <span class="token punctuation">`</span>order_no_index<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>order_no<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">,</span>  <span class="token keyword">KEY</span> <span class="token punctuation">`</span>order_no_user_id_index<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>user_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>order_no<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">135</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span></code></pre><h3 id="查业务问题的后悔药"><a href="#查业务问题的后悔药" class="headerlink" title="查业务问题的后悔药"></a>查业务问题的后悔药</h3><p><code>create_time</code> 数据创建时间<br><code>update_time</code> 数据更新时间</p><h3 id="mybatis三剑客"><a href="#mybatis三剑客" class="headerlink" title="mybatis三剑客"></a>mybatis三剑客</h3><h4 id="mybatis-generator自动化生成数据库交互代码"><a href="#mybatis-generator自动化生成数据库交互代码" class="headerlink" title="mybatis-generator自动化生成数据库交互代码"></a><code>mybatis-generator</code>自动化生成数据库交互代码</h4><p>配置pom.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">></span></span>mmall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-generator-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>verbose</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>verbose</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>overwrite</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>overwrite</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span></code></pre><p>datasource.properties</p><pre><code>db.driverLocation=/Users/imooc/mysql-connector-java-5.1.6-bin.jardb.driverClassName=com.mysql.jdbc.Driver#db.url=jdbc:mysql://192.1.1.1:3306/mmall?characterEncoding=utf-8db.url=jdbc:mysql://你的数据库IP:你的数据库Port/你的database?characterEncoding=utf-8db.username=mmalldb.password=dbpassworddb.initialSize = 20db.maxActive = 50db.maxIdle = 20db.minIdle = 10db.maxWait = 10db.defaultAutoCommit = truedb.minEvictableIdleTimeMillis = 3600000</code></pre><p>generatorConfig.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE generatorConfiguration        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatorConfiguration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--导入属性配置--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>datasource.properties<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--指定特定数据库的jdbc驱动jar包的位置--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>classPathEntry</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${db.driverLocation}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>default<span class="token punctuation">"</span></span> <span class="token attr-name">targetRuntime</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MyBatis3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- optional，旨在创建class时，对注释进行控制 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>commentGenerator</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>suppressDate<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>suppressAllComments<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>commentGenerator</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--jdbc的数据库连接 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcConnection</span>                <span class="token attr-name">driverClass</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${db.driverClassName}<span class="token punctuation">"</span></span>                <span class="token attr-name">connectionURL</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${db.url}<span class="token punctuation">"</span></span>                <span class="token attr-name">userId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${db.username}<span class="token punctuation">"</span></span>                <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${db.password}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdbcConnection</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaTypeResolver</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>forceBigDecimals<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaTypeResolver</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类            targetPackage     指定生成的model生成所在的包名            targetProject     指定在该项目下所在的路径        --></span>        <span class="token comment" spellcheck="true">&lt;!--&lt;javaModelGenerator targetPackage="com.mmall.pojo" targetProject=".\src\main\java">--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaModelGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mmall.pojo<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./src/main/java<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 是否对model添加 构造函数 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>constructorBased<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 是否对类CHAR类型的列的数据进行trim操作 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>trimStrings<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>immutable<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaModelGenerator</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 --></span>        <span class="token comment" spellcheck="true">&lt;!--&lt;sqlMapGenerator targetPackage="mappers" targetProject=".\src\main\resources">--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sqlMapGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mappers<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./src/main/resources<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sqlMapGenerator</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口        --></span>        <span class="token comment" spellcheck="true">&lt;!-- targetPackage：mapper接口dao生成的位置 --></span>        <span class="token comment" spellcheck="true">&lt;!--&lt;javaClientGenerator type="XMLMAPPER" targetPackage="com.mmall.dao" targetProject=".\src\main\java">--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaClientGenerator</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>XMLMAPPER<span class="token punctuation">"</span></span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mmall.dao<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./src/main/java<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaClientGenerator</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_shipping<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Shipping<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_cart<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Cart<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_cart_item<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CartItem<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_category<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Category<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_order<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Order<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_order_item<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>OrderItem<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_pay_info<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>PayInfo<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_product<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Product<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>columnOverride</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>detail<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>columnOverride</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sub_images<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mmall_user<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>User<span class="token punctuation">"</span></span> <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- geelynote mybatis插件的搭建 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatorConfiguration</span><span class="token punctuation">></span></span></code></pre><p>运行</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis-generator.png" alt></p><h4 id="mybatis-plugin-idea插件，实现mybatis的接口文件和xml自动跳转"><a href="#mybatis-plugin-idea插件，实现mybatis的接口文件和xml自动跳转" class="headerlink" title="mybatis-plugin idea插件，实现mybatis的接口文件和xml自动跳转"></a><code>mybatis-plugin</code> idea插件，实现mybatis的接口文件和xml自动跳转</h4><p><a href="https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin" target="_blank" rel="noopener">下载</a></p><h4 id="mybatis-pagehelper-mybatis分页组件"><a href="#mybatis-pagehelper-mybatis分页组件" class="headerlink" title="mybatis-pagehelper mybatis分页组件"></a><code>mybatis-pagehelper</code> mybatis分页组件</h4><p>配置<code>pom.xml</code></p><pre class=" language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- mybatis pager --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.miemiedev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-paginator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.jsqlparser<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jsqlparser<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.9.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="Tomcat加载spring、springmvc"><a href="#Tomcat加载spring、springmvc" class="headerlink" title="Tomcat加载spring、springmvc"></a>Tomcat加载spring、springmvc</h3><p>方式一：配置web.xml</p><pre class=" language-xml"><code class="language-xml">    <span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<span class="token punctuation">"</span></span>    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WebApp_ID<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">></span></span>login.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 启动我们自己的listener --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>com.atguigu.scw.manager.listener.MyAppListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 启动spring容器 --></span>    <span class="token comment" spellcheck="true">&lt;!-- needed for ContextLoaderListener --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:spring-*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Bootstraps the root web application context before servlet initialization --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- The front controller of this Spring Web application, responsible for         handling all application requests --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>springDispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:springmvc.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- Map all requests to the DispatcherServlet for handling --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>springDispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 加上字符编码过滤器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 只是指定了编码格式 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>encoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>utf-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 进行请求乱码解决 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>forceRequestEncoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>forceResponseEncoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span></code></pre><p>方式二：配置web.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WebApp_ID<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">></span></span>Archetype Created Web Application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>characterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>encoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>forceEncoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>characterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>org.springframework.web.context.request.RequestContextListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>            classpath:applicationContext.xml        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcher<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcher<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>*.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span></code></pre><h3 id="测试插件"><a href="#测试插件" class="headerlink" title="测试插件"></a>测试插件</h3><p><a href="http://down.cnplugins.com/down/down.aspx?fn=1607/www.cnplugins.com_pkgccpejnmalmdinmhkkfafefagiiiad_8_8_.crx" target="_blank" rel="noopener">FeHelper</a></p><p><a href="http://down.cnplugins.com/down/down.aspx?fn=1902/restlet-client-rest-api-t-2.19.1.crx" target="_blank" rel="noopener">Restlet Client</a></p><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><h3 id="横向越权"><a href="#横向越权" class="headerlink" title="横向越权"></a>横向越权</h3><p>入参需要指定当前用户id</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%A8%AA%E5%90%91%E8%B6%8A%E6%9D%83.png" alt></p><h3 id="纵向越权"><a href="#纵向越权" class="headerlink" title="纵向越权"></a>纵向越权</h3><h3 id="MD5明文加密"><a href="#MD5明文加密" class="headerlink" title="MD5明文加密"></a>MD5明文加密</h3><p>盐值加密</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%9B%90%E5%80%BC%E5%8A%A0%E5%AF%86.png" alt></p><p>MD5Util.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>MessageDigest<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MD5Util</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span><span class="token keyword">byte</span> b<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        StringBuffer resultSb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            resultSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">byteToHexString</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> resultSb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String <span class="token function">byteToHexString</span><span class="token punctuation">(</span><span class="token keyword">byte</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> b<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>            n <span class="token operator">+=</span> <span class="token number">256</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> d1 <span class="token operator">=</span> n <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> d2 <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> hexDigits<span class="token punctuation">[</span>d1<span class="token punctuation">]</span> <span class="token operator">+</span> hexDigits<span class="token punctuation">[</span>d2<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 返回大写MD5     *     * @param origin     * @param charsetname     * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String <span class="token function">MD5Encode</span><span class="token punctuation">(</span>String origin<span class="token punctuation">,</span> String charsetname<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String resultString <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            resultString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span><span class="token punctuation">;</span>            MessageDigest md <span class="token operator">=</span> MessageDigest<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>charsetname <span class="token operator">==</span> null <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>charsetname<span class="token punctuation">)</span><span class="token punctuation">)</span>                resultString <span class="token operator">=</span> <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span>md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>resultString<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                resultString <span class="token operator">=</span> <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span>md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>resultString<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>charsetname<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> resultString<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">MD5EncodeUtf8</span><span class="token punctuation">(</span>String origin<span class="token punctuation">)</span> <span class="token punctuation">{</span>        origin <span class="token operator">=</span> origin <span class="token operator">+</span> PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"password.salt"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">MD5Encode</span><span class="token punctuation">(</span>origin<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String hexDigits<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"0"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">,</span> <span class="token string">"5"</span><span class="token punctuation">,</span>            <span class="token string">"6"</span><span class="token punctuation">,</span> <span class="token string">"7"</span><span class="token punctuation">,</span> <span class="token string">"8"</span><span class="token punctuation">,</span> <span class="token string">"9"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">,</span> <span class="token string">"e"</span><span class="token punctuation">,</span> <span class="token string">"f"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>PropertiesUtil.java</p><p>读取src/main/resources目录下的配置文件</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStreamReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Properties<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PropertiesUtil</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Properties props<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        String fileName <span class="token operator">=</span> <span class="token string">"mmall.properties"</span><span class="token punctuation">;</span>        props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            props<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"配置文件读取异常"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getProperty</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{</span>        String value <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getProperty</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String defaultValue<span class="token punctuation">)</span><span class="token punctuation">{</span>        String value <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            value <span class="token operator">=</span> defaultValue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>mmall.properties</p><pre><code>ftp.server.ip=你的FTP服务器ip地址ftp.user=mmallftpftp.pass=ftppasswordftp.server.http.prefix=http://img.happymmall.com/alipay.callback.url=http://www.happymmall.com/order/alipay_callback.dopassword.salt = geelysdafaqj23ou89ZXcj@#$@#$#@KJdjklj;D../dSF.,</code></pre><p>应用：明文加密</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%AF%86%E7%A0%81%E7%9B%90%E5%80%BC%E5%8A%A0%E5%AF%86.png" alt></p><h3 id="guava缓存"><a href="#guava缓存" class="headerlink" title="guava缓存"></a>guava缓存</h3><p>设置token并传给前台用户</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/guava%E7%BC%93%E5%AD%98.png" alt="设置token并传给前台用户"></p><p>验证token<br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/guava%E7%BC%93%E5%AD%982.png" alt></p><p>TokenCache.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>CacheBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>CacheLoader<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>LoadingCache<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TokenCache</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>TokenCache<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String TOKEN_PREFIX <span class="token operator">=</span> <span class="token string">"token_"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//LRU算法</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> LoadingCache<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> localCache <span class="token operator">=</span> CacheBuilder<span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initialCapacity</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maximumSize</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expireAfterAccess</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>HOURS<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CacheLoader</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//默认的数据加载实现,当调用get取值的时候,如果key没有对应的值,就调用这个方法进行加载.</span>                <span class="token annotation punctuation">@Override</span>                <span class="token keyword">public</span> String <span class="token function">load</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token string">"null"</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setKey</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>        localCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getKey</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span><span class="token punctuation">{</span>        String value <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            value <span class="token operator">=</span> localCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"null"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> null<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"localCache get error"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>UserServiceImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">checkAnswer</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span>String question<span class="token punctuation">,</span>String answer<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> resultCount <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">checkAnswer</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>question<span class="token punctuation">,</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>resultCount<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//说明问题及问题答案是这个用户的,并且是正确的</span>            String forgetToken <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            TokenCache<span class="token punctuation">.</span><span class="token function">setKey</span><span class="token punctuation">(</span>TokenCache<span class="token punctuation">.</span>TOKEN_PREFIX<span class="token operator">+</span>username<span class="token punctuation">,</span>forgetToken<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccess</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"问题的答案错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">forgetResetPassword</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span>String passwordNew<span class="token punctuation">,</span>String forgetToken<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"参数错误,token需要传递"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        ServerResponse validResponse <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkValid</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>Const<span class="token punctuation">.</span>USERNAME<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>validResponse<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//用户不存在</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"用户不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        String token <span class="token operator">=</span> TokenCache<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span>TokenCache<span class="token punctuation">.</span>TOKEN_PREFIX<span class="token operator">+</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"token无效或者过期"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>forgetToken<span class="token punctuation">,</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            String md5Password  <span class="token operator">=</span> MD5Util<span class="token punctuation">.</span><span class="token function">MD5EncodeUtf8</span><span class="token punctuation">(</span>passwordNew<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> rowCount <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">updatePasswordByUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>md5Password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>rowCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccessMessage</span><span class="token punctuation">(</span><span class="token string">"修改密码成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"token错误,请重新获取重置密码的token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"修改密码失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="高复用服务响应对象的设计思想和封装"><a href="#高复用服务响应对象的设计思想和封装" class="headerlink" title="高复用服务响应对象的设计思想和封装"></a>高复用服务响应对象的设计思想和封装</h3><p>ServerResponse.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotate<span class="token punctuation">.</span>JsonIgnore<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>codehaus<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>map<span class="token punctuation">.</span>annotate<span class="token punctuation">.</span>JsonSerialize<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@JsonSerialize</span><span class="token punctuation">(</span>include <span class="token operator">=</span>  JsonSerialize<span class="token punctuation">.</span>Inclusion<span class="token punctuation">.</span>NON_NULL<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//保证序列化json的时候,如果是null的对象,key也会消失</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServerResponse</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> status<span class="token punctuation">;</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token keyword">private</span> T data<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token function">ServerResponse</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> status<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token function">ServerResponse</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">,</span>T data<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> status<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token function">ServerResponse</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">,</span>String msg<span class="token punctuation">,</span>T data<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> status<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token function">ServerResponse</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">,</span>String msg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> status<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@JsonIgnore</span>    <span class="token comment" spellcheck="true">//使之不在json序列化结果当中</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> ResponseCode<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> status<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> T <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> data<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ServerResponse<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">createBySuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerResponse</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>ResponseCode<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ServerResponse<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">createBySuccessMessage</span><span class="token punctuation">(</span>String msg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerResponse</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>ResponseCode<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ServerResponse<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">createBySuccess</span><span class="token punctuation">(</span>T data<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerResponse</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>ResponseCode<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ServerResponse<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">createBySuccess</span><span class="token punctuation">(</span>String msg<span class="token punctuation">,</span>T data<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerResponse</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>ResponseCode<span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>msg<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ServerResponse<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">createByError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerResponse</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>ResponseCode<span class="token punctuation">.</span>ERROR<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ResponseCode<span class="token punctuation">.</span>ERROR<span class="token punctuation">.</span><span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ServerResponse<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">createByErrorMessage</span><span class="token punctuation">(</span>String errorMessage<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerResponse</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>ResponseCode<span class="token punctuation">.</span>ERROR<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ServerResponse<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">createByErrorCodeMessage</span><span class="token punctuation">(</span><span class="token keyword">int</span> errorCode<span class="token punctuation">,</span>String errorMessage<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerResponse</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>errorCode<span class="token punctuation">,</span>errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>ResponseCode.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">enum</span> ResponseCode <span class="token punctuation">{</span>    <span class="token function">SUCCESS</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"SUCCESS"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">ERROR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"ERROR"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">NEED_LOGIN</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"NEED_LOGIN"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">ILLEGAL_ARGUMENT</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"ILLEGAL_ARGUMENT"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> String desc<span class="token punctuation">;</span>    <span class="token function">ResponseCode</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span>String desc<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>desc <span class="token operator">=</span> desc<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> desc<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="分类模块"><a href="#分类模块" class="headerlink" title="分类模块"></a>分类模块</h2><h3 id="递归算法"><a href="#递归算法" class="headerlink" title="递归算法"></a>递归算法</h3><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 递归查询本节点的id及孩子节点的id     * @param categoryId     * @return     */</span>    <span class="token keyword">public</span> ServerResponse<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">>></span> <span class="token function">selectCategoryAndChildrenById</span><span class="token punctuation">(</span>Integer categoryId<span class="token punctuation">)</span><span class="token punctuation">{</span>        Set<span class="token operator">&lt;</span>Category<span class="token operator">></span> categorySet <span class="token operator">=</span> Sets<span class="token punctuation">.</span><span class="token function">newHashSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">findChildCategory</span><span class="token punctuation">(</span>categorySet<span class="token punctuation">,</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Integer<span class="token operator">></span> categoryIdList <span class="token operator">=</span> Lists<span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>categoryId <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>Category categoryItem <span class="token operator">:</span> categorySet<span class="token punctuation">)</span><span class="token punctuation">{</span>                categoryIdList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>categoryItem<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccess</span><span class="token punctuation">(</span>categoryIdList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//递归算法,算出子节点</span>    <span class="token keyword">private</span> Set<span class="token operator">&lt;</span>Category<span class="token operator">></span> <span class="token function">findChildCategory</span><span class="token punctuation">(</span>Set<span class="token operator">&lt;</span>Category<span class="token operator">></span> categorySet <span class="token punctuation">,</span>Integer categoryId<span class="token punctuation">)</span><span class="token punctuation">{</span>        Category category <span class="token operator">=</span> categoryMapper<span class="token punctuation">.</span><span class="token function">selectByPrimaryKey</span><span class="token punctuation">(</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>category <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            categorySet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//查找子节点,递归算法一定要有一个退出的条件</span>        List<span class="token operator">&lt;</span>Category<span class="token operator">></span> categoryList <span class="token operator">=</span> categoryMapper<span class="token punctuation">.</span><span class="token function">selectCategoryChildrenByParentId</span><span class="token punctuation">(</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>Category categoryItem <span class="token operator">:</span> categoryList<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">findChildCategory</span><span class="token punctuation">(</span>categorySet<span class="token punctuation">,</span>categoryItem<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> categorySet<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="复杂对象排重"><a href="#复杂对象排重" class="headerlink" title="复杂对象排重"></a>复杂对象排重</h3><p>Set集合</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%A4%8D%E6%9D%82%E5%AF%B9%E8%B1%A1%E6%8E%92%E9%87%8D.png" alt></p><p>重写自定义对象Category的<code>equals</code>和<code>hashCode</code>方法</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%A4%8D%E6%9D%82%E5%AF%B9%E8%B1%A1%E6%8E%92%E9%87%8D2.png" alt></p><h3 id="无限层级树结构设计"><a href="#无限层级树结构设计" class="headerlink" title="无限层级树结构设计"></a>无限层级树结构设计</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%97%A0%E9%99%90%E5%B1%82%E7%BA%A7%E6%A0%91%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1.png" alt></p><h2 id="商品模块"><a href="#商品模块" class="headerlink" title="商品模块"></a>商品模块</h2><h3 id="POJO、BO、VO抽象模型"><a href="#POJO、BO、VO抽象模型" class="headerlink" title="POJO、BO、VO抽象模型"></a>POJO、BO、VO抽象模型</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/POJO%E3%80%81BO%E3%80%81VO%E6%8A%BD%E8%B1%A1%E6%A8%A1%E5%9E%8B.png" alt></p><p>Product.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>pojo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>math<span class="token punctuation">.</span>BigDecimal<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer categoryId<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String subtitle<span class="token punctuation">;</span>    <span class="token keyword">private</span> String mainImage<span class="token punctuation">;</span>    <span class="token keyword">private</span> String subImages<span class="token punctuation">;</span>    <span class="token keyword">private</span> String detail<span class="token punctuation">;</span>    <span class="token keyword">private</span> BigDecimal price<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer stock<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer status<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>    <span class="token keyword">private</span> Date updateTime<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Product</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">,</span> Integer categoryId<span class="token punctuation">,</span> String name<span class="token punctuation">,</span> String subtitle<span class="token punctuation">,</span> String mainImage<span class="token punctuation">,</span> String subImages<span class="token punctuation">,</span> String detail<span class="token punctuation">,</span> BigDecimal price<span class="token punctuation">,</span> Integer stock<span class="token punctuation">,</span> Integer status<span class="token punctuation">,</span> Date createTime<span class="token punctuation">,</span> Date updateTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>categoryId <span class="token operator">=</span> categoryId<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subtitle <span class="token operator">=</span> subtitle<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mainImage <span class="token operator">=</span> mainImage<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subImages <span class="token operator">=</span> subImages<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>detail <span class="token operator">=</span> detail<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stock <span class="token operator">=</span> stock<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> status<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>createTime <span class="token operator">=</span> createTime<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>updateTime <span class="token operator">=</span> updateTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getCategoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> categoryId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCategoryId</span><span class="token punctuation">(</span>Integer categoryId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>categoryId <span class="token operator">=</span> categoryId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token operator">==</span> null <span class="token operator">?</span> null <span class="token operator">:</span> name<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSubtitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> subtitle<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSubtitle</span><span class="token punctuation">(</span>String subtitle<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subtitle <span class="token operator">=</span> subtitle <span class="token operator">==</span> null <span class="token operator">?</span> null <span class="token operator">:</span> subtitle<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMainImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> mainImage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMainImage</span><span class="token punctuation">(</span>String mainImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mainImage <span class="token operator">=</span> mainImage <span class="token operator">==</span> null <span class="token operator">?</span> null <span class="token operator">:</span> mainImage<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSubImages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> subImages<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSubImages</span><span class="token punctuation">(</span>String subImages<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subImages <span class="token operator">=</span> subImages <span class="token operator">==</span> null <span class="token operator">?</span> null <span class="token operator">:</span> subImages<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> detail<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDetail</span><span class="token punctuation">(</span>String detail<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>detail <span class="token operator">=</span> detail <span class="token operator">==</span> null <span class="token operator">?</span> null <span class="token operator">:</span> detail<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> BigDecimal <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span>BigDecimal price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getStock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> stock<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStock</span><span class="token punctuation">(</span>Integer stock<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stock <span class="token operator">=</span> stock<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> status<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStatus</span><span class="token punctuation">(</span>Integer status<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> status<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Date <span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> createTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCreateTime</span><span class="token punctuation">(</span>Date createTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>createTime <span class="token operator">=</span> createTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Date <span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> updateTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUpdateTime</span><span class="token punctuation">(</span>Date updateTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>updateTime <span class="token operator">=</span> updateTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>ProductDetailVo.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>vo<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>math<span class="token punctuation">.</span>BigDecimal<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductDetailVo</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Integer  id<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer categoryId<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String subtitle<span class="token punctuation">;</span>    <span class="token keyword">private</span> String mainImage<span class="token punctuation">;</span>    <span class="token keyword">private</span> String subImages<span class="token punctuation">;</span>    <span class="token keyword">private</span> String detail<span class="token punctuation">;</span>    <span class="token keyword">private</span> BigDecimal price<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer stock<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer status<span class="token punctuation">;</span>    <span class="token keyword">private</span> String createTime<span class="token punctuation">;</span>    <span class="token keyword">private</span> String updateTime<span class="token punctuation">;</span>    <span class="token keyword">private</span> String imageHost<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer parentCategoryId<span class="token punctuation">;</span>    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getCategoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> categoryId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCategoryId</span><span class="token punctuation">(</span>Integer categoryId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>categoryId <span class="token operator">=</span> categoryId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSubtitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> subtitle<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSubtitle</span><span class="token punctuation">(</span>String subtitle<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subtitle <span class="token operator">=</span> subtitle<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMainImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> mainImage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMainImage</span><span class="token punctuation">(</span>String mainImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mainImage <span class="token operator">=</span> mainImage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSubImages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> subImages<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSubImages</span><span class="token punctuation">(</span>String subImages<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>subImages <span class="token operator">=</span> subImages<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> detail<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDetail</span><span class="token punctuation">(</span>String detail<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>detail <span class="token operator">=</span> detail<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> BigDecimal <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span>BigDecimal price<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getStock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> stock<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStock</span><span class="token punctuation">(</span>Integer stock<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>stock <span class="token operator">=</span> stock<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> status<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStatus</span><span class="token punctuation">(</span>Integer status<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> status<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> createTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCreateTime</span><span class="token punctuation">(</span>String createTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>createTime <span class="token operator">=</span> createTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> updateTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUpdateTime</span><span class="token punctuation">(</span>String updateTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>updateTime <span class="token operator">=</span> updateTime<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getImageHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> imageHost<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setImageHost</span><span class="token punctuation">(</span>String imageHost<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>imageHost <span class="token operator">=</span> imageHost<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getParentCategoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> parentCategoryId<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParentCategoryId</span><span class="token punctuation">(</span>Integer parentCategoryId<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>parentCategoryId <span class="token operator">=</span> parentCategoryId<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="静态代码块-gt-普通代码块-gt-构造代码块"><a href="#静态代码块-gt-普通代码块-gt-构造代码块" class="headerlink" title="静态代码块&gt;普通代码块&gt;构造代码块"></a>静态代码块&gt;普通代码块&gt;构造代码块</h3><p>Tomcat启动加载静态代码块</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%9D%97.png" alt></p><h3 id="时间转换工具类DateTimeUtil-java"><a href="#时间转换工具类DateTimeUtil-java" class="headerlink" title="时间转换工具类DateTimeUtil.java"></a>时间转换工具类<code>DateTimeUtil.java</code></h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>joda<span class="token punctuation">.</span>time<span class="token punctuation">.</span>DateTime<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>joda<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span>DateTimeFormat<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>joda<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span>DateTimeFormatter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DateTimeUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//joda-time</span>    <span class="token comment" spellcheck="true">//str->Date</span>    <span class="token comment" spellcheck="true">//Date->str</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String STANDARD_FORMAT <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Date <span class="token function">strToDate</span><span class="token punctuation">(</span>String dateTimeStr<span class="token punctuation">,</span>String formatStr<span class="token punctuation">)</span><span class="token punctuation">{</span>        DateTimeFormatter dateTimeFormatter <span class="token operator">=</span> DateTimeFormat<span class="token punctuation">.</span><span class="token function">forPattern</span><span class="token punctuation">(</span>formatStr<span class="token punctuation">)</span><span class="token punctuation">;</span>        DateTime dateTime <span class="token operator">=</span> dateTimeFormatter<span class="token punctuation">.</span><span class="token function">parseDateTime</span><span class="token punctuation">(</span>dateTimeStr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dateTime<span class="token punctuation">.</span><span class="token function">toDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">dateToStr</span><span class="token punctuation">(</span>Date date<span class="token punctuation">,</span>String formatStr<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>date <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span>EMPTY<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        DateTime dateTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dateTime<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>formatStr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Date <span class="token function">strToDate</span><span class="token punctuation">(</span>String dateTimeStr<span class="token punctuation">)</span><span class="token punctuation">{</span>        DateTimeFormatter dateTimeFormatter <span class="token operator">=</span> DateTimeFormat<span class="token punctuation">.</span><span class="token function">forPattern</span><span class="token punctuation">(</span>STANDARD_FORMAT<span class="token punctuation">)</span><span class="token punctuation">;</span>        DateTime dateTime <span class="token operator">=</span> dateTimeFormatter<span class="token punctuation">.</span><span class="token function">parseDateTime</span><span class="token punctuation">(</span>dateTimeStr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dateTime<span class="token punctuation">.</span><span class="token function">toDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">dateToStr</span><span class="token punctuation">(</span>Date date<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>date <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span>EMPTY<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        DateTime dateTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dateTime<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>STANDARD_FORMAT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>DateTimeUtil<span class="token punctuation">.</span><span class="token function">dateToStr</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>DateTimeUtil<span class="token punctuation">.</span><span class="token function">strToDate</span><span class="token punctuation">(</span><span class="token string">"2010-01-01 11:11:11"</span><span class="token punctuation">,</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="mybatis-pagehelper高效分页"><a href="#mybatis-pagehelper高效分页" class="headerlink" title="mybatis-pagehelper高效分页"></a>mybatis-pagehelper高效分页</h3><p>配置pom.xml</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis-pagehelper.png" alt></p><p>实现</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis-pagehelper2.png" alt></p><h3 id="mybatis-pagehelper动态排序"><a href="#mybatis-pagehelper动态排序" class="headerlink" title="mybatis-pagehelper动态排序"></a>mybatis-pagehelper动态排序</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis-pagehelper%E6%8E%92%E5%BA%8F.png" alt></p><h3 id="mybatis对List遍历的实现方法"><a href="#mybatis对List遍历的实现方法" class="headerlink" title="mybatis对List遍历的实现方法"></a>mybatis对List遍历的实现方法</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis%E5%AF%B9List%E9%81%8D%E5%8E%86%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95.png" alt></p><h3 id="mybatis对where语句动态拼装"><a href="#mybatis对where语句动态拼装" class="headerlink" title="mybatis对where语句动态拼装"></a>mybatis对where语句动态拼装</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis%E5%AF%B9where%E8%AF%AD%E5%8F%A5%E5%8A%A8%E6%80%81%E6%8B%BC%E8%A3%85.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis%E5%AF%B9where%E8%AF%AD%E5%8F%A5%E5%8A%A8%E6%80%81%E6%8B%BC%E8%A3%852.png" alt></p><h3 id="FTP服务对接"><a href="#FTP服务对接" class="headerlink" title="FTP服务对接"></a>FTP服务对接</h3><p>先将文件上传到本地======&gt;上传到远程ftp====&gt;删除本地文件</p><p>配置<code>pom.xml</code></p><pre class=" language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!-- file upload --></span>    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>配置<code>dispatcher-servlet.xml</code></p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 文件上传 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipartResolver<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.multipart.commons.CommonsMultipartResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maxUploadSize<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10485760<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 10m --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maxInMemorySize<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4096<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultEncoding<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><p>FileServiceImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>Lists<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>IFileService<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">.</span>FTPUtil<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>UUID<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"iFileService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IFileService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>FileServiceImpl<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">upload</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">,</span>String path<span class="token punctuation">)</span><span class="token punctuation">{</span>        String fileName <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//扩展名</span>        <span class="token comment" spellcheck="true">//abc.jpg</span>        String fileExtensionName <span class="token operator">=</span> fileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String uploadFileName <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"."</span><span class="token operator">+</span>fileExtensionName<span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"开始上传文件,上传文件的文件名:{},上传的路径:{},新文件名:{}"</span><span class="token punctuation">,</span>fileName<span class="token punctuation">,</span>path<span class="token punctuation">,</span>uploadFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>        File fileDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fileDir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            fileDir<span class="token punctuation">.</span><span class="token function">setWritable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fileDir<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        File targetFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>uploadFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            file<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//文件已经上传成功了</span>            FTPUtil<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span>Lists<span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//已经上传到ftp服务器上</span>            targetFile<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"上传文件异常"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//A:abc.jpg</span>        <span class="token comment" spellcheck="true">//B:abc.jpg</span>        <span class="token keyword">return</span> targetFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>连接远程ftp，上传文件</p><p>FTPUtil.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>net<span class="token punctuation">.</span>ftp<span class="token punctuation">.</span>FTPClient<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileInputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FTPUtil</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span>  <span class="token keyword">final</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>FTPUtil<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String ftpIp <span class="token operator">=</span> PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"ftp.server.ip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String ftpUser <span class="token operator">=</span> PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"ftp.user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String ftpPass <span class="token operator">=</span> PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"ftp.pass"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">FTPUtil</span><span class="token punctuation">(</span>String ip<span class="token punctuation">,</span><span class="token keyword">int</span> port<span class="token punctuation">,</span>String user<span class="token punctuation">,</span>String pwd<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ip <span class="token operator">=</span> ip<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>port <span class="token operator">=</span> port<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> user<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pwd <span class="token operator">=</span> pwd<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>File<span class="token operator">></span> fileList<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        FTPUtil ftpUtil <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FTPUtil</span><span class="token punctuation">(</span>ftpIp<span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span>ftpUser<span class="token punctuation">,</span>ftpPass<span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"开始连接ftp服务器"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> result <span class="token operator">=</span> ftpUtil<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"开始连接ftp服务器,结束上传,上传结果:{}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span>String remotePath<span class="token punctuation">,</span>List<span class="token operator">&lt;</span>File<span class="token operator">></span> fileList<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        <span class="token keyword">boolean</span> uploaded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        FileInputStream fis <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//连接FTP服务器</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">connectServer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ip<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>port<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>pwd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                ftpClient<span class="token punctuation">.</span><span class="token function">changeWorkingDirectory</span><span class="token punctuation">(</span>remotePath<span class="token punctuation">)</span><span class="token punctuation">;</span>                ftpClient<span class="token punctuation">.</span><span class="token function">setBufferSize</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ftpClient<span class="token punctuation">.</span><span class="token function">setControlEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ftpClient<span class="token punctuation">.</span><span class="token function">setFileType</span><span class="token punctuation">(</span>FTPClient<span class="token punctuation">.</span>BINARY_FILE_TYPE<span class="token punctuation">)</span><span class="token punctuation">;</span>                ftpClient<span class="token punctuation">.</span><span class="token function">enterLocalPassiveMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span>File fileItem <span class="token operator">:</span> fileList<span class="token punctuation">)</span><span class="token punctuation">{</span>                    fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>fileItem<span class="token punctuation">)</span><span class="token punctuation">;</span>                    ftpClient<span class="token punctuation">.</span><span class="token function">storeFile</span><span class="token punctuation">(</span>fileItem<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>fis<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"上传文件异常"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>                uploaded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>                fis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ftpClient<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> uploaded<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">connectServer</span><span class="token punctuation">(</span>String ip<span class="token punctuation">,</span><span class="token keyword">int</span> port<span class="token punctuation">,</span>String user<span class="token punctuation">,</span>String pwd<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">boolean</span> isSuccess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        ftpClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FTPClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            ftpClient<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">;</span>            isSuccess <span class="token operator">=</span> ftpClient<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span>pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"连接FTP服务器异常"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> isSuccess<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> String ip<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> port<span class="token punctuation">;</span>    <span class="token keyword">private</span> String user<span class="token punctuation">;</span>    <span class="token keyword">private</span> String pwd<span class="token punctuation">;</span>    <span class="token keyword">private</span> FTPClient ftpClient<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> ip<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setIp</span><span class="token punctuation">(</span>String ip<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ip <span class="token operator">=</span> ip<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> port<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPort</span><span class="token punctuation">(</span><span class="token keyword">int</span> port<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>port <span class="token operator">=</span> port<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> user<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUser</span><span class="token punctuation">(</span>String user<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> user<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getPwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> pwd<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPwd</span><span class="token punctuation">(</span>String pwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pwd <span class="token operator">=</span> pwd<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> FTPClient <span class="token function">getFtpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> ftpClient<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFtpClient</span><span class="token punctuation">(</span>FTPClient ftpClient<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ftpClient <span class="token operator">=</span> ftpClient<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="富文本上传"><a href="#富文本上传" class="headerlink" title="富文本上传"></a>富文本上传</h3><p>和ftp文件上传类似，只是对返回值有特殊要求</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%AF%8C%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.png" alt></p><h2 id="购物车模块"><a href="#购物车模块" class="headerlink" title="购物车模块"></a>购物车模块</h2><h3 id="商品总价计算复用封装"><a href="#商品总价计算复用封装" class="headerlink" title="商品总价计算复用封装"></a>商品总价计算复用封装</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>util<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>math<span class="token punctuation">.</span>BigDecimal<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BigDecimalUtil</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token function">BigDecimalUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> BigDecimal <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">double</span> v1<span class="token punctuation">,</span><span class="token keyword">double</span> v2<span class="token punctuation">)</span><span class="token punctuation">{</span>        BigDecimal b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>Double<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BigDecimal b2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>Double<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> b1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> BigDecimal <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">double</span> v1<span class="token punctuation">,</span><span class="token keyword">double</span> v2<span class="token punctuation">)</span><span class="token punctuation">{</span>        BigDecimal b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>Double<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BigDecimal b2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>Double<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> b1<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> BigDecimal <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">double</span> v1<span class="token punctuation">,</span><span class="token keyword">double</span> v2<span class="token punctuation">)</span><span class="token punctuation">{</span>        BigDecimal b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>Double<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BigDecimal b2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>Double<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> b1<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> BigDecimal <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">double</span> v1<span class="token punctuation">,</span><span class="token keyword">double</span> v2<span class="token punctuation">)</span><span class="token punctuation">{</span>        BigDecimal b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>Double<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BigDecimal b2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>Double<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> b1<span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span>b2<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>BigDecimal<span class="token punctuation">.</span>ROUND_HALF_UP<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//四舍五入,保留2位小数</span>        <span class="token comment" spellcheck="true">//除不尽的情况</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="高复用的逻辑方法封装思想"><a href="#高复用的逻辑方法封装思想" class="headerlink" title="高复用的逻辑方法封装思想"></a>高复用的逻辑方法封装思想</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%AB%98%E5%A4%8D%E7%94%A8%E7%9A%84%E9%80%BB%E8%BE%91%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85%E6%80%9D%E6%83%B3.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%AB%98%E5%A4%8D%E7%94%A8%E7%9A%84%E9%80%BB%E8%BE%91%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85%E6%80%9D%E6%83%B32.png" alt></p><h3 id="解决商业运算丢失精度的坑"><a href="#解决商业运算丢失精度的坑" class="headerlink" title="解决商业运算丢失精度的坑"></a>解决商业运算丢失精度的坑</h3><p>一定要用<code>BigDecimal</code>的<code>String</code>构造函数</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BigDecimalTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0.05</span><span class="token operator">+</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">-</span><span class="token number">0.42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">4.015</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">123.3</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        BigDecimal b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BigDecimal b2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        BigDecimal b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"0.05"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BigDecimal b2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">"0.01"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="订单模块"><a href="#订单模块" class="headerlink" title="订单模块"></a>订单模块</h2><h3 id="安全漏洞解决方案"><a href="#安全漏洞解决方案" class="headerlink" title="安全漏洞解决方案"></a>安全漏洞解决方案</h3><h3 id="订单号生成规则"><a href="#订单号生成规则" class="headerlink" title="订单号生成规则"></a>订单号生成规则</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E8%AE%A2%E5%8D%95%E5%8F%B7%E7%94%9F%E6%88%90%E8%A7%84%E5%88%99.png" alt></p><h3 id="强大的常量、枚举设计"><a href="#强大的常量、枚举设计" class="headerlink" title="强大的常量、枚举设计"></a>强大的常量、枚举设计</h3><p>Const.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>common<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>Sets<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Set<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Const</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String CURRENT_USER <span class="token operator">=</span> <span class="token string">"currentUser"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String EMAIL <span class="token operator">=</span> <span class="token string">"email"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String USERNAME <span class="token operator">=</span> <span class="token string">"username"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductListOrderBy</span><span class="token punctuation">{</span>        Set<span class="token operator">&lt;</span>String<span class="token operator">></span> PRICE_ASC_DESC <span class="token operator">=</span> Sets<span class="token punctuation">.</span><span class="token function">newHashSet</span><span class="token punctuation">(</span><span class="token string">"price_desc"</span><span class="token punctuation">,</span><span class="token string">"price_asc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Cart</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> CHECKED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//即购物车选中状态</span>        <span class="token keyword">int</span> UN_CHECKED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//购物车中未选中状态</span>        String LIMIT_NUM_FAIL <span class="token operator">=</span> <span class="token string">"LIMIT_NUM_FAIL"</span><span class="token punctuation">;</span>        String LIMIT_NUM_SUCCESS <span class="token operator">=</span> <span class="token string">"LIMIT_NUM_SUCCESS"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Role</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> ROLE_CUSTOMER <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//普通用户</span>        <span class="token keyword">int</span> ROLE_ADMIN <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//管理员</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">enum</span> ProductStatusEnum<span class="token punctuation">{</span>        <span class="token function">ON_SALE</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"在线"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> String value<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>        <span class="token function">ProductStatusEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> String <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> code<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">enum</span> OrderStatusEnum<span class="token punctuation">{</span>        <span class="token function">CANCELED</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"已取消"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">NO_PAY</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"未支付"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">PAID</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">"已付款"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">SHIPPED</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token string">"已发货"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">ORDER_SUCCESS</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">"订单完成"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">ORDER_CLOSE</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">"订单关闭"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">OrderStatusEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">private</span> String value<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>        <span class="token keyword">public</span> String <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> code<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> OrderStatusEnum <span class="token function">codeOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>OrderStatusEnum orderStatusEnum <span class="token operator">:</span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>orderStatusEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> code<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">return</span> orderStatusEnum<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"么有找到对应的枚举"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">AlipayCallback</span><span class="token punctuation">{</span>        String TRADE_STATUS_WAIT_BUYER_PAY <span class="token operator">=</span> <span class="token string">"WAIT_BUYER_PAY"</span><span class="token punctuation">;</span>        String TRADE_STATUS_TRADE_SUCCESS <span class="token operator">=</span> <span class="token string">"TRADE_SUCCESS"</span><span class="token punctuation">;</span>        String RESPONSE_SUCCESS <span class="token operator">=</span> <span class="token string">"success"</span><span class="token punctuation">;</span>        String RESPONSE_FAILED <span class="token operator">=</span> <span class="token string">"failed"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">enum</span> PayPlatformEnum<span class="token punctuation">{</span>        <span class="token function">ALIPAY</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"支付宝"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">PayPlatformEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">private</span> String value<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>        <span class="token keyword">public</span> String <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> code<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">enum</span> PaymentTypeEnum<span class="token punctuation">{</span>        <span class="token function">ONLINE_PAY</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"在线支付"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">PaymentTypeEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span>String value<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">private</span> String value<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>        <span class="token keyword">public</span> String <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> code<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> PaymentTypeEnum <span class="token function">codeOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>PaymentTypeEnum paymentTypeEnum <span class="token operator">:</span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>paymentTypeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> code<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">return</span> paymentTypeEnum<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"么有找到对应的枚举"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>使用<br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%BC%BA%E5%A4%A7%E7%9A%84%E5%B8%B8%E9%87%8F%E3%80%81%E6%9E%9A%E4%B8%BE%E8%AE%BE%E8%AE%A1.png" alt><br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%BC%BA%E5%A4%A7%E7%9A%84%E5%B8%B8%E9%87%8F%E3%80%81%E6%9E%9A%E4%B8%BE%E8%AE%BE%E8%AE%A12.png" alt><br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%BC%BA%E5%A4%A7%E7%9A%84%E5%B8%B8%E9%87%8F%E3%80%81%E6%9E%9A%E4%B8%BE%E8%AE%BE%E8%AE%A13.png" alt></p><h3 id="mybatis批量插入"><a href="#mybatis批量插入" class="headerlink" title="mybatis批量插入"></a>mybatis批量插入</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A52.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/mybatis%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A53.png" alt></p><h2 id="收货地址"><a href="#收货地址" class="headerlink" title="收货地址"></a>收货地址</h2><h3 id="同步获取自增主键"><a href="#同步获取自增主键" class="headerlink" title="同步获取自增主键"></a>同步获取自增主键</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%90%8C%E6%AD%A5%E8%8E%B7%E5%8F%96%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%90%8C%E6%AD%A5%E8%8E%B7%E5%8F%96%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE2.png" alt></p><h3 id="数据绑定的对象绑定"><a href="#数据绑定的对象绑定" class="headerlink" title="数据绑定的对象绑定"></a>数据绑定的对象绑定</h3><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%BB%91%E5%AE%9A.png" alt></p><p>收货地址对象必须要有<code>get</code>和<code>set</code>方法</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%BB%91%E5%AE%9A2.png" alt></p><h3 id="越权问题升级巩固"><a href="#越权问题升级巩固" class="headerlink" title="越权问题升级巩固"></a>越权问题升级巩固</h3><h2 id="支付模块"><a href="#支付模块" class="headerlink" title="支付模块"></a>支付模块</h2><h3 id="支付宝SDK源码解析"><a href="#支付宝SDK源码解析" class="headerlink" title="支付宝SDK源码解析"></a>支付宝SDK源码解析</h3><p><a href="https://docs.open.alipay.com/194/105072/" target="_blank" rel="noopener">当面付</a></p><p><a href="https://docs.open.alipay.com/194/105201/" target="_blank" rel="noopener">当面付Demo</a></p><p><a href="https://docs.open.alipay.com/54/103419" target="_blank" rel="noopener">服务端SDK下载和使用教程</a></p><p><a href="https://docs.open.alipay.com/200/105311/" target="_blank" rel="noopener">沙箱环境使用</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%B2%99%E7%AE%B1%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.png" alt></p><p><a href="https://docs.open.alipay.com/291/105971/" target="_blank" rel="noopener">生成RSA密钥</a></p><h3 id="支付宝支付流程与集成"><a href="#支付宝支付流程与集成" class="headerlink" title="支付宝支付流程与集成"></a>支付宝支付流程与集成</h3><p>导入依赖</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98%E6%B5%81%E7%A8%8B%E4%B8%8E%E9%9B%86%E6%88%90.png" alt></p><p>配置maven插件,除了<code>pom.xml</code>配置的依赖，lib包中的依赖也会一起打包部署</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98%E6%B5%81%E7%A8%8B%E4%B8%8E%E9%9B%86%E6%88%902.png" alt></p><p>配置沙箱环境<code>zfbinfo.properties</code></p><pre><code># 支付宝网关名、partnerId和appIdopen_api_domain = https://openapi.alipaydev.com/gateway.domcloud_api_domain = http://mcloudmonitor.com/gateway.dopid = 2088102180444972appid = 2016102100728313# RSA私钥、公钥和支付宝公钥private_key = MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCKQ2pEIzXM4IoN1cMzOFXdlk8yVX2cKXWITZ92EGAQQcRytaV07yQOaz3UE9KTeT9Nu628G+HZMsJUxQjEUETagmY5nLtbeL35M2UcibYpM3e2gVTtUW86CA65GCdLzUhdIug8yf2F9zWayzG4sHZ9DcTezG6ZjFu+EtDpFgg+CtqY7n/ihjTIqeE1lX0C2ZIKpIYs7QjR8AztB/qRcpOJKRfMKGDgmT9GALN8LeFEYCbQ+W/GJHN8bQ0Bk1Ll6EKQ4cHXZ1Yko+aXaRfbXfUZYgD9hwAVlxtwZndgeFX8KapOCw0J25pzV4WkutIjMlt7I2Q1jaWNoKLuxtz4M2mzAgMBAAECggEAAhnsL4TpeGehMXyiLtEYXPm/0mACPLFUm/GyDrVJAHY/ag7gqNpJjf6LPgHfHWamU6Qai9VQpWBkG62y6Gjf4wJAU3fSUR2QpYzmaHyfTBkAJMHqbIDkU9lzf9SiJEDGbMPvC512QOb05ZlY9Bmac2QWLdylgafkbQsUKbawAWFa/BAOMIp0tgYLW8/yY2aG6jeLqhOgTo8MWIW5d1qHtX5m/x7g97dYYMdX3kTo2i1dFLUVfEOvZe4US6VBvLg71dMxwadVF5YMaY9jq/ShPD0Gkf29wdThwsjcH6u9Tq/KArQTK+z02DAGkdWOcue3pHql+gvoIA8U5uFDdIeYwQKBgQDri3jPkDKi48efdKQk38rn+CJYeNFNRAhlly3h2AHaFEY92XRlBsho/vGFg43BvHu+cMz0Run4SS8Vo09vcTIY6p2xNMffjR0w2gQqx6PUdGHBFtw7FavxN4uVtVhL6uTAqfBv97mqQO0bq+DhOGwSRNIWqvnzfXywqwmXhKYECwKBgQCWRTl6tNv8scxPq4fpRL/uw71TU6XqSS/nME7KT4uyQPAXPk0mXVVwdmyST9Crlr6O6WJopPe9nMIFUYdjdkLfGKLCR96AH3U7frr4jf60eDYEhfHGIzln/ptrTJLvvbXTaPctAaZd6TIv63QVz3yim4MMl3VSdRlrE+O9R5ZR+QKBgQDjEP8TyUSnNsJX+4/JZFwsp04kz8OlorIdjVHT5/JREz5rnVfRlGpanXqjZSCg5Vy9R+ysiDhA+/wB9f87xXmv/2ypSeJspZLAZ0uhGffbdZ5PEASaiNfKn+tWFQ3bkcOX37tDlSJM+G4bQOR2+XdlXSbSZ1yx2AT+IsQKZvvL5QKBgQCPZEUiEz0sV1kX2R2a+XCQ3RVnUxWqh+X/HPjCUr+B/DdeZqPl7QAfjdGymBkN842o/4lZQ7nnpJL70j14KpxLGM4Ox9fIuLv8ZsTxc0XOXjtle48nO+uGkc0qyWoY/RVpQ+tBdiaTzHeIhIxEV7adz/lwZYKdiYIUzGjv8ES/uQKBgCgeWysXjahCQItxx5fTrS8SQFP7Dx5vDW+UkqQ2pbL0AlHyUS7pWJj3AAe3pn4AJZZp4SZPoQP+Z8JPqDA6MrQWHYMi0XkMuMYwLWbGCkmf1MnjUxgOaLXoItjxS/y3jQfeOmHhmOAVkjnEvAh+BWlZxFMv2kiuHRU72bNa0rDIpublic_key = MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAikNqRCM1zOCKDdXDMzhV3ZZPMlV9nCl1iE2fdhBgEEHEcrWldO8kDms91BPSk3k/TbutvBvh2TLCVMUIxFBE2oJmOZy7W3i9+TNlHIm2KTN3toFU7VFvOggOuRgnS81IXSLoPMn9hfc1mssxuLB2fQ3E3sxumYxbvhLQ6RYIPgramO5/4oY0yKnhNZV9AtmSCqSGLO0I0fAM7Qf6kXKTiSkXzChg4Jk/RgCzfC3hRGAm0PlvxiRzfG0NAZNS5ehCkOHB12dWJKPml2kX2131GWIA/YcAFZcbcGZ3YHhV/CmqTgsNCduac1eFpLrSIzJbeyNkNY2ljaCi7sbc+DNpswIDAQAB#SHA1withRsa对应支付宝公钥#alipay_public_key = MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDDI6d306Q8fIfCOaTXyiUeJHkrIvYISRcc73s3vF1ZT7XN8RNPwJxo8pWaJMmvyTn9N4HQ632qJBVHf8sxHi/fEsraprwCtzvzQETrNRwVxLO5jVmRGi60j8Ue1efIlzPXV9je9mkjzOmdssymZkh2QhUrCmZYI/FCEa3/cNMW0QIDAQAB#SHA256withRsa对应支付宝公钥alipay_public_key = MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqzWgVL/NWrJAeyEImwtaK3IDwj0dKkqUDIfqqWn5SiLaWMYi9RmKhn+jY9VM7JXEIkYYeVlqIL6Xn7OvYFRTi4buTCXGKvFLn95aDcaur77/S/0ibcdN1K2wIoHzaqQhXAb1ezKxTnFP7OLJsAL22b0NzrQDj2OH9SA06gJb8nHBfR+7Sx7DfwcqE0OtTcDHjbbcB24Qgg/dfItxoEnKuSyRVrf6BtpUnJxSzG/Ge7FfF+VBq8re1t4ZTSxaDEjto071I5VFBxr7I4SyqZsc7WpAmZL8AqUgEbQ1XYBWx2LnpJXM5GQW/thUvcDDqzea7LJNWJOQPM5DaZQgu7QuuwIDAQAB# 签名类型: RSA-&gt;SHA1withRsa,RSA2-&gt;SHA256withRsasign_type = RSA2# 当面付最大查询次数和查询间隔（毫秒）max_query_retry = 5query_duration = 5000# 当面付最大撤销次数和撤销间隔（毫秒）max_cancel_retry = 3cancel_duration = 2000# 交易保障线程第一次调度延迟和调度间隔（秒）heartbeat_delay = 5heartbeat_duration = 900</code></pre><h3 id="二维码生成，扫码支付"><a href="#二维码生成，扫码支付" class="headerlink" title="二维码生成，扫码支付"></a>二维码生成，扫码支付</h3><p>配置回调<code>url</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%BA%8C%E7%BB%B4%E7%A0%81%E7%94%9F%E6%88%90%EF%BC%8C%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98.png" alt></p><p>两次回调，扫码进行一次回调，扫码付款成功进行一次回调</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%BA%8C%E7%BB%B4%E7%A0%81%E7%94%9F%E6%88%90%EF%BC%8C%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%982.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%BA%8C%E7%BB%B4%E7%A0%81%E7%94%9F%E6%88%90%EF%BC%8C%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%983.png" alt></p><p>生成二维码，上传到<code>ftp</code>服务器</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%BA%8C%E7%BB%B4%E7%A0%81%E7%94%9F%E6%88%90%EF%BC%8C%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%984.png" alt></p><p>OrderServiceImpl.java</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>mmall<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * Created by geely */</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">"iOrderService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IOrderService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span>  AlipayTradeService tradeService<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/** 一定要在创建AlipayTradeService之前调用Configs.init()设置默认参数         *  Configs会读取classpath下的zfbinfo.properties文件配置信息，如果找不到该文件则确认该文件是否在classpath目录         */</span>        Configs<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token string">"zfbinfo.properties"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/** 使用Configs提供的默认参数         *  AlipayTradeService可以使用单例或者为静态成员对象，不需要反复new         */</span>        tradeService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlipayTradeServiceImpl<span class="token punctuation">.</span>ClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>OrderServiceImpl<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> OrderMapper orderMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> OrderItemMapper orderItemMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> PayInfoMapper payInfoMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> CartMapper cartMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ProductMapper productMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> ShippingMapper shippingMapper<span class="token punctuation">;</span>    <span class="token keyword">public</span> ServerResponse <span class="token function">pay</span><span class="token punctuation">(</span>Long orderNo<span class="token punctuation">,</span>Integer userId<span class="token punctuation">,</span>String path<span class="token punctuation">)</span><span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>String <span class="token punctuation">,</span>String<span class="token operator">></span> resultMap <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Order order <span class="token operator">=</span> orderMapper<span class="token punctuation">.</span><span class="token function">selectByUserIdAndOrderNo</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span>orderNo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>order <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"用户没有该订单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"orderNo"</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getOrderNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// (必填) 商户网站订单系统中唯一订单号，64个字符以内，只能包含字母、数字、下划线，</span>        <span class="token comment" spellcheck="true">// 需保证商户系统端不能重复，建议通过数据库sequence生成，</span>        String outTradeNo <span class="token operator">=</span> order<span class="token punctuation">.</span><span class="token function">getOrderNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// (必填) 订单标题，粗略描述用户的支付目的。如“xxx品牌xxx门店当面付扫码消费”</span>        String subject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"happymmall扫码支付,订单号:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>outTradeNo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// (必填) 订单总金额，单位为元，不能超过1亿元</span>        <span class="token comment" spellcheck="true">// 如果同时传入了【打折金额】,【不可打折金额】,【订单总金额】三者,则必须满足如下条件:【订单总金额】=【打折金额】+【不可打折金额】</span>        String totalAmount <span class="token operator">=</span> order<span class="token punctuation">.</span><span class="token function">getPayment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// (可选) 订单不可打折金额，可以配合商家平台配置折扣活动，如果酒水不参与打折，则将对应金额填写至此字段</span>        <span class="token comment" spellcheck="true">// 如果该值未传入,但传入了【订单总金额】,【打折金额】,则该值默认为【订单总金额】-【打折金额】</span>        String undiscountableAmount <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 卖家支付宝账号ID，用于支持一个签约账号下支持打款到不同的收款账号，(打款到sellerId对应的支付宝账号)</span>        <span class="token comment" spellcheck="true">// 如果该字段为空，则默认为与支付宝签约的商户的PID，也就是appid对应的PID</span>        String sellerId <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 订单描述，可以对交易或商品进行一个详细地描述，比如填写"购买商品2件共15.00元"</span>        String body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"订单"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>outTradeNo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"购买商品共"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>totalAmount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 商户操作员编号，添加此参数可以为商户操作员做销售统计</span>        String operatorId <span class="token operator">=</span> <span class="token string">"test_operator_id"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// (必填) 商户门店编号，通过门店号和商家后台可以配置精准到门店的折扣信息，详询支付宝技术支持</span>        String storeId <span class="token operator">=</span> <span class="token string">"test_store_id"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 业务扩展参数，目前可添加由支付宝分配的系统商编号(通过setSysServiceProviderId方法)，详情请咨询支付宝技术支持</span>        ExtendParams extendParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExtendParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        extendParams<span class="token punctuation">.</span><span class="token function">setSysServiceProviderId</span><span class="token punctuation">(</span><span class="token string">"2088100200300400500"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 支付超时，定义为120分钟</span>        String timeoutExpress <span class="token operator">=</span> <span class="token string">"120m"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 商品明细列表，需填写购买商品详细信息，</span>        List<span class="token operator">&lt;</span>GoodsDetail<span class="token operator">></span> goodsDetailList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>GoodsDetail<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>OrderItem<span class="token operator">></span> orderItemList <span class="token operator">=</span> orderItemMapper<span class="token punctuation">.</span><span class="token function">getByOrderNoUserId</span><span class="token punctuation">(</span>orderNo<span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>OrderItem orderItem <span class="token operator">:</span> orderItemList<span class="token punctuation">)</span><span class="token punctuation">{</span>            GoodsDetail goods <span class="token operator">=</span> GoodsDetail<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>orderItem<span class="token punctuation">.</span><span class="token function">getProductId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> orderItem<span class="token punctuation">.</span><span class="token function">getProductName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    BigDecimalUtil<span class="token punctuation">.</span><span class="token function">mul</span><span class="token punctuation">(</span>orderItem<span class="token punctuation">.</span><span class="token function">getCurrentUnitPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Double</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    orderItem<span class="token punctuation">.</span><span class="token function">getQuantity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            goodsDetailList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 创建扫码支付请求builder，设置请求参数</span>        AlipayTradePrecreateRequestBuilder builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlipayTradePrecreateRequestBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTotalAmount</span><span class="token punctuation">(</span>totalAmount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOutTradeNo</span><span class="token punctuation">(</span>outTradeNo<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setUndiscountableAmount</span><span class="token punctuation">(</span>undiscountableAmount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSellerId</span><span class="token punctuation">(</span>sellerId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setOperatorId</span><span class="token punctuation">(</span>operatorId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStoreId</span><span class="token punctuation">(</span>storeId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setExtendParams</span><span class="token punctuation">(</span>extendParams<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setTimeoutExpress</span><span class="token punctuation">(</span>timeoutExpress<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setNotifyUrl</span><span class="token punctuation">(</span>PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"alipay.callback.url"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//支付宝服务器主动通知商户服务器里指定的页面http路径,根据需要设置</span>                <span class="token punctuation">.</span><span class="token function">setGoodsDetailList</span><span class="token punctuation">(</span>goodsDetailList<span class="token punctuation">)</span><span class="token punctuation">;</span>        AlipayF2FPrecreateResult result <span class="token operator">=</span> tradeService<span class="token punctuation">.</span><span class="token function">tradePrecreate</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getTradeStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> SUCCESS<span class="token operator">:</span>                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"支付宝预下单成功: )"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                AlipayTradePrecreateResponse response <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">dumpResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                File folder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>folder<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    folder<span class="token punctuation">.</span><span class="token function">setWritable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    folder<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// 需要修改为运行机器上的路径</span>                <span class="token comment" spellcheck="true">//细节细节细节</span>                String qrPath <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>path<span class="token operator">+</span><span class="token string">"/qr-%s.png"</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span><span class="token function">getOutTradeNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String qrFileName <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"qr-%s.png"</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span><span class="token function">getOutTradeNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ZxingUtils<span class="token punctuation">.</span><span class="token function">getQRCodeImge</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getQrCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> qrPath<span class="token punctuation">)</span><span class="token punctuation">;</span>                File targetFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>qrFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    FTPUtil<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span>Lists<span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"上传二维码异常"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"qrPath:"</span> <span class="token operator">+</span> qrPath<span class="token punctuation">)</span><span class="token punctuation">;</span>                String qrUrl <span class="token operator">=</span> PropertiesUtil<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"ftp.server.http.prefix"</span><span class="token punctuation">)</span><span class="token operator">+</span>targetFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                resultMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"qrUrl"</span><span class="token punctuation">,</span>qrUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccess</span><span class="token punctuation">(</span>resultMap<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> FAILED<span class="token operator">:</span>                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"支付宝预下单失败!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"支付宝预下单失败!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> UNKNOWN<span class="token operator">:</span>                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"系统异常，预下单状态未知!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"系统异常，预下单状态未知!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"不支持的交易状态，交易返回异常!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"不支持的交易状态，交易返回异常!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 简单打印应答</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">dumpResponse</span><span class="token punctuation">(</span>AlipayResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"code:%s, msg:%s"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getSubCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"subCode:%s, subMsg:%s"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getSubCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        response<span class="token punctuation">.</span><span class="token function">getSubMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"body:"</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ServerResponse <span class="token function">aliCallback</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> params<span class="token punctuation">)</span><span class="token punctuation">{</span>        Long orderNo <span class="token operator">=</span> Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"out_trade_no"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String tradeNo <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"trade_no"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String tradeStatus <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"trade_status"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Order order <span class="token operator">=</span> orderMapper<span class="token punctuation">.</span><span class="token function">selectByOrderNo</span><span class="token punctuation">(</span>orderNo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>order <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"非快乐慕商城的订单,回调忽略"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> Const<span class="token punctuation">.</span>OrderStatusEnum<span class="token punctuation">.</span>PAID<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccess</span><span class="token punctuation">(</span><span class="token string">"支付宝重复调用"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>AlipayCallback<span class="token punctuation">.</span>TRADE_STATUS_TRADE_SUCCESS<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>tradeStatus<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            order<span class="token punctuation">.</span><span class="token function">setPaymentTime</span><span class="token punctuation">(</span>DateTimeUtil<span class="token punctuation">.</span><span class="token function">strToDate</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"gmt_payment"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            order<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>OrderStatusEnum<span class="token punctuation">.</span>PAID<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            orderMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKeySelective</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        PayInfo payInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PayInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        payInfo<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        payInfo<span class="token punctuation">.</span><span class="token function">setOrderNo</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getOrderNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        payInfo<span class="token punctuation">.</span><span class="token function">setPayPlatform</span><span class="token punctuation">(</span>Const<span class="token punctuation">.</span>PayPlatformEnum<span class="token punctuation">.</span>ALIPAY<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        payInfo<span class="token punctuation">.</span><span class="token function">setPlatformNumber</span><span class="token punctuation">(</span>tradeNo<span class="token punctuation">)</span><span class="token punctuation">;</span>        payInfo<span class="token punctuation">.</span><span class="token function">setPlatformStatus</span><span class="token punctuation">(</span>tradeStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>        payInfoMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>payInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> ServerResponse <span class="token function">queryOrderPayStatus</span><span class="token punctuation">(</span>Integer userId<span class="token punctuation">,</span>Long orderNo<span class="token punctuation">)</span><span class="token punctuation">{</span>        Order order <span class="token operator">=</span> orderMapper<span class="token punctuation">.</span><span class="token function">selectByUserIdAndOrderNo</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span>orderNo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>order <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByErrorMessage</span><span class="token punctuation">(</span><span class="token string">"用户没有该订单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> Const<span class="token punctuation">.</span>OrderStatusEnum<span class="token punctuation">.</span>PAID<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createBySuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ServerResponse<span class="token punctuation">.</span><span class="token function">createByError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><p><a href="https://natapp.cn/article/natapp_newbie" target="_blank" rel="noopener">NATAPP1分钟快速新手图文教程</a></p><h2 id="线上部署"><a href="#线上部署" class="headerlink" title="线上部署"></a>线上部署</h2><h3 id="云服务器vsftpd、nginx等配置"><a href="#云服务器vsftpd、nginx等配置" class="headerlink" title="云服务器vsftpd、nginx等配置"></a>云服务器vsftpd、nginx等配置</h3><h3 id="云服务器的配置与域名解析"><a href="#云服务器的配置与域名解析" class="headerlink" title="云服务器的配置与域名解析"></a>云服务器的配置与域名解析</h3><h3 id="发布上线注意事项"><a href="#发布上线注意事项" class="headerlink" title="发布上线注意事项"></a>发布上线注意事项</h3>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> ssm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux系统下开发环境安装与配置</title>
      <link href="/2019/03/07/linux-xi-tong-xia-kai-fa-huan-jing-an-zhuang-yu-pei-zhi/"/>
      <url>/2019/03/07/linux-xi-tong-xia-kai-fa-huan-jing-an-zhuang-yu-pei-zhi/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>安装系统环境</strong></p></blockquote><p>CentOS 6.8 64位</p><blockquote><p><strong>jdk版本</strong></p></blockquote><p>7u80 64位</p><blockquote><p><strong>Tomcat版本</strong></p></blockquote><p>Tomcat7</p><blockquote><p><strong>maven版本</strong></p></blockquote><p>Apache Maven 3.6.0 </p><blockquote><p><strong>vsftpd版本</strong></p></blockquote><p>vsftpd-2.2.2-24.el6.x86_64</p><blockquote><p><strong>Nginx版本</strong></p></blockquote><p>nginx-1.14.2</p><blockquote><p><strong>mysql版本</strong></p></blockquote><p>mysql-server-5.1.73-8.el6_8.x86_64</p><blockquote><p><strong>git版本</strong></p></blockquote><p>git version 2.18.0</p><blockquote><p><a href="https://opsx.alibaba.com/mirror?lang=zh-CN" target="_blank" rel="noopener"><strong>阿里源配置</strong></a></p></blockquote><pre><code>#备份[root@192 yum.repos.d]# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup#下载新的CentOS-Base.repo 到/etc/yum.repos.d/[root@192 yum.repos.d]# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo#生成缓存[root@192 yum.repos.d]# yum makecache</code></pre><blockquote><h2 id="设置开机时关闭防火墙"><a href="#设置开机时关闭防火墙" class="headerlink" title="设置开机时关闭防火墙"></a>设置开机时关闭防火墙</h2></blockquote><pre><code>[root@192 vsftpd]# chkconfig iptables off</code></pre><blockquote><h2 id="jdk安装"><a href="#jdk安装" class="headerlink" title="jdk安装"></a>jdk安装</h2></blockquote><p><a href="https://download.oracle.com/otn/java/jdk/7u80-b15/jdk-7u80-linux-x64.rpm?AuthParam=1551932562_fbefc7bf2ff59b8dd7dbb54130a3442a" target="_blank" rel="noopener">下载</a></p><p>清理系统默认自带jdk</p><pre><code>[root@192 yum.repos.d]# rpm -qa | grep jdkjava-1.6.0-openjdk-1.6.0.38-1.13.10.4.el6.x86_64java-1.7.0-openjdk-1.7.0.99-2.6.5.1.el6.x86_64[root@192 yum.repos.d]# yum remove java-1.6.0-openjdk-1.6.0.38-1.13.10.4.el6.x86_64[root@192 yum.repos.d]# yum remove java-1.7.0-openjdk-1.7.0.99-2.6.5.1.el6.x86_64</code></pre><p>授权</p><pre><code>[root@192 soft]# chmod 777 jdk-7u80-linux-x64.rpm </code></pre><p>安装</p><pre><code>[root@192 soft]# rpm -ivh jdk-7u80-linux-x64.rpm </code></pre><p>默认安装路径<code>/user/java</code></p><p>jdk配置环境变量,编辑<code>/etc/profile</code>文件，末尾追加</p><pre><code>#jdkexport JAVA_HOME=/usr/java/jdk1.7.0_80export PATH=$PATH:$JAVA_HOME/binexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</code></pre><p>使得<code>/etc/profile</code>文件立即生效</p><pre><code>[root@192 apache-maven-3.6.0]# source /etc/profile</code></pre><blockquote><h2 id="Tomcat安装"><a href="#Tomcat安装" class="headerlink" title="Tomcat安装"></a>Tomcat安装</h2></blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-7/v7.0.93/bin/apache-tomcat-7.0.93.tar.gz" target="_blank" rel="noopener">下载</a></p><p>解压</p><pre><code>[root@192 soft]# tar -zxvf apache-tomcat-7.0.93.tar.gz -C /opt/module/</code></pre><p>Tomcat配置环境变量,编辑<code>/etc/profile</code>文件，末尾追加</p><pre><code>#tomcatexport CATALINA_HOME=/opt/module/apache-tomcat-7.0.93export PATH=$PATH:$CATALINA_HOME/bin</code></pre><p>使得<code>/etc/profile</code>文件立即生效</p><pre><code>[root@192 apache-maven-3.6.0]# source /etc/profile</code></pre><p>配置UTF-8字符集，进入Tomcat安装的<code>conf</code>文件夹，编辑<code>server.xml</code>文件，找到配置8080默认端口的位置，在xml节点末尾增加<code>URIEncoding=&quot;UTF-8&quot;</code></p><pre><code>&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;               connectionTimeout=&quot;20000&quot;               redirectPort=&quot;8443&quot; URIEncoding=&quot;UTF-8&quot; /&gt;</code></pre><p>启动Tomcat，进入<code>/opt/module/apache-tomcat-7.0.93/bin</code>目录，执行<code>./startup.sh</code></p><p>访问<a href="http://192.168.1.104:8080/" target="_blank" rel="noopener">http://192.168.1.104:8080/</a></p><blockquote><h2 id="Maven安装"><a href="#Maven安装" class="headerlink" title="Maven安装"></a>Maven安装</h2></blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz" target="_blank" rel="noopener">下载</a></p><p>解压</p><pre><code>[root@192 soft]# tar -zxvf apache-maven-3.6.0-bin.tar.gz -C /opt/module/</code></pre><p>Maven配置环境变量,编辑<code>/etc/profile</code>文件，末尾追加</p><pre><code>#mavenexport MAVEN_HOME=/opt/module/apache-maven-3.6.0export PATH=$PATH:$MAVEN_HOME/bin</code></pre><p>使得<code>/etc/profile</code>文件立即生效</p><pre><code>[root@192 apache-maven-3.6.0]# source /etc/profile</code></pre><p>验证</p><pre><code>[root@192 apache-maven-3.6.0]# mvn -version</code></pre><blockquote><h2 id="vsftpd安装"><a href="#vsftpd安装" class="headerlink" title="vsftpd安装"></a>vsftpd安装</h2></blockquote><p>安装</p><pre><code>[root@192 apache-maven-3.6.0]# yum -y install vsftpd</code></pre><p>查看是否已安装</p><pre><code>[root@192 apache-maven-3.6.0]# rpm -qa | grep vsftpdvsftpd-2.2.2-24.el6.x86_64</code></pre><p>默认配置文件<code>/etc/vsftpd/vsftpd.conf</code></p><p>创建虚拟用户</p><p>根目录下创建ftp文件夹</p><pre><code>[root@192 vsftpd]# cd /[root@192 /]# mkdir ftpfile</code></pre><p>添加匿名用户</p><pre><code>[root@192 /]# useradd ftpuser -d /ftpfile/ -s /sbin/nologin </code></pre><p>修改ftpfile权限</p><pre><code>[root@192 /]# chown -R ftpuser.ftpuser /ftpfile/</code></pre><p>重设ftpuser密码</p><pre><code>[root@192 /]# passwd ftpuser</code></pre><p>将刚刚新增的虚拟用户添加到此配置文件中</p><pre><code>[root@192 ~]# cd /etc/vsftpd/[root@192 vsftpd]# vim chroo_list [root@192 bin]# cat /etc/vsftpd/chroo_list ftpuser</code></pre><p>编辑配置文件<code>/etc/vsftpd/vsftpd.conf</code>，末尾追加</p><pre><code>local_root=/ftpfileanon_root=/ftpfileuse_localtime=YESanonymous_enable=no</code></pre><p>登录验证的时候出现500提示,编辑<code>/etc/selinux/config</code>文件，设置<code>SELINUX=disabled</code></p><pre><code>[root@192 vsftpd]# vim /etc/selinux/config</code></pre><p>如果还报500，执行</p><pre><code>[root@192 vsftpd]# setsebool -P ftp_home_dir 1</code></pre><p>设置开启启动vsftpd服务</p><pre><code>[root@192 vsftpd]# chkconfig vsftpd on</code></pre><p>访问<a href="ftp://192.168.1.104/" target="_blank" rel="noopener">ftp://192.168.1.104/</a></p><blockquote><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2></blockquote><p><a href="http://nginx.org/download/nginx-1.14.2.tar.gz" target="_blank" rel="noopener">下载</a></p><p>安装依赖gcc、pcre、zlib、openssl</p><pre><code>[root@192 vsftpd]# yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</code></pre><p>解压</p><pre><code>[root@192 soft]# tar -zxvf nginx-1.14.2.tar.gz -C /opt/module/</code></pre><p>编译安装</p><pre><code>[root@192 nginx-1.14.2]# pwd/opt/module/nginx-1.14.2[root@192 nginx-1.14.2]# ./configure[root@192 nginx-1.14.2]# make[root@192 nginx-1.14.2]# make install</code></pre><p>查看Nginx安装目录、版本</p><pre><code>[root@192 nginx-1.14.2]# whereis nginxnginx: /usr/local/nginx[root@192 nginx-1.14.2]# /usr/local/nginx/sbin/nginx -vnginx version: nginx/1.14.2</code></pre><p>测试配置文件<code>nginx.conf</code>的正确性</p><pre><code>[root@192 nginx-1.14.2]# /usr/local/nginx/sbin/nginx  -t</code></pre><p>启动Nginx</p><pre><code>[root@192 nginx-1.14.2]# /usr/local/nginx/sbin/nginx[root@192 nginx-1.14.2]# ps -ef | grep nginxroot       5606      1  0 01:02 ?        00:00:00 nginx: master process /usr/local/nginx/sbin/nginxnobody     5607   5606  0 01:02 ?        00:00:00 nginx: worker process      root       5626   2868  0 01:09 pts/0    00:00:00 grep nginx</code></pre><p>停止Nginx</p><pre><code>[root@192 nginx-1.14.2]# /usr/local/nginx/sbin/nginx -s stop</code></pre><p>访问<a href="http://192.168.1.104/" target="_blank" rel="noopener">http://192.168.1.104/</a></p><blockquote><h3 id="Nginx配置虚拟域名"><a href="#Nginx配置虚拟域名" class="headerlink" title="Nginx配置虚拟域名"></a>Nginx配置虚拟域名</h3></blockquote><p>配置虚拟域名映射</p><pre><code>[root@192 vhost]# cat /etc/hosts127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6#centos#192.168.1.104  www.imooc.com127.0.0.1 www.imooc.com</code></pre><p>测试</p><pre><code>[root@192 sbin]# ping www.imooc.comPING www.imooc.com (127.0.0.1) 56(84) bytes of data.64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.013 ms64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.032 ms</code></pre><p>编辑<code>/usr/local/nginx/conf/nginx.conf</code>文件，追加</p><pre><code> ###########################vhost##############################################    include vhost/*.conf;</code></pre><p>在<code>/usr/local/nginx/conf</code>目录下，新建<code>vhost</code>文件夹</p><p>在<code>/usr/local/nginx/conf/vhost</code>目录下，新建域名转发<code>www.mytest.com.conf</code>配置文件</p><pre><code>[root@192 vhost]# cat /usr/local/nginx/conf/vhost/www.mytest.com.conf #Start www.mytest.comserver {    listen 80;    server_name  www.mytest.com;    access_log  /usr/local/nginx/logs/access.log combined;    index  index.html index.htm index.php;    if ( $query_string ~* &quot;.*[\;&#39;\&lt;\&gt;].*&quot; ){     return 404;     }    # send request back to apach    location / {       proxy_pass http://127.0.0.1:8080/;    }}</code></pre><p>访问<a href="www.test.com">www.mytest.com</a></p><blockquote><h3 id="Nginx配置静态资源转发"><a href="#Nginx配置静态资源转发" class="headerlink" title="Nginx配置静态资源转发"></a>Nginx配置静态资源转发</h3></blockquote><p>编辑<code>/usr/local/nginx/conf/nginx.conf</code>文件，追加</p><pre><code> ###########################vhost##############################################    include vhost/*.conf;</code></pre><p>在<code>/usr/local/nginx/conf</code>目录下，新建<code>vhost</code>文件夹</p><p>在<code>/usr/local/nginx/conf/vhost</code>目录下，新建域名转发<code>www.mytest.com.conf</code>配置文件</p><pre><code>[root@192 vhost]# cat /usr/local/nginx/conf/vhost/www.mytest.com.conf #Start www.mytest.comserver {    listen 80;    server_name  www.mytest.com;    access_log  /usr/local/nginx/logs/access.log combined;    index  index.html index.htm index.php;    if ( $query_string ~* &quot;.*[\;&#39;\&lt;\&gt;].*&quot; ){     return 404;     }    # send request back to apach    location / {       root /ftpfile/;    }}</code></pre><blockquote><h2 id="mysql安装"><a href="#mysql安装" class="headerlink" title="mysql安装"></a>mysql安装</h2></blockquote><p>安装</p><pre><code>[root@192 ~]# yum -y install mysql-server</code></pre><p>配置字符集,编辑<code>/etc/my.cnf</code>文件，追加</p><pre><code>#utf8default-character-set=utf8</code></pre><p>设置<code>mysql</code>服务随系统自动启动</p><pre><code>[root@192 ~]# chkconfig mysqld on[root@192 ~]# chkconfig --list mysqldmysqld             0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭</code></pre><p>启动<code>mysql</code>服务</p><pre><code>[root@192 ~]# service mysqld start正在启动 mysqld：                                          [确定]</code></pre><p>登录，使用非密码登录</p><pre><code>[root@192 mysql]# mysql -uroot Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 5Server version: 5.1.73 Source distributionCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.mysql&gt; </code></pre><p>查看<code>mysql</code>的用户</p><pre><code>mysql&gt; select user,host,password from  mysql.user;+------+---------------+----------+| user | host          | password |+------+---------------+----------+| root | localhost     |          || root | 192.168.1.104 |          || root | 127.0.0.1     |          ||      | localhost     |          ||      | 192.168.1.104 |          |+------+---------------+----------+5 rows in set (0.00 sec)</code></pre><p>删除匿名用户</p><pre><code>mysql&gt; delete from mysql.user where user=&#39;&#39;;Query OK, 2 rows affected (0.00 sec)</code></pre><p>刷新，立即生效</p><pre><code>mysql&gt; flush privileges;Query OK, 0 rows affected (0.00 sec)</code></pre><p>修改<code>root</code>密码</p><pre><code>mysql&gt; set password for root@localhost=password(&quot;000000&quot;);Query OK, 0 rows affected (0.00 sec)</code></pre><p>插入mysql新用户</p><pre><code>mysql&gt; insert into mysql.user(Host,User,Password) values(&quot;localhost&quot;,&quot;admin&quot;,password(&quot;000000&quot;));Query OK, 1 row affected, 3 warnings (0.01 sec)</code></pre><p>查看用户权限</p><pre><code>mysql&gt; select * from mysql.user \G*************************** 1. row ***************************                 Host: localhost                 User: root             Password: *032197AE5731D4664921A6CCAC7CFCE6A0698693          Select_priv: Y          Insert_priv: Y          Update_priv: Y          Delete_priv: Y          Create_priv: Y            Drop_priv: Y          Reload_priv: Y        Shutdown_priv: Y         Process_priv: Y            File_priv: Y           Grant_priv: Y      References_priv: Y           Index_priv: Y           Alter_priv: Y         Show_db_priv: Y           Super_priv: YCreate_tmp_table_priv: Y     Lock_tables_priv: Y         Execute_priv: Y      Repl_slave_priv: Y     Repl_client_priv: Y     Create_view_priv: Y       Show_view_priv: Y  Create_routine_priv: Y   Alter_routine_priv: Y     Create_user_priv: Y           Event_priv: Y         Trigger_priv: Y             ssl_type:            ssl_cipher:           x509_issuer:          x509_subject:         max_questions: 0          max_updates: 0      max_connections: 0 max_user_connections: 0*************************** 2. row ***************************                 Host: 192.168.1.104                 User: root             Password:           Select_priv: Y          Insert_priv: Y          Update_priv: Y          Delete_priv: Y          Create_priv: Y            Drop_priv: Y          Reload_priv: Y        Shutdown_priv: Y         Process_priv: Y            File_priv: Y           Grant_priv: Y      References_priv: Y           Index_priv: Y           Alter_priv: Y         Show_db_priv: Y           Super_priv: YCreate_tmp_table_priv: Y     Lock_tables_priv: Y         Execute_priv: Y      Repl_slave_priv: Y     Repl_client_priv: Y     Create_view_priv: Y       Show_view_priv: Y  Create_routine_priv: Y   Alter_routine_priv: Y     Create_user_priv: Y           Event_priv: Y         Trigger_priv: Y             ssl_type:            ssl_cipher:           x509_issuer:          x509_subject:         max_questions: 0          max_updates: 0      max_connections: 0 max_user_connections: 0*************************** 3. row ***************************                 Host: 127.0.0.1                 User: root             Password:           Select_priv: Y          Insert_priv: Y          Update_priv: Y          Delete_priv: Y          Create_priv: Y            Drop_priv: Y          Reload_priv: Y        Shutdown_priv: Y         Process_priv: Y            File_priv: Y           Grant_priv: Y      References_priv: Y           Index_priv: Y           Alter_priv: Y         Show_db_priv: Y           Super_priv: YCreate_tmp_table_priv: Y     Lock_tables_priv: Y         Execute_priv: Y      Repl_slave_priv: Y     Repl_client_priv: Y     Create_view_priv: Y       Show_view_priv: Y  Create_routine_priv: Y   Alter_routine_priv: Y     Create_user_priv: Y           Event_priv: Y         Trigger_priv: Y             ssl_type:            ssl_cipher:           x509_issuer:          x509_subject:         max_questions: 0          max_updates: 0      max_connections: 0 max_user_connections: 0*************************** 4. row ***************************                 Host: localhost                 User: admin             Password: *032197AE5731D4664921A6CCAC7CFCE6A0698693          Select_priv: N          Insert_priv: N          Update_priv: N          Delete_priv: N          Create_priv: N            Drop_priv: N          Reload_priv: N        Shutdown_priv: N         Process_priv: N            File_priv: N           Grant_priv: N      References_priv: N           Index_priv: N           Alter_priv: N         Show_db_priv: N           Super_priv: NCreate_tmp_table_priv: N     Lock_tables_priv: N         Execute_priv: N      Repl_slave_priv: N     Repl_client_priv: N     Create_view_priv: N       Show_view_priv: N  Create_routine_priv: N   Alter_routine_priv: N     Create_user_priv: N           Event_priv: N         Trigger_priv: N             ssl_type:            ssl_cipher:           x509_issuer:          x509_subject:         max_questions: 0          max_updates: 0      max_connections: 0 max_user_connections: 04 rows in set (0.00 sec)</code></pre><p>查库，新建<code>database</code>数据库</p><pre><code>mysql&gt; show databases;+--------------------+| Database           |+--------------------+| information_schema || mysql              || test               |+--------------------+3 rows in set (0.01 sec)mysql&gt; create database mytest default character set utf8 collate utf8_general_ci;Query OK, 1 row affected (0.00 sec)mysql&gt; show databases;+--------------------+| Database           |+--------------------+| information_schema || mysql              || mytest             || test               |+--------------------+4 rows in set (0.00 sec)</code></pre><p>本地用户赋予所有权限、给账号开通外网所有权限</p><pre><code>mysql&gt; grant all privileges on mytest.* to admin@&#39;%&#39; identified by &#39;000000&#39; with grant option;Query OK, 0 rows affected (0.00 sec)mysql&gt; grant select,delete,create on mytest.* to admin@&#39;192.168.1.104&#39; identified by &#39;000000&#39; with grant option;Query OK, 0 rows affected (0.00 sec)</code></pre><p>导入<code>sql</code>文件</p><pre><code>mysql&gt; source /opt/module/mmall.sql</code></pre><blockquote><h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2></blockquote><p><a href="https://codeload.github.com/git/git/tar.gz/v2.18.0" target="_blank" rel="noopener">下载</a></p><p>解压</p><pre><code>[root@192 ~]# tar -zxvf git-2.18.0.tar.gz -C /opt/module/</code></pre><p>安装依赖</p><pre><code>[root@192 ~]# yum -y install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker cpio</code></pre><p>编译安装</p><pre><code>[root@192 git-2.18.0]# make prefix=/usr/local/ install</code></pre><p>验证</p><pre><code>[root@192 ~]# git --versiongit version 2.18.0</code></pre><p>生成公私密钥对</p><pre><code>[root@192 ~]# ssh-keygen -t rsa -C &quot;782125244@qq.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/root/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa.Your public key has been saved in /root/.ssh/id_rsa.pub.The key fingerprint is:85:1e:ef:5a:33:ab:e7:79:a4:46:f6:8e:8f:7f:af:cd 782125244@qq.comThe key&#39;s randomart image is:+--[ RSA 2048]----+|                 ||         .       ||        o .      ||       . +       ||        S .      ||         .o .    ||         o=+     ||         o+Bo .o ||        o=*=+..oE|+-----------------+</code></pre><p>复制公钥粘贴到码云或者GitHub上SSH公钥上</p><pre><code>[root@192 .ssh]# cat id_rsa.pub ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA1sZvTnjQyVn7r2C7G9Q/WyVTTmJYqWhQdVfh3tBCUX8kJHaAcThwR4sl8ROz6xXl/22wbzlsKtfsiyr5zrV0Ifnq7KuCeNVNUYjOQCTn+ODaRzdj7DYC4Mz9BvxZAr0MDfSbgpLp6ZLAvZlkP3DioOPda7VnfJSAHGEYztOVPITj31pVnP1nXkPZRQlsTwImXEGJpuU+zOaurMShpaukrY/ONxWHR6xlG5M1FgOLdBvEnlbhOFoME1HHziI4/08Xw/NrHIUhvjZZgkAzWUo5NvYZLEwrUjOPtlVxHbYwBEtgBWRgWLFMfTlxQnEJVKzbwUDPLvZWac9WSpGLx5xiww== 782125244@qq.com</code></pre><p>配置用户名、邮箱，提交时会引用</p><pre><code>[root@192 mytest]# git config --global user.name &quot;shenlibng&quot;[root@192 mytest]# git config --global user.email &quot;782125244@qq.com&quot;[root@192 mytest]# git config --global core.autocrlf false[root@192 mytest]# git config --global core.quotepath off[root@192 mytest]# git config --global gui.encoding utf-8</code></pre><blockquote><h2 id="开启防火墙配置"><a href="#开启防火墙配置" class="headerlink" title="开启防火墙配置"></a>开启防火墙配置</h2></blockquote><p>查看防火墙初始化配置</p><pre><code>[root@192 ~]# cat /etc/sysconfig/iptables# Firewall configuration written by system-config-firewall# Manual customization of this file is not recommended.*filter:INPUT ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [0:0]-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT-A INPUT -p icmp -j ACCEPT-A INPUT -i lo -j ACCEPT-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT-A INPUT -j REJECT --reject-with icmp-host-prohibited-A FORWARD -j REJECT --reject-with icmp-host-prohibitedCOMMIT</code></pre><p>开放Tomcat端口</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%BC%80%E6%94%BETomcat%E7%AB%AF%E5%8F%A3.png" alt></p><p>重启生效防火墙</p><pre><code>[root@192 ~]# service iptables restartiptables：将链设置为政策 ACCEPT：filter                    [确定]iptables：清除防火墙规则：                                 [确定]iptables：正在卸载模块：                                   [确定]iptables：应用防火墙规则：                                 [确定]</code></pre><p>查看防火墙状态</p><pre><code>[root@192 ~]# service iptables status表格：filterChain INPUT (policy ACCEPT)num  target     prot opt source               destination         1    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED 2    ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0           3    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           4    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           state NEW tcp dpt:22 5    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:8080 6    REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited Chain FORWARD (policy ACCEPT)num  target     prot opt source               destination         1    REJECT     all  --  0.0.0.0/0            0.0.0.0/0           reject-with icmp-host-prohibited Chain OUTPUT (policy ACCEPT)num  target     prot opt source               destination  </code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> vsftpd </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh无密登录_集群分发脚本xsync</title>
      <link href="/2019/02/18/ssh-wu-mi-deng-lu-ji-qun-fen-fa-jiao-ben-xsync/"/>
      <url>/2019/02/18/ssh-wu-mi-deng-lu-ji-qun-fen-fa-jiao-ben-xsync/</url>
      
        <content type="html"><![CDATA[<p>1、ssh免密登录</p><p><strong>ssh ip地址</strong></p><pre><code>    [root@192 ~]# ssh 192.168.1.102    root@192.168.1.102&#39;s password:     Last login: Mon Feb 18 20:40:28 2019 from 192.168.1.101</code></pre><p><strong>免密登录配置</strong></p><p>生成公钥和私钥</p><pre><code>    [root@192 ~]# ssh-keygen -t rsa     Generating public/private rsa key pair.    Enter file in which to save the key (/root/.ssh/id_rsa):     Enter passphrase (empty for no passphrase):     Enter same passphrase again:     Your identification has been saved in /root/.ssh/id_rsa.    Your public key has been saved in /root/.ssh/id_rsa.pub.    The key fingerprint is:    d4:95:6c:a8:21:9b:27:62:79:43:76:e8:4b:32:6c:fe root@192.168.1.101    The key&#39;s randomart image is:    +--[ RSA 2048]----+    |       .   o..   |    |      = o...+    |    |   . = =.o..     |    |    O O.o        |    |   + * =S        |    |    . .          |    |     .           |    |      E          |    |                 |    +-----------------+    [root@192 ~]# ls /root/.ssh/    id_rsa  id_rsa.pub</code></pre><p>将公钥拷贝到要免密登录的目标机器上</p><blockquote><p>.ssh文件夹下（~/.ssh）的文件功能解释<br>（1）known_hosts    ：记录ssh访问过计算机的公钥(public key)<br>（2）id_rsa    ：生成的私钥<br>（3）id_rsa.pub    ：生成的公钥<br>（4）authorized_keys    ：存放授权过得无密登录服务器公钥</p></blockquote><pre><code>    [root@192 ~]# hostname     192.168.1.101    [root@192 ~]# ssh-copy-id 192.168.1.102    The authenticity of host &#39;192.168.1.102 (192.168.1.102)&#39; can&#39;t be established.    RSA key fingerprint is 56:57:4c:81:94:e0:47:fe:1e:aa:8c:9c:2a:87:a6:dc.    Are you sure you want to continue connecting (yes/no)? yes    Warning: Permanently added &#39;192.168.1.102&#39; (RSA) to the list of known hosts.    root@192.168.1.102&#39;s password:     Now try logging into the machine, with &quot;ssh &#39;192.168.1.102&#39;&quot;, and check in:      .ssh/authorized_keys    to make sure we haven&#39;t added extra keys that you weren&#39;t expecting.    [root@192 ~]# ls /root/.ssh/    id_rsa  id_rsa.pub  known_hosts    [root@192 ~]# ssh 192.168.1.102    Last login: Mon Feb 18 22:50:53 2019 from 192.168.1.101    [root@192 ~]# ls /root/.ssh/    authorized_keys</code></pre><p>2、集群分发脚本xsync</p><p>服务器与服务器数据拷贝</p><blockquote><p>rsync和scp区别：用rsync做文件的复制要比scp的速度快，rsync只对差异文件做更新。scp是把所有文件都复制过去。</p></blockquote><p><strong>scp</strong></p><pre><code>    [root@192 ~]# scp -r /tmp/1.txt  root@192.168.1.102:/tmp/    1.txt   </code></pre><p><strong>rsync</strong></p><blockquote><p>选项    功能<br>-r    递归<br>-v    显示复制过程<br>-l    拷贝符号连接</p></blockquote><pre><code>    [root@192 ~]# rsync -rvl /tmp/2.txt root@192.168.1.102:/tmp/    sending incremental file list    2.txt    sent 84 bytes  received 31 bytes  76.67 bytes/sec    total size is 13  speedup is 0.11</code></pre><p><strong>集群分发脚本xsync</strong></p><pre><code>[root@192 ~]# mkdir bin[root@192 ~]# cd bin/[root@192 bin]# touch xsync[root@192 bin]# vim xsync[root@192 bin]# chmod 777 xsync </code></pre><pre class=" language-shell"><code class="language-shell">    #!/bin/bash    #1 获取输入参数个数，如果没有参数，直接退出    pcount=$#    if((pcount==0)); then    echo no args;    exit;    fi    #2 获取文件名称    p1=$1    fname=`basename $p1`    echo fname=$fname    #3 获取上级目录到绝对路径    pdir=`cd -P $(dirname $p1); pwd`    echo pdir=$pdir    #4 获取当前用户名称    user=`whoami`    #5 循环    for((host=102; host<104; host++)); do            echo --------------------- 192.168.1.$host ----------------            rsync -rvl $pdir/$fname $user@192.168.1.$host:$pdir            #echo  ------"rsync -rvl $pdir/$fname $user@192.168.1.$host:$pdir complete"------------    done</code></pre><p><strong>xsync调用</strong></p><pre><code>    [root@192 bin]# xsync /tmp/1.txt /tmp/    fname=1.txt    pdir=/tmp    --------------------- 192.168.1.102 ----------------    sending incremental file list    1.txt    sent 516 bytes  received 31 bytes  364.67 bytes/sec    total size is 445  speedup is 0.81    --------------------- 192.168.1.103 ----------------    The authenticity of host &#39;192.168.1.103 (192.168.1.103)&#39; can&#39;t be established.    RSA key fingerprint is 56:57:4c:81:94:e0:47:fe:1e:aa:8c:9c:2a:87:a6:dc.    Are you sure you want to continue connecting (yes/no)? yes    Warning: Permanently added &#39;192.168.1.103&#39; (RSA) to the list of known hosts.    root@192.168.1.103&#39;s password:     sending incremental file list    1.txt    sent 71 bytes  received 37 bytes  5.84 bytes/sec    total size is 445  speedup is 4.12</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ssh </tag>
            
            <tag> scp </tag>
            
            <tag> rsync </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机配置静态ip</title>
      <link href="/2019/02/15/xu-ni-ji-pei-zhi-jing-tai-ip/"/>
      <url>/2019/02/15/xu-ni-ji-pei-zhi-jing-tai-ip/</url>
      
        <content type="html"><![CDATA[<p>镜像下载链接 </p><p><a href="https://wiki.centos.org/Download" target="_blank" rel="noopener">https://wiki.centos.org/Download</a></p><p>环境：<br>CentOS-6.8-x86_64-bin-DVD1.iso</p><p>1、克隆虚拟机</p><p><strong>修改主机名</strong></p><pre><code>[root@192 桌面]# vim /etc/sysconfig/network</code></pre><pre><code>    NETWORKING=yes    HOSTNAME=192.168.1.104</code></pre><p><strong>修改网卡信息</strong></p><pre><code>[root@192 桌面]# vim /etc/udev/rules.d/70-persistent-net.rules</code></pre><p>删除或者注释eth0该行；将eth1修改为eth0，同时复制物理ip地址<code>00:0c:29:ac:81:e4</code></p><pre><code>    # This file was automatically generated by the /lib/udev/write_net_rules    # program, run by the persistent-net-generator.rules rules file.    #    # You can modify it, as long as you keep each rule on a single    # line, and change only the value of the NAME= key.    # PCI device 0x8086:0x100f (e1000)    #SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR{address}==&quot;00:0c:29:00:88:b3&quot;, ATTR{type}==&quot;1&quot;, KERNEL==&quot;eth*&quot;, NAME=&quot;eth0&quot;    # PCI device 0x8086:0x100f (e1000)    SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR{address}==&quot;00:0c:29:ac:81:e4&quot;, ATTR{type}==&quot;1&quot;, KERNEL==&quot;eth*&quot;, NAME=&quot;eth0&quot;    [root@192 桌面]# </code></pre><p>更新物理ip地址<code>HWADDR=00:0c:29:ac:81:e4</code></p><pre><code>[root@192 桌面]# vim /etc/sysconfig/network-scripts/ifcfg-eth0 </code></pre><pre><code>    DEVICE=eth0    HWADDR=00:0c:29:ac:81:e4    TYPE=Ethernet    UUID=55735d7f-16c6-46fe-9db8-f7d484b3e7c0    ONBOOT=none    NM_CONTROLLED=yes    BOOTPROTO=dhcp</code></pre><p>2、NAT模式配置</p><p><strong>编辑–虚拟网络编辑器</strong></p><p>配置静态ip网段和子网掩码</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/nat%E6%A8%A1%E5%BC%8F%E9%85%8D%E7%BD%AE.png" alt></p><p>NAT设置</p><p>网关ip不能和vmnet8的ip地址冲突</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/NAT%E8%AE%BE%E7%BD%AE%E7%BD%91%E5%85%B3.png" alt></p><p>宿主机上的<code>vmnet8</code>网卡会自动分配ip</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%AE%BF%E4%B8%BB%E6%9C%BAvmnet8%E7%BD%91%E5%8D%A1%E4%BF%A1%E6%81%AF.png" alt></p><p>3、配置静态ip</p><blockquote><p>ONBOOT=yes系统启动时激活网卡<br>BOOTPROTO=static通过指定方式的办法来获得地址，设置为静态手动配置<br>IPADDR=192.168.1.104主机ip地址<br>GATEWAY=192.168.1.2网关<br>NETMASK=255.255.255.0子网掩码<br>DNS1=8.8.8.8配置DNS域名解析访问互联网<br>DNS2=8.8.4.4</p></blockquote><pre><code>    DEVICE=eth0    HWADDR=00:0c:29:ac:81:e4    TYPE=Ethernet    UUID=55735d7f-16c6-46fe-9db8-f7d484b3e7c0    ONBOOT=yes    NM_CONTROLLED=yes    BOOTPROTO=static    IPADDR=192.168.1.104    GATEWAY=192.168.1.2    NETMASK=255.255.255.0    DNS1=8.8.8.8    DNS2=8.8.4.4</code></pre>]]></content>
      
      
      <categories>
          
          <category> 虚拟机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring定时任务_文件上传进度条</title>
      <link href="/2019/01/30/spring-ding-shi-ren-wu-wen-jian-shang-chuan-jin-du-tiao/"/>
      <url>/2019/01/30/spring-ding-shi-ren-wu-wen-jian-shang-chuan-jin-du-tiao/</url>
      
        <content type="html"><![CDATA[<p><strong>spring定时任务</strong></p><p>导依赖</p><pre class=" language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.quartz-scheduler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>quartz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>配置定时任务类</p><pre class=" language-java"><code class="language-java">    <span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>portal<span class="token punctuation">.</span>service<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Service</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleJob</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"定时任务触发===========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>配置定时任务</p><pre class=" language-xml"><code class="language-xml">    <span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- &lt;bean id="exampleJob"            class="com.atguigu.scw.portal.service.ExampleJob">&lt;/bean> --></span>        <span class="token comment" spellcheck="true">&lt;!--配置定时任务触发类和方法  --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jobDetail<span class="token punctuation">"</span></span>            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>targetObject<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>exampleJob<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>targetMethod<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--配置触发器，指定何时触发 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cronTrigger<span class="token punctuation">"</span></span>            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.scheduling.quartz.CronTriggerFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jobDetail<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jobDetail<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!-- run every morning at 6 AM --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cronExpression<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*/5 * * * * ?<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--配置定时任务调用哪一个触发器  --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span>            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.scheduling.quartz.SchedulerFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>triggers<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cronTrigger<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><p>cron表达式使用</p><pre><code>每隔5秒执行一次：*/5 * * * * ?每隔1分钟执行一次：0 */1 * * * ?每天23点执行一次：0 0 23 * * ?每天凌晨1点执行一次：0 0 1 * * ?每月1号凌晨1点执行一次：0 0 1 1 * ?每月最后一天23点执行一次：0 0 23 L * ?每周星期天凌晨1点实行一次：0 0 1 ? * L在26分、29分、33分执行一次：0 26,29,33 * * * ?每天的0点、13点、18点、21点都执行一次：0 0 0,13,18,21 * * ?</code></pre><p>参考</p><p><a href="https://docs.spring.io/spring/docs/4.0.0.RELEASE/spring-framework-reference/htmlsingle/#scheduling-quartz" target="_blank" rel="noopener">https://docs.spring.io/spring/docs/4.0.0.RELEASE/spring-framework-reference/htmlsingle/#scheduling-quartz</a></p><p><strong>文件上传进度条</strong></p><p>ajax异步提交表单<code>$(&quot;#subBtn&quot;).on(&#39;click&#39;, function() { return false}</code>是js对象的机制</p><p><code>&lt;button type=&quot;submit&quot; id=&#39;subBtn&#39; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;</code>点击按钮直接提交是浏览器的机制</p><p>文件上传</p><p>表单直接提交<code>action=&#39;${ctp}/member/upload&#39; method=&#39;post&#39; enctype=&quot;multipart/form-data&quot;</code></p><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>${ctp}/member/upload<span class="token punctuation">'</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>post<span class="token punctuation">'</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>file<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress-bar<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progressbar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuenow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span>                <span class="token attr-name">aria-valuemin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuemax</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">60%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                60%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>subBtn<span class="token punctuation">'</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p>ajax提交<code>type : &quot;post&quot;,contentType : false,processData : false</code> </p><p>进度条:获取<code>myXhr = $.ajaxSettings.xhr()</code>对象并返回</p><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>submitForm<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>file<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">='</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">'</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress-bar<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progressbar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuenow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>                <span class="token attr-name">aria-valuemin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">aria-valuemax</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>subBtn<span class="token punctuation">'</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#subBtn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#submitForm"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                url <span class="token punctuation">:</span> <span class="token string">"${ctp}/member/upload"</span><span class="token punctuation">,</span>                data <span class="token punctuation">:</span> fd<span class="token punctuation">,</span>                type <span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>                contentType <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                processData <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">//获取ajaxSettings中的xhr对象，为它的upload属性绑定progress事件的处理函数  </span>                xhr <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    myXhr <span class="token operator">=</span> $<span class="token punctuation">.</span>ajaxSettings<span class="token punctuation">.</span><span class="token function">xhr</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true">//检查upload属性是否存在  </span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>myXhr<span class="token punctuation">.</span>upload<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">//绑定progress事件的回调函数  </span>                        myXhr<span class="token punctuation">.</span>upload<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'progress'</span><span class="token punctuation">,</span>                                progressHandlingFunction<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span>                    <span class="token comment" spellcheck="true">//xhr对象返回给jQuery使用  </span>                    <span class="token keyword">return</span> myXhr<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                success <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"result==========>"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                error <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'e=========>'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> progressHandlingFunction <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> curr <span class="token operator">=</span> e<span class="token punctuation">.</span>loaded            <span class="token keyword">var</span> total <span class="token operator">=</span> e<span class="token punctuation">.</span>total            process <span class="token operator">=</span> curr <span class="token operator">/</span> total <span class="token operator">*</span> <span class="token number">100</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'上传进度============>'</span><span class="token punctuation">,</span> process<span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.progress'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">,</span> <span class="token string">'display:show;'</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.progress-bar'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>process <span class="token operator">+</span> <span class="token string">'%'</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.progress-bar'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">,</span> <span class="token string">'width:'</span> <span class="token operator">+</span> process <span class="token operator">+</span> <span class="token string">'%;'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>图片预览</strong></p><pre class=" language-js"><code class="language-js">    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#ad_file_input"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token string">'.form-group'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'.form-group'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'.imgdiv'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        fileList <span class="token operator">=</span> event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>files        <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'fileList==============>'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span>        <span class="token keyword">var</span> URL <span class="token operator">=</span> window<span class="token punctuation">.</span>URL <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitURL        <span class="token keyword">var</span> imgURL        <span class="token comment" spellcheck="true">//遍历上传的文件进行显示 </span>        $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>index<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//创建一个临时的url地址</span>           imgURL <span class="token operator">=</span> URL<span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>           <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'this=========>'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span>           <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'item==========>'</span><span class="token punctuation">,</span>item<span class="token punctuation">)</span>           <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#ad_file_input'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token string">".form-group"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">".form-group"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">".imgdiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;img src='"</span><span class="token operator">+</span>imgURL<span class="token operator">+</span><span class="token string">"' style='width:200px;height:220px;'/>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;p>'</span><span class="token operator">+</span>item<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'&lt;p>'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 定时任务 </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多表连接查询</title>
      <link href="/2019/01/29/duo-biao-lian-he-cha-xun/"/>
      <url>/2019/01/29/duo-biao-lian-he-cha-xun/</url>
      
        <content type="html"><![CDATA[<p>1、查询用户拥有的权限</p><p>子查询和连接查询2种，比较推荐连接查询，子查询比较影响性能，子查询看起来比较容易理解，而连接查询需要比较熟悉各个表之间的关系</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> p<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> t_permission p    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_role_permission trp <span class="token keyword">ON</span> trp<span class="token punctuation">.</span><span class="token punctuation">`</span>permissionid<span class="token punctuation">`</span><span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span>    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_role tr <span class="token keyword">ON</span> tr<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token operator">=</span>trp<span class="token punctuation">.</span><span class="token punctuation">`</span>roleid<span class="token punctuation">`</span>    <span class="token keyword">WHERE</span> tr<span class="token punctuation">.</span>id <span class="token operator">IN</span><span class="token punctuation">(</span>        <span class="token keyword">SELECT</span> t_r<span class="token punctuation">.</span>id <span class="token keyword">FROM</span> t_role t_r        <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_user_role t_u_r            <span class="token keyword">ON</span> t_u_r<span class="token punctuation">.</span><span class="token punctuation">`</span>roleid<span class="token punctuation">`</span><span class="token operator">=</span>t_r<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span>        <span class="token keyword">WHERE</span> t_u_r<span class="token punctuation">.</span><span class="token punctuation">`</span>userid<span class="token punctuation">`</span><span class="token operator">=</span><span class="token number">31</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>子查询不太推荐，比较影响性能推荐连接查询<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> p<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> t_permission p    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_role_permission trp <span class="token keyword">ON</span> trp<span class="token punctuation">.</span><span class="token punctuation">`</span>permissionid<span class="token punctuation">`</span><span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span>    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_role tr <span class="token keyword">ON</span> tr<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token operator">=</span>trp<span class="token punctuation">.</span><span class="token punctuation">`</span>roleid<span class="token punctuation">`</span>    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_user_role tur <span class="token keyword">ON</span> tur<span class="token punctuation">.</span><span class="token punctuation">`</span>roleid<span class="token punctuation">`</span><span class="token operator">=</span>tr<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span>    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_user tu <span class="token keyword">ON</span> tu<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token operator">=</span>tur<span class="token punctuation">.</span><span class="token punctuation">`</span>userid<span class="token punctuation">`</span>    <span class="token keyword">WHERE</span> tu<span class="token punctuation">.</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token operator">=</span><span class="token number">31</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HttpClient远程接口调用_实名认证</title>
      <link href="/2019/01/28/httpclient-yuan-cheng-jie-kou-diao-yong-shi-ming-ren-zheng/"/>
      <url>/2019/01/28/httpclient-yuan-cheng-jie-kou-diao-yong-shi-ming-ren-zheng/</url>
      
        <content type="html"><![CDATA[<p>1、HttpClient远程接口调用</p><p>1)用户注册</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%B3%A8%E5%86%8C%E6%8C%89%E9%92%AE.png" alt="用户注册"></p><p>注册按钮<code>button</code>提交表单时，要<code>return false</code></p><p><code>form</code>表单</p><pre class=" language-html"><code class="language-html">    <span class="token comment" spellcheck="true">&lt;!-- action="http://localhost:8082/scw-restapi/member/regist" --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-signin<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/member/regist<span class="token punctuation">"</span></span>        <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>regForm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    ...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p>js提交表单</p><pre class=" language-js"><code class="language-js">    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#submitBtn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> loginType <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"select.form-control"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"注册类型==============>"</span><span class="token punctuation">,</span> loginType<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">/* if (loginType == "管理") {            $("#regForm").submit();        } else {            alert("此功能尚未开通");        } */</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#regForm"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>2)加载外部资源文件</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%8A%A0%E8%BD%BD%E5%A4%96%E9%83%A8%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6.png" alt></p><p>app.properties</p><pre><code>restapi.server.ip=127.0.0.1restapi.server.port=8082restapi.server.apppath=scw-restapi</code></pre><p>编辑<code>springmvc.xml</code></p><pre class=" language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- 引入外部配置文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span>        <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:other/app.properties<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p>RestApiServerInfo.java</p><pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Controller</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestApiServerInfo</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// MemberService memberService;</span>        <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${restapi.server.ip}"</span><span class="token punctuation">)</span>        <span class="token keyword">private</span> String restapiserver<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${restapi.server.port}"</span><span class="token punctuation">)</span>        <span class="token keyword">private</span> String restapiport<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${restapi.server.apppath}"</span><span class="token punctuation">)</span>        <span class="token keyword">private</span> String appPath<span class="token punctuation">;</span>        <span class="token keyword">public</span> String <span class="token function">getRestApiURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"http://"</span> <span class="token operator">+</span> restapiserver <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> restapiport<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"http://"</span> <span class="token operator">+</span> restapiserver <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> restapiport <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> appPath<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>3)HTTPClient工具远程调用接口</p><p>导入依赖</p><pre class=" language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.httpcomponents<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>httpclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>发送post请求</p><pre><code>    public static String httpPostRequest(String url, Map&lt;String, Object&gt; params)</code></pre><p>工具类<code>HttpClientUtil.java</code></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>project<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>UnsupportedEncodingException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URISyntaxException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpEntity<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>NameValuePair<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ClientProtocolException<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>UrlEncodedFormEntity<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>methods<span class="token punctuation">.</span>CloseableHttpResponse<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>methods<span class="token punctuation">.</span>HttpGet<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>methods<span class="token punctuation">.</span>HttpPost<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>methods<span class="token punctuation">.</span>HttpRequestBase<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>URIBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>client<span class="token punctuation">.</span>CloseableHttpClient<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HttpClients<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>PoolingHttpClientConnectionManager<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>message<span class="token punctuation">.</span>BasicNameValuePair<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>util<span class="token punctuation">.</span>EntityUtils<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author Nan 2015-11 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpClientUtil</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> PoolingHttpClientConnectionManager cm<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String EMPTY_STR <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String UTF_8 <span class="token operator">=</span> <span class="token string">"UTF-8"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cm <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoolingHttpClientConnectionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cm<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 整个连接池最大连接数</span>            cm<span class="token punctuation">.</span><span class="token function">setDefaultMaxPerRoute</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 每路由最大连接数，默认值是2</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 通过连接池获取HttpClient     *      * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> CloseableHttpClient <span class="token function">getHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> HttpClients<span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setConnectionManager</span><span class="token punctuation">(</span>cm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * @param url     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">httpGetRequest</span><span class="token punctuation">(</span>String url<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HttpGet httpGet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpGet</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">getResult</span><span class="token punctuation">(</span>httpGet<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">httpGetRequest</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token keyword">throws</span> URISyntaxException <span class="token punctuation">{</span>        URIBuilder ub <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URIBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ub<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        ArrayList<span class="token operator">&lt;</span>NameValuePair<span class="token operator">></span> pairs <span class="token operator">=</span> <span class="token function">covertParams2NVPS</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        ub<span class="token punctuation">.</span><span class="token function">setParameters</span><span class="token punctuation">(</span>pairs<span class="token punctuation">)</span><span class="token punctuation">;</span>        HttpGet httpGet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpGet</span><span class="token punctuation">(</span>ub<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">getResult</span><span class="token punctuation">(</span>httpGet<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">httpGetRequest</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> headers<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span>            <span class="token keyword">throws</span> URISyntaxException <span class="token punctuation">{</span>        URIBuilder ub <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URIBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ub<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        ArrayList<span class="token operator">&lt;</span>NameValuePair<span class="token operator">></span> pairs <span class="token operator">=</span> <span class="token function">covertParams2NVPS</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        ub<span class="token punctuation">.</span><span class="token function">setParameters</span><span class="token punctuation">(</span>pairs<span class="token punctuation">)</span><span class="token punctuation">;</span>        HttpGet httpGet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpGet</span><span class="token punctuation">(</span>ub<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> param <span class="token operator">:</span> headers<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            httpGet<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">getResult</span><span class="token punctuation">(</span>httpGet<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">httpPostRequest</span><span class="token punctuation">(</span>String url<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HttpPost httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">getResult</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">httpPostRequest</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token keyword">throws</span> UnsupportedEncodingException <span class="token punctuation">{</span>        HttpPost httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        ArrayList<span class="token operator">&lt;</span>NameValuePair<span class="token operator">></span> pairs <span class="token operator">=</span> <span class="token function">covertParams2NVPS</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        httpPost<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UrlEncodedFormEntity</span><span class="token punctuation">(</span>pairs<span class="token punctuation">,</span> UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">getResult</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">httpPostRequest</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> headers<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span>            <span class="token keyword">throws</span> UnsupportedEncodingException <span class="token punctuation">{</span>        HttpPost httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> param <span class="token operator">:</span> headers<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            httpPost<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        ArrayList<span class="token operator">&lt;</span>NameValuePair<span class="token operator">></span> pairs <span class="token operator">=</span> <span class="token function">covertParams2NVPS</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>        httpPost<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UrlEncodedFormEntity</span><span class="token punctuation">(</span>pairs<span class="token punctuation">,</span> UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">getResult</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> ArrayList<span class="token operator">&lt;</span>NameValuePair<span class="token operator">></span> <span class="token function">covertParams2NVPS</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ArrayList<span class="token operator">&lt;</span>NameValuePair<span class="token operator">></span> pairs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>NameValuePair<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> param <span class="token operator">:</span> params<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            pairs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicNameValuePair</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> pairs<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 处理Http请求     *      * @param request     * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> String <span class="token function">getResult</span><span class="token punctuation">(</span>HttpRequestBase request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// CloseableHttpClient httpClient = HttpClients.createDefault();</span>        CloseableHttpClient httpClient <span class="token operator">=</span> <span class="token function">getHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            CloseableHttpResponse response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// response.getStatusLine().getStatusCode();</span>            HttpEntity entity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>entity <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// long len = entity.getContentLength();// -1 表示长度未知</span>                String result <span class="token operator">=</span> EntityUtils<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>                response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// httpClient.close();</span>                <span class="token keyword">return</span> result<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClientProtocolException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> EMPTY_STR<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>远程接口返回<code>ScwReturn&lt;T&gt;</code>封装对象</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>restapi<span class="token punctuation">.</span>bean<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScwReturn</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 状态码 1：表示成功 0:表示失败</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 要给的提示信息</span>    <span class="token keyword">private</span> T content<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 响应的内容；</span>    <span class="token keyword">private</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> ext<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 额外的数据</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCode</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMsg</span><span class="token punctuation">(</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> T <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> content<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContent</span><span class="token punctuation">(</span>T content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> ext<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setExt</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> ext<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ext <span class="token operator">=</span> ext<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 两个快速的成功失败方法</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ScwReturn<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">success</span><span class="token punctuation">(</span>String msg<span class="token punctuation">,</span> T content<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> ext<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ScwReturn<span class="token operator">&lt;</span>T<span class="token operator">></span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScwReturn</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setExt</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> t<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> ScwReturn<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">fail</span><span class="token punctuation">(</span>String msg<span class="token punctuation">,</span> T content<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> ext<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ScwReturn<span class="token operator">&lt;</span>T<span class="token operator">></span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScwReturn</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">setExt</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> t<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>注册调用远程接口</p><p>发送请求</p><pre><code>String response = HttpClientUtil.httpPostRequest(url, params);</code></pre><p>远程接口返回的响应字符串转java对象</p><pre><code>    readValue = new ObjectMapper().readValue(response.getBytes(), new TypeReference&lt;ScwReturn&lt;TMemeber&gt;&gt;() {        });</code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/regist"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">regist</span><span class="token punctuation">(</span>TMemeber memeber<span class="token punctuation">,</span> Model model<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 需要利用http工具去模拟发调用接口的请求</span>    <span class="token comment" spellcheck="true">// http://localhost:8082/scw-restapi/member/regist</span>    <span class="token comment" spellcheck="true">// &lt;httpclient.version>4.5.3&lt;/httpclient.version></span>    <span class="token comment" spellcheck="true">// httpclient使用java代码来模拟发送请求</span>    <span class="token comment" spellcheck="true">// 能收到api调用后产生的json数据；</span>    <span class="token comment" spellcheck="true">// 1、可以将产生的json逆向成对象ScwReturn&lt;TMemeber></span>    <span class="token comment" spellcheck="true">// 2、可以直接将json写给页面</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"memeber===========>"</span> <span class="token operator">+</span> memeber<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 注册成功以后可以来到一个页面；</span>    <span class="token comment" spellcheck="true">// 1、应该去发送请求来进行注册；java代码发请求</span>    String url <span class="token operator">=</span> serverInfo<span class="token punctuation">.</span><span class="token function">getRestApiURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/member/regist"</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"url===========>"</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 2、构建请求参数</span>    Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"loginacct"</span><span class="token punctuation">,</span> memeber<span class="token punctuation">.</span><span class="token function">getLoginacct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 密码是业务逻辑加密的，我们不用管</span>    params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"userpswd"</span><span class="token punctuation">,</span> memeber<span class="token punctuation">.</span><span class="token function">getUserpswd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">,</span> memeber<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 响应内容；</span>    String response <span class="token operator">=</span> HttpClientUtil<span class="token punctuation">.</span><span class="token function">httpPostRequest</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 封装响应为对象</span>    ScwReturn<span class="token operator">&lt;</span>TMemeber<span class="token operator">></span> readValue <span class="token operator">=</span> null<span class="token punctuation">;</span>    readValue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token operator">&lt;</span>ScwReturn<span class="token operator">&lt;</span>TMemeber<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 判断，注册成功！来到登陆页面</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>readValue<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"redirect:/login.jsp"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 注册失败！来到注册页面进行回显</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token string">"用户名和邮箱已经被注册了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"forward:/reg.jsp"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>远程接口注册方法</p><p>控制层</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * ScwReturn&lt;List&lt;TMemeber>>:泛型是content内容的对象的类型     *      * @Description (TODO这里用一句话描述这个方法的作用)     * @param memeber     * @return     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/regist"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ScwReturn<span class="token operator">&lt;</span>TMemeber<span class="token operator">></span> <span class="token function">regist</span><span class="token punctuation">(</span>TMemeber memeber<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 创建一个空的对象</span>        TMemeber regist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TMemeber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            regist <span class="token operator">=</span> memberService<span class="token punctuation">.</span><span class="token function">regist</span><span class="token punctuation">(</span>memeber<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 判断异常类型来放错误</span>            <span class="token comment" spellcheck="true">// e.printStackTrace();</span>            hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token string">"触犯唯一约束，请保证用户名和邮箱唯一"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        regist<span class="token punctuation">.</span><span class="token function">setUserpswd</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>regist<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> ScwReturn<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"用户注册成功！"</span><span class="token punctuation">,</span> regist<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> ScwReturn<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"用户注册失败!"</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>业务层</p><p>带条件插入</p><pre><code>    int i = memeberMapper.insertSelective(tMemeber);</code></pre><pre class=" language-java"><code class="language-java">     <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> TMemeber <span class="token function">regist</span><span class="token punctuation">(</span>TMemeber tMemeber<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>        String digest <span class="token operator">=</span> MD5Util<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>tMemeber<span class="token punctuation">.</span><span class="token function">getUserpswd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 加密密码保存</span>        tMemeber<span class="token punctuation">.</span><span class="token function">setUserpswd</span><span class="token punctuation">(</span>digest<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 初始化用户名和账号</span>        tMemeber<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>tMemeber<span class="token punctuation">.</span><span class="token function">getLoginacct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 实名认证状态 0:未实名认证 1::实名认证</span>        tMemeber<span class="token punctuation">.</span><span class="token function">setAuthstatus</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 真实姓名；实名认证是保存的</span>        tMemeber<span class="token punctuation">.</span><span class="token function">setRealname</span><span class="token punctuation">(</span><span class="token string">"未实名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 0：普通会员 1：月费会员 2：年费会员 3：</span>        tMemeber<span class="token punctuation">.</span><span class="token function">setUsertype</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 身份证号，账户类型；（实名认证是做的）</span>        <span class="token comment" spellcheck="true">// 账户类型：直接保存账户的全名</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> memeberMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>tMemeber<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 刚才就是按照这个对象给数据库插入值，希望获取到数据库分配的自增主键</span>        <span class="token keyword">return</span> tMemeber<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>2、实名认证文件上传</p><p>1)上传用户资质证件</p><p>导入依赖</p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>编辑<code>springmvc.xml</code>文件</p><pre class=" language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- 1、文件上传需要一个文件上传解析器 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipartResolver<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.multipart.commons.CommonsMultipartResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultEncoding<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><p>前台ajax提交</p><p>带有文件表单，一次提交所有项</p><pre><code>var fd = new FormData($(&quot;#certForm&quot;)[0])</code></pre><p>带有文件表单,提交部分内容</p><pre><code>//使用formData（js对象来包装form表单）var fd = new FormData();log($(&quot;#ad_name_input&quot;).val())log($(&quot;#ad_file_input&quot;)[0].files[0])fd.append(&quot;name&quot;, $(&quot;#ad_name_input&quot;).val());fd.append(&quot;ad&quot;, $(&quot;#ad_file_input&quot;)[0].files[0])</code></pre><p>processData(默认: true) </p><p>默认情况下，通过data选项传递进来的数据，如果是一个对象(技术上讲只要不是字符串)，都会处理转化成一个查询字符串，以配合默认内容类型 “application/x-www-form-urlencoded”。</p><p>contentType</p><p>不使用默认的内容类型；(默认: “application/x-www-form-urlencoded”) 发送信息至服务器时内容编码类型。</p><pre class=" language-js"><code class="language-js">    <span class="token comment" spellcheck="true">//这是一个资质文件上传的页面</span>    <span class="token comment" spellcheck="true">//发送文件上传资质文件请求；</span>    <span class="token keyword">var</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#certForm"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        url<span class="token punctuation">:</span><span class="token string">"http://localhost:8082/scw-restapi/auth/upload"</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span>fd<span class="token punctuation">,</span>        type<span class="token punctuation">:</span><span class="token string">"post"</span><span class="token punctuation">,</span>        contentType<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>        dataType<span class="token punctuation">:</span><span class="token string">"json"</span><span class="token punctuation">,</span>        processData<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>        success<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//来到邮箱填写页面</span>            location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"${ctp}/auth/apply-2.html"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        error<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>            layer<span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token string">"上传失败:"</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>控制层</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//文件上传</span>    <span class="token keyword">private</span> String <span class="token function">uploadfile</span><span class="token punctuation">(</span>String webPath<span class="token punctuation">,</span>MultipartFile file<span class="token punctuation">,</span>HttpSession session<span class="token punctuation">)</span><span class="token punctuation">{</span>        ServletContext context <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String realPath <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span>webPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        String name <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">"_file_"</span><span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//webPath不存在的情况下必须创建</span>            File file2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file2<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//创建目录</span>                file2<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            file<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//返回这个图片在服务器下的路径</span>            <span class="token keyword">return</span> webPath<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>name<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> ScwReturn<span class="token operator">&lt;</span>Object<span class="token operator">></span> <span class="token function">upload</span><span class="token punctuation">(</span>HttpSession session<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span>MultipartFile<span class="token punctuation">[</span><span class="token punctuation">]</span> file<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"certid"</span><span class="token punctuation">)</span>Integer<span class="token punctuation">[</span><span class="token punctuation">]</span> certid<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"memberid"</span><span class="token punctuation">)</span>Integer memberid<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"资质的id"</span><span class="token operator">+</span>certid<span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token operator">&lt;</span>TMemberCert<span class="token operator">></span> certsList<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>TMemberCert<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>certid<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                TMemberCert cert <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TMemberCert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                MultipartFile multipartFile <span class="token operator">=</span> file<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                String uploadfile <span class="token operator">=</span> <span class="token function">uploadfile</span><span class="token punctuation">(</span><span class="token string">"/certsimg"</span><span class="token punctuation">,</span> multipartFile<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>                cert<span class="token punctuation">.</span><span class="token function">setCertid</span><span class="token punctuation">(</span>certid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cert<span class="token punctuation">.</span><span class="token function">setMemberid</span><span class="token punctuation">(</span>memberid<span class="token punctuation">)</span><span class="token punctuation">;</span>                cert<span class="token punctuation">.</span><span class="token function">setIconpath</span><span class="token punctuation">(</span>uploadfile<span class="token punctuation">)</span><span class="token punctuation">;</span>                certsList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cert<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//调用业务逻辑进行保存;/删除原有资质，保存新的资质</span>            certService<span class="token punctuation">.</span><span class="token function">insertCerts</span><span class="token punctuation">(</span>certsList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// TODO Auto-generated catch block</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> ScwReturn<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">"资质保存失败！"</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ScwReturn<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"保存成功！"</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>2)批量插入用户资质证件描述信息</p><p>业务层</p><p>CertService.java</p><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertCerts</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>TMemberCert<span class="token operator">></span> certsList<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>CertServiceImpl.java</p><pre class=" language-java"><code class="language-java">      <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertCerts</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>TMemberCert<span class="token operator">></span> certsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>        TMemberCertExample example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TMemberCertExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Criteria criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andMemberidEqualTo</span><span class="token punctuation">(</span>certsList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMemberid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//先删除</span>        memberCertMapper<span class="token punctuation">.</span><span class="token function">deleteByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//后保存</span>        certMapper<span class="token punctuation">.</span><span class="token function">insertBatch</span><span class="token punctuation">(</span>certsList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>dao层</p><p>TCertMapper.java</p><pre class=" language-java"><code class="language-java">    <span class="token keyword">void</span> <span class="token function">insertBatch</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"certs"</span><span class="token punctuation">)</span>List<span class="token operator">&lt;</span>TMemberCert<span class="token operator">></span> certsList<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>TCertMapper.xml</p><pre class=" language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!-- void insertBatch(@Param("certs")List&lt;TMemberCert> certsList); --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>insertBatch<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          INSERT INTO t_member_cert(memberid,certid,iconpath)         VALUES        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>certs<span class="token punctuation">"</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c<span class="token punctuation">"</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>,<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            (#{c.memberid},#{c.certid},#{c.iconpath})        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 分布式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTPClient </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术分享</title>
      <link href="/2019/01/26/ji-zhu-fen-xiang/"/>
      <url>/2019/01/26/ji-zhu-fen-xiang/</url>
      
        <content type="html"><![CDATA[<p>1、快速深入地学习一个新技术、知识点步骤</p><p>1）我们有一个需求</p><ul><li>项目开发时，我们需要解决某个问题—页面局部刷新问题</li><li>跳槽，学习新技术</li></ul><p>2）先看看使用现有的技术能否解决这个问题</p><ul><li>可以解决，使用传统的方法iframe</li><li>发现使用传统的方法可以解决，但是不够好，使用新技术ajax</li></ul><p>3）学习新技术或者知识点</p><ul><li>原理</li><li>基本语法</li></ul><p>4）快速入门案例</p><ul><li>特点是简单</li><li>了解新技术或者知识点的基本使用，这里不需要涉及技术细节</li></ul><p>5）讨论这个新技术或者知识点的细节</p><ul><li>怎么使用更规范</li><li>使用该技术有没有什么陷阱</li><li>需要使用时，注意些什么</li></ul><p>2、学习方法的介绍</p><p>1）高效而愉快地学习</p><p>2）先建立一个<strong>整体框架</strong>，然后<strong>细节</strong></p><p>3）在实际工作中，要培养用到什么，能够快速学习什么的能力</p><p>4）先know how，再know why</p><p>5）软件编程是一门’<strong>做中学</strong>‘的学科，不是会了再做，而是做了才会</p><p>6）适当的<strong>囫囵吞枣</strong></p><p>7）学习软件编程是在在琢磨别人怎么做，而不是我认为应该怎么做的过程</p><pre><code>    for i:=0;i&lt;10;i++ {        fmt.Println(&quot;hello,world&quot;)    }</code></pre>]]></content>
      
      
      <categories>
          
          <category> 方法论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 方法论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>es6异步</title>
      <link href="/2019/01/25/es6-yi-bu/"/>
      <url>/2019/01/25/es6-yi-bu/</url>
      
        <content type="html"><![CDATA[<p>1、promise-解决异步操作</p><p>同步——串行    简单、方便</p><p>异步——并发    性能高、体验好</p><p>jQuery异步问题：回到地狱</p><pre class=" language-js"><code class="language-js">    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      url<span class="token punctuation">:</span> <span class="token string">'/banner_data'</span><span class="token punctuation">,</span>      <span class="token function">success</span><span class="token punctuation">(</span>banners<span class="token punctuation">)</span><span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          url<span class="token punctuation">:</span> <span class="token string">'/user_data'</span><span class="token punctuation">,</span>          <span class="token function">success</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">{</span>            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              url<span class="token punctuation">:</span> <span class="token string">'/item_data'</span><span class="token punctuation">,</span>              <span class="token function">success</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">{</span>                $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                  url<span class="token punctuation">:</span> <span class="token string">'/news_data'</span><span class="token punctuation">,</span>                  <span class="token function">success</span><span class="token punctuation">(</span>news<span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token punctuation">}</span><span class="token punctuation">,</span>                  <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'数据获取失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>              <span class="token punctuation">}</span><span class="token punctuation">,</span>              <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'数据获取失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'数据获取失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'数据获取失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>使用Promise</p><p>Promise.all()     与：所有的都成功</p><p>Promise.race()     或：只要有一个完成</p><pre class=" language-js"><code class="language-js">    <span class="token comment" spellcheck="true">//Promise</span>    Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>      $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/banner_data'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/item_data'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/user_data'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/news_data'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>arr<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      <span class="token keyword">let</span> <span class="token punctuation">[</span>banners<span class="token punctuation">,</span> items<span class="token punctuation">,</span> user<span class="token punctuation">,</span> news<span class="token punctuation">]</span><span class="token operator">=</span>arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>1.txt</p><pre><code>    {&quot;a&quot;: 3, &quot;b&quot;: 5}</code></pre><p>2.txt</p><pre><code>    [12,5,8,3]</code></pre><p>3.txt</p><pre><code>    {&quot;name&quot;: &quot;blue&quot;, &quot;age&quot;: 18}</code></pre><p>promise怎么用.html</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//resolve       解决->成功</span>          <span class="token comment" spellcheck="true">//reject        拒绝->失败</span>          $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">'1.txt'</span><span class="token punctuation">,</span>            dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>            <span class="token function">success</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">resolve</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">debugger</span>        p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>json <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">)</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> err <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>promise怎么用2.html</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//resolve       解决->成功</span>          <span class="token comment" spellcheck="true">//reject        拒绝->失败</span>          $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">'1.txt'</span><span class="token punctuation">,</span>            dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>            <span class="token function">success</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">resolve</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//resolve       解决->成功</span>          <span class="token comment" spellcheck="true">//reject        拒绝->失败</span>          $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">'2.txt'</span><span class="token punctuation">,</span>            dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>            <span class="token function">success</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">resolve</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//resolve       解决->成功</span>          <span class="token comment" spellcheck="true">//reject        拒绝->失败</span>          $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">'3.txt'</span><span class="token punctuation">,</span>            dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>            <span class="token function">success</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">resolve</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>arr <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token keyword">let</span> <span class="token punctuation">[</span>j1<span class="token punctuation">,</span> a<span class="token punctuation">,</span> j2<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">)</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j1<span class="token punctuation">,</span> a<span class="token punctuation">,</span> j2<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> err <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>promise怎么用3.html</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          url<span class="token punctuation">:</span> <span class="token string">'1.txt'</span><span class="token punctuation">,</span>          dataType<span class="token punctuation">:</span> <span class="token string">'json'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>json<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成了'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'错了'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">debugger</span>        <span class="token comment" spellcheck="true">/*        Promise.all([p, p2, p3]).then(arr=>{          let [j1, a, j2]=arr;          alert('成功');          console.log(j1, a, j2);        }, err=>{          alert('失败');        });        */</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>promise怎么用4.html</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>          $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>url<span class="token punctuation">:</span> <span class="token string">'1.txt'</span><span class="token punctuation">,</span> dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>url<span class="token punctuation">:</span> <span class="token string">'2.txt'</span><span class="token punctuation">,</span> dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>url<span class="token punctuation">:</span> <span class="token string">'3.txt'</span><span class="token punctuation">,</span> dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>arr<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          <span class="token keyword">let</span> <span class="token punctuation">[</span>j1<span class="token punctuation">,</span> a<span class="token punctuation">,</span> j2<span class="token punctuation">]</span><span class="token operator">=</span>arr<span class="token punctuation">;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j1<span class="token punctuation">,</span> a<span class="token punctuation">,</span> j2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> err<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>结论</p><ul><li>Proimse有用——解除异步操作</li><li>Promise有局限——带逻辑的异步操作麻烦</li></ul><p>2、generator-生成器（过渡）</p><p>可以暂停</p><p>generator函数.html</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'aaa'</span><span class="token punctuation">)</span>          <span class="token keyword">yield</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'bbb'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">let</span> gen <span class="token operator">=</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//aaa</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//bbb</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>generator函数3.html</p><p>传参</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'aaa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token keyword">yield</span><span class="token punctuation">;</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'bbb'</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">let</span> gen<span class="token operator">=</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>generator函数4.html</p><p>返回值</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'aaa'</span><span class="token punctuation">)</span>          <span class="token keyword">yield</span> <span class="token number">55</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'bbb'</span><span class="token punctuation">)</span>          <span class="token keyword">return</span> <span class="token number">89</span>        <span class="token punctuation">}</span>        <span class="token keyword">let</span> gen <span class="token operator">=</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> res1 <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// debugger</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//{value: 55, done: false}</span>        <span class="token keyword">let</span> res2 <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//{value: 89, done: true}</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>3、async/await（推荐，es7）</p><p>可以暂停且可以处理带业务逻辑、异常</p><p>async和await.html</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span>sec<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> sec <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>          <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span>          <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>处理带业务逻辑</p><p>async和await2.html</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token keyword">let</span> data1 <span class="token operator">=</span> <span class="token keyword">await</span> $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">'1.txt'</span><span class="token punctuation">,</span>            dataType<span class="token punctuation">:</span> <span class="token string">'json'</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'data1=========>'</span><span class="token punctuation">,</span> data1<span class="token punctuation">)</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>data1<span class="token punctuation">.</span>a <span class="token operator">+</span> data1<span class="token punctuation">.</span>b <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> data2 <span class="token operator">=</span> <span class="token keyword">await</span> $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              url<span class="token punctuation">:</span> <span class="token string">'2.txt'</span><span class="token punctuation">,</span>              dataType<span class="token punctuation">:</span> <span class="token string">'json'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">alert</span><span class="token punctuation">(</span>data2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> data3 <span class="token operator">=</span> <span class="token keyword">await</span> $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              url<span class="token punctuation">:</span> <span class="token string">'3.txt'</span><span class="token punctuation">,</span>              dataType<span class="token punctuation">:</span> <span class="token string">'json'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">alert</span><span class="token punctuation">(</span>data3<span class="token punctuation">.</span>name<span class="token punctuation">)</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>处理异常</p><p>async和await3.html</p><pre class=" language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE html></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> data1 <span class="token operator">=</span> <span class="token keyword">await</span> $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              url<span class="token punctuation">:</span> <span class="token string">'1.txt'</span><span class="token punctuation">,</span>              dataType<span class="token punctuation">:</span> <span class="token string">'json'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> data2 <span class="token operator">=</span> <span class="token keyword">await</span> $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              url<span class="token punctuation">:</span> <span class="token string">'33.txt'</span><span class="token punctuation">,</span>              dataType<span class="token punctuation">:</span> <span class="token string">'json'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> data3 <span class="token operator">=</span> <span class="token keyword">await</span> $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              url<span class="token punctuation">:</span> <span class="token string">'3.txt'</span><span class="token punctuation">,</span>              dataType<span class="token punctuation">:</span> <span class="token string">'json'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data1<span class="token punctuation">,</span> data2<span class="token punctuation">,</span> data3<span class="token punctuation">)</span>          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'有问题'</span><span class="token punctuation">)</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'我错了....'</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo</title>
      <link href="/2019/01/23/hexo/"/>
      <url>/2019/01/23/hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p><a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><pre><code>    //全局安装    $ npm install -g hexo-cli</code></pre><p>存放位置</p><pre><code>    C:\Users\libingshen\AppData\Roaming\npm\node_modules</code></pre><p>验证安装是否成功</p><pre><code>    C:\Users\libingshen&gt;node --version    v10.15.0    C:\Users\libingshen&gt;npm --version    6.4.1    C:\Users\libingshen&gt;git --version    git version 2.16.2.windows.1    C:\Users\libingshen&gt;hexo --version    hexo-cli: 1.1.0    os: Windows_NT 10.0.17134 win32 x64    http_parser: 2.8.0    node: 10.15.0    v8: 6.8.275.32-node.45    uv: 1.23.2    zlib: 1.2.11    ares: 1.15.0    modules: 64    nghttp2: 1.34.0    napi: 3    openssl: 1.1.0j    icu: 62.1    unicode: 11.0    cldr: 33.1    tz: 2018e</code></pre><h1 id="Hexo博客初始化"><a href="#Hexo博客初始化" class="headerlink" title="Hexo博客初始化"></a>Hexo博客初始化</h1><pre><code>    $ cd D:\mytest\myhexo    $ hexo init    //安装依赖    $ npm install    //或者hexo generate生成静态页    $ hexo g     //或者hexo server，启动服务器，可以在http://localhost:4000/ 查看    $ hexo s </code></pre><h1 id="Hexo博客部署到GitHub"><a href="#Hexo博客部署到GitHub" class="headerlink" title="Hexo博客部署到GitHub"></a>Hexo博客部署到GitHub</h1><h2 id="本地客户端与GitHub建立授权连接生成公私钥"><a href="#本地客户端与GitHub建立授权连接生成公私钥" class="headerlink" title="本地客户端与GitHub建立授权连接生成公私钥"></a>本地客户端与GitHub建立授权连接生成公私钥</h2><pre><code>    ssh-keygen -t rsa -C &quot;782125244@qq.com&quot;</code></pre><p>公私钥存放位置</p><pre><code>    C:\Users\libingshen\.ssh</code></pre><p>将公钥内容上传到GitHub</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%B8%8A%E4%BC%A0%E5%85%AC%E9%92%A5%E5%88%B0GitHub.png" alt></p><h2 id="GitHub创建仓库作为hexo博客的站点"><a href="#GitHub创建仓库作为hexo博客的站点" class="headerlink" title="GitHub创建仓库作为hexo博客的站点"></a>GitHub创建仓库作为hexo博客的站点</h2><h2 id="hexo配置GitHub连接"><a href="#hexo配置GitHub连接" class="headerlink" title="hexo配置GitHub连接"></a>hexo配置GitHub连接</h2><p>安装 hexo-deployer-git</p><pre><code>    $ npm install hexo-deployer-git --save</code></pre><p>修改配置D:\mytest\myhexo_config.yml</p><pre><code>    #配置GitHub博客站址访问路径    # URL这里要是没有配置，GitHub样式显示不出来    ## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;    url: https://shenlibing.github.io/myhexo/    root: /myhexo    permalink: :year/:month/:day/:title/    permalink_defaults:    #博客推送到GitHub地址配置    # Deployment    ## Docs: https://hexo.io/docs/deployment.html    deploy:      type: git      repo: https://github.com/shenlibing/myhexo.git      branch: [master]</code></pre><h2 id="配置GitHub-Pages"><a href="#配置GitHub-Pages" class="headerlink" title="配置GitHub Pages"></a>配置GitHub Pages</h2><p>![](<a href="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/配置GitHub" target="_blank" rel="noopener">https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/配置GitHub</a> page.png)</p><h1 id="备份博客源文件"><a href="#备份博客源文件" class="headerlink" title="备份博客源文件"></a>备份博客源文件</h1><p>hexo部署到GitHub只上传.deploy_git文件夹的内容，并不会上传_posts文件夹下的博客源文件</p><pre><code>    D:\mytest\myhexo\.deploy_git    D:\mytest\myhexo\source\_posts</code></pre><p>解决：</p><p>将_posts文件夹作为git仓库，上传到GitHub，使得其作为另一个分支</p><p>创建并切换到新分支</p><pre><code>    libingshen@DESKTOP-7V287SK MINGW64 /d/mytest/myhexo/source/_posts (master)    $ git checkout -b src    Switched to a new branch &#39;src&#39;</code></pre><p>将新分支推送到GitHub</p><pre><code>    git add .    git commit -m &#39;add_v1:-新增hello-world笔记初始化&#39;    git push origin src</code></pre><p>将博客源文件分支设为推送的默认分支，git push推送直接推送到src分支</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E8%AE%BE%E7%BD%AE%E4%B8%8A%E4%BC%A0%E9%BB%98%E8%AE%A4%E5%88%86%E6%94%AF.png" alt></p><p>补充：</p><p>删除本地分支</p><pre><code>    $ git branch -d src</code></pre><p>删除远程分支</p><pre><code>    $ git push origin -d src</code></pre><p>切换分支</p><pre><code>    $ git checkout master</code></pre><p>查看提交日志</p><pre><code>    $ git log --oneline </code></pre><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h2 id="更换hexo主题"><a href="#更换hexo主题" class="headerlink" title="更换hexo主题"></a>更换hexo主题</h2><p>下载</p><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></p><p>解压放到D:\mytest\myhexo\themes</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E4%B8%8B%E8%BD%BD%E8%A7%A3%E5%8E%8B%E4%B8%BB%E9%A2%98%E5%90%8E%E5%AD%98%E6%94%BE%E4%BD%8D%E7%BD%AE.png" alt></p><p>修改<code>D:\mytest\myhexo\_config.yml</code>配置文件</p><pre><code>    # Extensions    ## Plugins: https://hexo.io/plugins/    ## Themes: https://hexo.io/themes/    theme: hexo-theme-next-master</code></pre><h2 id="修改站点语言"><a href="#修改站点语言" class="headerlink" title="修改站点语言"></a>修改站点语言</h2><p>编辑<code>D:\mytest\myhexo\_config.yml</code>文件</p><pre><code>    # Site    title: 小兵兵    subtitle:    description:    keywords:    author: shenlibing    language: zh-CN    timezone:</code></pre><h2 id="开启搜索、字数统计和阅读时长统计"><a href="#开启搜索、字数统计和阅读时长统计" class="headerlink" title="开启搜索、字数统计和阅读时长统计"></a>开启搜索、字数统计和阅读时长统计</h2><p>安装依赖hexo-symbols-count-time、hexo-generator-searchdb，安装依赖不成功时先删除D:\mytest\myhexo\node_modules文件夹，重新安装依赖</p><pre><code>    npm install hexo-symbols-count-time --save    npm install hexo-generator-searchdb --save</code></pre><p>配置主题样式文件</p><p>进入<code>D:\mytest\myhexo\themes\hexo-theme-next-master\</code>文件夹，编辑_config.yml文件</p><pre><code>    # Local search    # Dependencies: https://github.com/theme-next/hexo-generator-searchdb    local_search:      enable: true    # Dependencies: https://github.com/theme-next/hexo-symbols-count-time    symbols_count_time:      separated_meta: true      item_text_post: true      item_text_total: false      awl: 4      wpm: 275</code></pre><p>配置站点文件</p><p>编辑<code>D:\mytest\myhexo\_config.yml</code>文件</p><pre><code>    #阅读时长和本文字数    symbols_count_time:      symbols: true      time: true      total_symbols: true      total_time: true    #搜索功能    search:      path: search.xml      field: post      format: html      limit: 10000</code></pre><h2 id="添加分类和标签"><a href="#添加分类和标签" class="headerlink" title="添加分类和标签"></a>添加分类和标签</h2><pre><code>    $ hexo new page categories    $ hexo new page tags</code></pre><p>编辑D:\mytest\myhexo\source\categories\index.md</p><pre><code>    ---    title: categories    date: 2019-01-22 16:37:58    type: &quot;categories&quot;   #这部分是新添加的    ---</code></pre><p>编辑D:\mytest\myhexo\source\tags\index.md</p><pre><code>    ---    title: tags    date: 2019-01-22 16:38:40    type: &quot;tags&quot; #新添加的内容    ---</code></pre><p>修改菜单，添加categories和tags到menu中</p><pre><code>    menu:      home: / || home      #about: /about/ || user      tags: /tags/ || tags      categories: /categories/ || th      archives: /archives/ || archive      #schedule: /schedule/ || calendar      #sitemap: /sitemap.xml || sitemap      #commonweal: /404/ || heartbeat</code></pre><p>新增文章，添加categories、tags</p><pre><code>    ---    title: hexo博客搭建    date: 2019-01-23 09:07:30    categories: 日常记录    tags:       - hexo      - git      - github      - node      - markdown    ---</code></pre><h2 id="更换页面菜单布局位置"><a href="#更换页面菜单布局位置" class="headerlink" title="更换页面菜单布局位置"></a>更换页面菜单布局位置</h2><pre><code>    # Schemes    #scheme: Muse    #scheme: Mist    scheme: Pisces    #scheme: Gemini</code></pre><h2 id="配置文章浏览量"><a href="#配置文章浏览量" class="headerlink" title="配置文章浏览量"></a>配置文章浏览量</h2><p>注册</p><p><a href="https://leancloud.cn/" target="_blank" rel="noopener">https://leancloud.cn/</a></p><p>创建应用</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/leancloud%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8.png" alt></p><p>创建Class</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%88%9B%E5%BB%BAClass.png" alt></p><p>配置web安全域名</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%85%8D%E7%BD%AEweb%E5%AE%89%E5%85%A8%E5%9F%9F%E5%90%8D.png" alt></p><p>获取app_id、app_key</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E8%8E%B7%E5%8F%96app_id%E5%92%8Capp_key.png" alt></p><p>编辑<code>D:\mytest\myhexo\themes\hexo-theme-next-master\_config.yml</code>配置文件，填app_id、</p><p>app_key;security设置为false</p><pre><code>    # Show number of visitors to each article.    # You can visit https://leancloud.cn get AppID and AppKey.    leancloud_visitors:      enable: true      app_id: BedsOkBLOBR4nM4W52xTcBhb-gzGzoHsz #&lt;app_id&gt;      app_key: EEaRfb6dCMaS38laDCkSYhM9 #&lt;app_key&gt;      # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security      # If you don&#39;t care about security in leancloud counter and just want to use it directly      # (without hexo-leancloud-counter-security plugin), set `security` to `false`.      security: false      betterPerformance: false</code></pre><h2 id="插入本地图片"><a href="#插入本地图片" class="headerlink" title="插入本地图片"></a>插入本地图片</h2><p>安装依赖</p><pre><code>    npm install hexo-asset-image --save</code></pre><p>编辑<code>D:\mytest\myhexo\_config.yml</code>配置文件</p><pre><code>    post_asset_folder: true</code></pre><p>命令hexo new post test来生成博文时，/source/_post文件夹中除了test.md外，还有一个同名test文件夹</p><h2 id="typora插入本地图片"><a href="#typora插入本地图片" class="headerlink" title="typora插入本地图片"></a>typora插入本地图片</h2><h3 id="typora设置"><a href="#typora设置" class="headerlink" title="typora设置"></a>typora设置</h3><p>文件–偏好设置–图片插入</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1558400020100.png" alt="1558400020100"></p><p>编辑–图片工具–设置图片根目录</p><pre><code>typora-root-url: hexo/</code></pre><h2 id="设置动态背景"><a href="#设置动态背景" class="headerlink" title="设置动态背景"></a>设置动态背景</h2><p>进入D:\mytest\myhexo\themes\hexo-theme-next-master\layout\文件夹，编辑_layout.swig文件，在<code>&lt;/body&gt;</code>之前添加</p><pre><code>    &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="添加Fork-me-on-GitHub"><a href="#添加Fork-me-on-GitHub" class="headerlink" title="添加Fork me on GitHub"></a>添加Fork me on GitHub</h2><p>进入D:\mytest\myhexo\themes\hexo-theme-next-master\layout\文件夹，编辑_layout.swig文件，在<br><code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下面添加选择的<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">图标样式代码</a></p><pre><code>    &lt;a href=&quot;https://github.com/shenlibing/&quot; class=&quot;github-corner&quot; aria-label=&quot;View source on GitHub&quot;&gt;&lt;svg width=&quot;80&quot; height=&quot;80&quot; viewBox=&quot;0 0 250 250&quot; style=&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill=&quot;currentColor&quot; style=&quot;transform-origin: 130px 106px;&quot; class=&quot;octo-arm&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill=&quot;currentColor&quot; class=&quot;octo-body&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}&lt;/style&gt;</code></pre><h2 id="添加友情链接"><a href="#添加友情链接" class="headerlink" title="添加友情链接"></a>添加友情链接</h2><p>方式一<br>进入<code>D:\mytest\myhexo\themes\hexo-theme-next-master\layout\_partials</code>文件夹，在<code>footer.swig</code>文件末尾追加</p><pre><code> &lt;div&gt;友情链接：  &lt;a class=&quot;theme-link&quot;  href=&quot;http://collect.w3ctrain.com/&quot;&gt; 前端收藏夹 &lt;/a&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;  &lt;a class=&quot;theme-link&quot; href=&quot;http://www.alloyteam.com/nav/&quot;&gt; Web前端导航 &lt;/a&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;  &lt;a class=&quot;theme-link&quot;  href=&quot;http://www.runoob.com/&quot;&gt; 菜鸟教程 &lt;/a&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;  &lt;a class=&quot;theme-link&quot; href=&quot;https://mccxj.github.io/&quot;&gt; 小毛的胡思乱想 &lt;/a&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;/div&gt;</code></pre><p>方式二<br>进入<code>D:\mytest\myhexo\themes\hexo-theme-next-master</code>文件夹，编辑<code>_config.yml</code>文件</p><pre><code>    # Blog rolls    links_icon: link    links_title: Links    links_layout: block    #links_layout: inline    #links:      #Title: http://example.com    links:      美团技术团队: https://tech.meituan.com/      百度FEX: http://fex.baidu.com/      淘宝FED: http://taobaofed.org/</code></pre><h2 id="设置阅读全文"><a href="#设置阅读全文" class="headerlink" title="设置阅读全文"></a>设置阅读全文</h2><p>进入<code>D:\mytest\myhexo\themes\hexo-theme-next-master</code>文件夹，编辑<code>_config.yml</code>文件</p><pre><code>    # Automatically Excerpt. Not recommend.    # Use &lt;!-- more --&gt; in the post to control excerpt accurately.    auto_excerpt:      enable: true      length: 150</code></pre><h2 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h2><p>选择<code>gitalk</code></p><p>需要 <strong>GitHub Application</strong>，如果没有 <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">点击这里申请</a>，<code>Authorization callback URL</code> 填写当前使用插件页面的域名。</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1565523375504.png" alt="1565523375504"></p><p>获取<code>client_id</code>和<code>client_secret</code></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/1565523495363.png" alt="1565523495363"></p><p>进入<code>D:\mytest\myhexo</code>文件夹，编辑<code>_config.yml</code>文件</p><ul><li><p><strong>clientID</strong> <code>String</code></p><p><strong>Required</strong>. GitHub Application Client ID.</p></li><li><p><strong>clientSecret</strong> <code>String</code></p><p><strong>Required</strong>. GitHub Application Client Secret.</p></li><li><p><strong>repo</strong> <code>String</code></p><p><strong>Required</strong>. GitHub repository.</p></li><li><p><strong>owner</strong> <code>String</code></p><p><strong>Required</strong>. GitHub repository owner. Can be personal user or organization.</p></li><li><p><strong>admin</strong> <code>Array</code></p><p><strong>Required</strong>. GitHub repository owner and collaborators. (Users who having write access to this repository)</p></li></ul><pre><code># Gitalk# Demo: https://gitalk.github.io# Reference: https://asdfv1929.github.io/2018/01/20/gitalk/, https://liujunzhou.top/2018/8/10/gitalk-error/gitalk:  enable: true  github_id:  shenlibing # Github repo owner  repo:  myhexo # Repository name to store issues.  client_id:  # Github Application Client ID  client_secret:  # Github Application Client Secret  admin_user:  shenlibing # GitHub repo owner and collaborators, only these guys can initialize github issues  distraction_free_mode: true # Facebook-like distraction free mode</code></pre><h2 id="开启打赏"><a href="#开启打赏" class="headerlink" title="开启打赏"></a>开启打赏</h2><p>进入<code>D:\mytest\myhexo</code>文件夹，编辑<code>_config.yml</code>文件</p><pre><code># Reward# If true, reward would be displayed in every article by default.# And you can show or hide one article specially through add page variable `reward: true/false`.reward:  enable: true  #comment: Donate comment here  wechatpay: /images/wechat.jpg  alipay: /images/alipay.jpg  #bitcoin: /images/bitcoin.jpg</code></pre><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><p>错误一：</p><p>故障现象：xml转移错误，导致搜索不出结果</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source//1565313673086.png" alt="1565313673086"></p><p>故障原因：</p><p><img src="/.io//1565313744375.png" alt="1565313744375"></p><p>解决：</p><p><img src="/.io//1565313905828.png" alt="1565313905828"></p><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p><a href="https://www.lixint.me/hexo-blog.html" target="_blank" rel="noopener">【持续更新】Github Pages + Hexo 博客搭建，Next主题个性化修改</a></p><p><a href="https://juejin.im/post/5bcd2d395188255c3b7dc1db" target="_blank" rel="noopener">Hexo+NexT 打造一个炫酷博客</a></p><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo史上最全搭建教程</a></p><p><a href="https://zhangnew.com/Typora-Hexo.html" target="_blank" rel="noopener">用 Typora 写 Hexo 博客 | zhangnew</a></p><p><a href="https://www.liu.app/2018/07/27/Hexo/%E4%BD%BF%E7%94%A8Typora+Hexo+Google%20Drive%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BA%91%E7%AC%94%E8%AE%B0/" target="_blank" rel="noopener">使用Typora+Hexo+Google Drive打造自己的云笔记 | 情起·而深</a></p><p><a href="https://drive.google.com/drive/my-drive" target="_blank" rel="noopener">我的云端硬盘 - Google 云端硬盘</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优化点击事件绑定</title>
      <link href="/2019/01/15/you-hua-dian-ji-shi-jian-bang-ding/"/>
      <url>/2019/01/15/you-hua-dian-ji-shi-jian-bang-ding/</url>
      
        <content type="html"><![CDATA[<p>1、优化点击事件绑定</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/jquery/3.3.1/jquery.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新增按钮1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除按钮2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> log <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span>log<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>console<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> actionList <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'id1'</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'id1=============>'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">'id2'</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'id2===============>'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">'id3'</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'id3===============>'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token string">'id4'</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'id4===============>'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> $body <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span>    $body<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token string">'[data-action]'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//jQuery获取html标签自定义属性值或data值</span>        <span class="token keyword">let</span> action_name <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">'action'</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> action <span class="token operator">=</span> actionList<span class="token punctuation">[</span>action_name<span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">// log(action)</span>        <span class="token comment" spellcheck="true">// log($.isFunction(action))</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//页面需要新增一个按钮，做扩展</span>    $body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;button data-action="id5">按钮5&lt;/button>'</span><span class="token punctuation">)</span>    $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>actionList<span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token string">'id5'</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'id5============>'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>参考</p><p><a href="https://github.com/cssmagic/blog/issues/48" target="_blank" rel="noopener">https://github.com/cssmagic/blog/issues/48</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用户分配角色_角色维护权限树</title>
      <link href="/2019/01/14/yong-hu-fen-pei-jiao-se-jiao-se-wei-hu-quan-xian-shu/"/>
      <url>/2019/01/14/yong-hu-fen-pei-jiao-se-jiao-se-wei-hu-quan-xian-shu/</url>
      
        <content type="html"><![CDATA[<p>1、用户分配角色</p><p>效果图：</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%94%A8%E6%88%B7%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B2.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%94%A8%E6%88%B7%E5%88%86%E9%85%8D%E8%A7%92%E8%89%B22.png" alt></p><p>实现思路：</p><p>1）先静态实现页面</p><p>2）从数据库查询用户未分配角色和已分配角色，前端初始化该列表</p><p>3）添加、移除用户拥有的角色</p><p>前端：</p><p>1)左移、右移：append和appendTo的使用</p><pre><code>    $(&quot;.unroles :selected&quot;).appendTo(&quot;.roles_select&quot;)</code></pre><p>2）遍历选中的角色</p><pre><code>    //遍历选中的元素,拼接用户角色id    $(&#39;.unroles :selected&#39;).each(function() {        log(this)        rids += $(this).val() + &#39;,&#39;    })</code></pre><p>3)ajax发送异步请求（参数拼接：用户id,角色rids）</p><pre><code>    uid = &#39;${param.uid}&#39;    url = &#39;${ctp}/permission/user/assignrole?opt=remove&amp;uid=&#39;            + uid + &#39;&amp;rids=&#39; + rids + &#39;&#39;    //发送请求移除    $.get(url, fnf)</code></pre><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel panel-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>exampleInputPassword1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>未分配角色列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span>                            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control unroles<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">                            <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span> <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${list_user_unrole}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user_unrole<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user_unrole.id}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>${user_unrole.name}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default glyphicon glyphicon-chevron-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default glyphicon glyphicon-chevron-left<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">                                <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>exampleInputPassword1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>已分配角色列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span>                            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control roles_select<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">                            <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span> <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${list_user_role}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user_role<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user_role.id}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>${user_role.name}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".list-group-item"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"tree-closed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"tree-closed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//页面加载完成执行</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">addUserRoleEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token function">removeUserRoleEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//用户添加角色事件</span>        <span class="token keyword">var</span> addUserRoleEvent <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.glyphicon-chevron-right'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>                    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'向右移动=============>'</span><span class="token punctuation">)</span>                        <span class="token keyword">var</span> uid <span class="token operator">=</span> <span class="token string">''</span>                        <span class="token keyword">var</span> rids <span class="token operator">=</span> <span class="token string">''</span>                        <span class="token comment" spellcheck="true">//遍历选中的元素,拼接用户角色id</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.unroles :selected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>                            rids <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">','</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span>                        rids <span class="token operator">=</span> rids<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> rids<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>                        <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'用户角色ids==========>'</span><span class="token punctuation">,</span> rids<span class="token punctuation">)</span>                        uid <span class="token operator">=</span> <span class="token string">'${param.uid}'</span>                        url <span class="token operator">=</span> <span class="token string">'${ctp}/permission/user/assignrole?opt=add&amp;uid='</span>                                <span class="token operator">+</span> uid <span class="token operator">+</span> <span class="token string">'&amp;rids='</span> <span class="token operator">+</span> rids <span class="token operator">+</span> <span class="token string">''</span>                        <span class="token comment" spellcheck="true">//选中的得进行处理添加到用户角色表中</span>                        <span class="token comment" spellcheck="true">//发送请求给当前用户添加这几个角色，必须带上权限id的拼串和userid</span>                        $<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> fns<span class="token punctuation">)</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//用户删除角色事件</span>        <span class="token keyword">var</span> removeUserRoleEvent <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.glyphicon-chevron-left'</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>                            <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'向左移动=============>'</span><span class="token punctuation">)</span>                                <span class="token keyword">var</span> rids <span class="token operator">=</span> <span class="token string">''</span>                                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.roles_select :selected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    rids <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">','</span>                                <span class="token punctuation">}</span><span class="token punctuation">)</span>                                rids <span class="token operator">=</span> rids<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> rids<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>                                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'用户角色ids==========>'</span><span class="token punctuation">,</span> rids<span class="token punctuation">)</span>                                uid <span class="token operator">=</span> <span class="token string">'${param.uid}'</span>                                url <span class="token operator">=</span> <span class="token string">'${ctp}/permission/user/assignrole?opt=remove&amp;uid='</span>                                        <span class="token operator">+</span> uid <span class="token operator">+</span> <span class="token string">'&amp;rids='</span> <span class="token operator">+</span> rids <span class="token operator">+</span> <span class="token string">''</span>                                <span class="token comment" spellcheck="true">//发送请求移除</span>                                $<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> fnf<span class="token punctuation">)</span>                            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//异步请求成功的回调函数</span>        <span class="token keyword">var</span> fns <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'异步请求成功的回调函数===============>'</span><span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'data===========>'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//$('.roles_select').append($('.unroles :selected'))</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".unroles :selected"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">".roles_select"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//异步请求失败的回调函数</span>        <span class="token keyword">var</span> fnf <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'异步请求失败的回调函数===============>'</span><span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'data===========>'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.roles_select :selected'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">'.unroles'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>控制层:</p><p>1)</p><pre class=" language-java"><code class="language-java">     <span class="token comment" spellcheck="true">// 添加移除用户角色</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/assignrole"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> String <span class="token function">userRole</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"uid"</span><span class="token punctuation">)</span> Integer uid<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"rids"</span><span class="token punctuation">)</span> String rids<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"opt"</span><span class="token punctuation">)</span> String opt<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"添加移除用户角色==================>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户id-----角色ids------类型：添加、移除"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rids<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>opt<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>opt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 为某个用户添加角色</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> userRoleService<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>uid<span class="token punctuation">,</span> rids<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"remove"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>opt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 为某个用户删除角色</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> userRoleService<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>uid<span class="token punctuation">,</span> rids<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/toAssignRolePage"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">toAssignRolePage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"uid"</span><span class="token punctuation">)</span> Integer uid<span class="token punctuation">,</span> Model model<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserController.toAssignRolePage去分配角色页面=============>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 1、查出所有角色</span>        List<span class="token operator">&lt;</span>TRole<span class="token operator">></span> list_role <span class="token operator">=</span> roleService<span class="token punctuation">.</span><span class="token function">getAllRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"所有角色===========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list_role<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2、查出当前用户拥有的角色</span>        List<span class="token operator">&lt;</span>TRole<span class="token operator">></span> list_user_role <span class="token operator">=</span> roleService<span class="token punctuation">.</span><span class="token function">getUserRole</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前用户的角色==========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list_user_role<span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> TRole<span class="token operator">></span> map_user_role <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>TRole tRole <span class="token operator">:</span> list_user_role<span class="token punctuation">)</span> <span class="token punctuation">{</span>            map_user_role<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>tRole<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tRole<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 3、用户未分配的角色</span>        ArrayList<span class="token operator">&lt;</span>TRole<span class="token operator">></span> list_user_unrole <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>TRole tRole <span class="token operator">:</span> list_role<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>map_user_role<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>tRole<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                list_user_unrole<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tRole<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户未分配的角色=============>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list_user_unrole<span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list_user_role"</span><span class="token punctuation">,</span> list_user_role<span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list_user_unrole"</span><span class="token punctuation">,</span> list_user_unrole<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// model.addAttribute("uid", uid);</span>        <span class="token keyword">return</span> <span class="token string">"manager/permission/assignRole"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>sql:</p><p>1)用户表、用户_角色表、角色表3个表多表查询</p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.atguigu.scw.manager.bean.TRole<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>INTEGER<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>VARCHAR<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- List&lt;TRole> getUserRole(Integer uid); --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getUserRole<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BaseResultMap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        SELECT        a.*        FROM        t_role a        LEFT JOIN t_user_role b        ON a.`id` = b.`roleid`        LEFT JOIN t_user c        ON b.`userid` = c.`id`        WHERE c.`id` = #{uid}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><p>2、角色维护权限树</p><p>效果图：</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E8%A7%92%E8%89%B2%E5%88%86%E9%85%8D%E6%9D%83%E9%99%90.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E8%A7%92%E8%89%B2%E5%88%86%E9%85%8D%E6%9D%83%E9%99%902.png" alt></p><p>实现思路：</p><p>1）zTree展示权限树，初始化含有复选框的权限树，异步请求控制层（参数：角色rid）查询出角色拥有的权限</p><p>2）点击分配权限携带角色rid和权限permission_ids到控制层，先删除角色所拥有的权限，再更加permission_ids更新角色拥有的权限，同步到前端</p><p>3）bootstrap模态框–分配权限按钮绑定参数</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%88%86%E9%85%8D%E6%9D%83%E9%99%90%E6%8C%89%E9%92%AE%E7%BB%91%E5%AE%9A%E5%8F%82%E6%95%B0.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%88%86%E9%85%8D%E6%9D%83%E9%99%90%E6%8C%89%E9%92%AE%E7%BB%91%E5%AE%9A%E5%8F%82%E6%95%B02.png" alt></p><p>前端：</p><p>1）zTree权限树复选框初始化的时候刚开始使用2次异步请求（一次请求所有权限，一次请求角色拥有的权限），展示数据有点混乱，后来改为一次异步请求同时查询出（所有权限、角色拥有的权限）。</p><p>2）bootstrap自定义图标显示不出来</p><pre class=" language-html"><code class="language-html">    <span class="token comment" spellcheck="true">&lt;!-- Modal模态框 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal fade<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>permissModel<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span>        <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myModalLabel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal-dialog<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span>                        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myModalLabel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Modal title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!--展示权限树  --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>permissionTree<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ztree<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>关闭<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>addPermissionBtn<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>分配权限<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".list-group-item"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"tree-closed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"tree-closed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* $("tbody .btn-success").click(function() {            window.location.href = "assignPermission.html";        }); */</span>        <span class="token keyword">var</span> zTree        <span class="token comment" spellcheck="true">//设置ajax同步</span>        <span class="token comment" spellcheck="true">//$.ajaxSettings.async = false</span>        <span class="token keyword">var</span> assignPermissionEvent <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".assignPermissionModelBtn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'assignPermissionEvent==============>'</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//获取当前角色id</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'当前角色id==========>'</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'rid'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">var</span> rid <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'rid'</span><span class="token punctuation">)</span>                <span class="token function">loadModalAndTree</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> loadModalAndTree <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//模态框设置</span>            <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>                backdrop <span class="token punctuation">:</span> <span class="token string">'static'</span><span class="token punctuation">,</span>                show <span class="token punctuation">:</span> <span class="token boolean">true</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//手动打开模态框</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#permissModel'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modal</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//从数据库查出的所有权限节点数据</span>            <span class="token comment" spellcheck="true">//发送ajax请求获取到所有权限的json数据</span>            <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">'${ctp}/permission/role/json/'</span> <span class="token operator">+</span> rid            $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> fns<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//将角色id保存到模态框的哪个属性中；</span>            <span class="token comment" spellcheck="true">//打开模态框将角色id传递给model里面的权限分配按钮</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'角色id===========>'</span><span class="token punctuation">,</span> rid<span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#addPermissionBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"rid"</span><span class="token punctuation">,</span> rid<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//成功回调函数，刷新权限树</span>        <span class="token keyword">var</span> fns <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'成功返回数据'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'event==========>'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span>            <span class="token keyword">var</span> ids <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>listCurrentPermission<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ids<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ids===========>'</span><span class="token punctuation">,</span> ids<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//遍历每一条权限</span>            $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>listPermission<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//给每一个节点修改或者添加一些属性</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>open <span class="token operator">=</span> <span class="token boolean">true</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ids<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token keyword">var</span> setting <span class="token operator">=</span> <span class="token punctuation">{</span>                data <span class="token punctuation">:</span> <span class="token punctuation">{</span>                    simpleData <span class="token punctuation">:</span> <span class="token punctuation">{</span>                        enable <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                        idKey <span class="token punctuation">:</span> <span class="token string">"id"</span><span class="token punctuation">,</span>                        pIdKey <span class="token punctuation">:</span> <span class="token string">"pid"</span><span class="token punctuation">,</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    key <span class="token punctuation">:</span> <span class="token punctuation">{</span>                        url <span class="token punctuation">:</span> <span class="token string">"haha"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">/* view : {                    addDiyDom : showIcon                }, */</span>                check <span class="token punctuation">:</span> <span class="token punctuation">{</span>                    enable <span class="token punctuation">:</span> <span class="token boolean">true</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            zTree <span class="token operator">=</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>zTree<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#permissionTree"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> setting<span class="token punctuation">,</span>                    data<span class="token punctuation">.</span>listPermission<span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'zTree赋值完成==========>'</span><span class="token punctuation">,</span> zTree<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//用于在节点上固定显示用户自定义控件</span>        <span class="token comment" spellcheck="true">//?图标无法正常显示可能是字体样式没有引入进来</span>        <span class="token keyword">var</span> showIcon <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>treeId<span class="token punctuation">,</span> treeNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'自定义显示图标==============>'</span><span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'treeId===============>'</span><span class="token punctuation">,</span> treeId<span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'treeNode===============>'</span><span class="token punctuation">,</span> treeNode<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//#permissionTree_10_ico</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#"</span> <span class="token operator">+</span> treeNode<span class="token punctuation">.</span>tId <span class="token operator">+</span> <span class="token string">"_ico"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span>treeNode<span class="token punctuation">.</span>icon<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//默认勾选当前角色的权限</span>        <span class="token keyword">var</span> checkcurPermisson <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">'${ctp}/permission/role/curPermission/'</span> <span class="token operator">+</span> rid            $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> fns2<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//获取当前角色权限成功回调函数</span>        <span class="token keyword">var</span> fns2 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'fns2===============>'</span><span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'fns2_data================'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//遍历当前角色拥有的权限</span>            $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//$(this).attr('id')</span>                <span class="token keyword">var</span> node <span class="token operator">=</span> zTree<span class="token punctuation">.</span><span class="token function">getNodesByParam</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'使用zTree===========>'</span><span class="token punctuation">,</span> zTree<span class="token punctuation">)</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'当前角色拥有的权限=============>'</span><span class="token punctuation">,</span> node<span class="token punctuation">)</span>                zTree<span class="token punctuation">.</span><span class="token function">checkNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'是否选中=========>'</span><span class="token punctuation">,</span> node<span class="token punctuation">.</span>checked<span class="token punctuation">)</span>                node<span class="token punctuation">.</span>nocheck <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//表示显示checkbox</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//更新权限树</span>        <span class="token keyword">var</span> updateTree <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'更新权限树===========>'</span><span class="token punctuation">)</span>            <span class="token keyword">var</span> rid <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#addPermissionBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"rid"</span><span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'角色rid==========>'</span><span class="token punctuation">,</span> rid<span class="token punctuation">)</span>            <span class="token keyword">var</span> permission_ids <span class="token operator">=</span> <span class="token string">''</span>            <span class="token comment" spellcheck="true">//1、获取当前我们已经选中的权限</span>            <span class="token keyword">var</span> nodes <span class="token operator">=</span> zTree<span class="token punctuation">.</span><span class="token function">getCheckedNodes</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'nodes=============>'</span><span class="token punctuation">,</span> nodes<span class="token punctuation">)</span>            $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>nodes<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                permission_ids <span class="token operator">+</span><span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">','</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">'${ctp}/permission/role/update?rid='</span> <span class="token operator">+</span> rid                    <span class="token operator">+</span> <span class="token string">'&amp;permission_ids='</span> <span class="token operator">+</span> permission_ids            $<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> updateTreeFn<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//更新权限树回调函数</span>        <span class="token keyword">var</span> updateTreeFn <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"权限分配成功===========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#permissModel'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modal</span><span class="token punctuation">(</span><span class="token string">"hide"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> addPermissionBtnEvent <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#addPermissionBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击分配权限按钮=============>'</span><span class="token punctuation">)</span>                <span class="token function">updateTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> __main <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">assignPermissionEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token function">addPermissionBtnEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>控制层：</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//分配权限</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> String <span class="token function">updateRolePermission</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"rid"</span><span class="token punctuation">)</span> Integer rid<span class="token punctuation">,</span>            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"permission_ids"</span><span class="token punctuation">)</span> String permission_ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"更新权限==========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>permission_ids<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 先删除该角色所有权限，在为该用户分配权限</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> rolePermissionService<span class="token punctuation">.</span><span class="token function">updatePermission</span><span class="token punctuation">(</span>rid<span class="token punctuation">,</span> permission_ids<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> flag <span class="token operator">?</span> <span class="token string">"success"</span> <span class="token operator">:</span> <span class="token string">"fail"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/curPermission/{id}"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> <span class="token function">getCurrentPermission</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> Integer rid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前角色拥有的权限==============>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> listPermission <span class="token operator">=</span> permissionService<span class="token punctuation">.</span><span class="token function">getPermissionsById</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>listPermission<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> listPermission<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//查出角色拥有的权限、所有权限</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/json/{id}"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>TPermission<span class="token operator">>></span> <span class="token function">getAllPermission</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> Integer rid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> listPermission <span class="token operator">=</span> permissionService<span class="token punctuation">.</span><span class="token function">getPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> listCurrentPermission <span class="token operator">=</span> permissionService<span class="token punctuation">.</span><span class="token function">getPermissionsById</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span><span class="token punctuation">;</span>        HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>TPermission<span class="token operator">>></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"listPermission"</span><span class="token punctuation">,</span> listPermission<span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"listCurrentPermission"</span><span class="token punctuation">,</span> listCurrentPermission<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>业务层：</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">// 更新权限树</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">updatePermission</span><span class="token punctuation">(</span>Integer rid<span class="token punctuation">,</span> String permission_ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 删除角色权限</span>        TRolePermissionExample tRolePermissionExample <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TRolePermissionExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Criteria criteria <span class="token operator">=</span> tRolePermissionExample<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andRoleidEqualTo</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">deleteByExample</span><span class="token punctuation">(</span>tRolePermissionExample<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 更新权限</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>permission_ids<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> permission_ids<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>String permission_id <span class="token operator">:</span> split<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> i <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>permission_id<span class="token punctuation">)</span><span class="token punctuation">;</span>                TRolePermission rolePermission <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TRolePermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 设置权限id</span>                rolePermission<span class="token punctuation">.</span><span class="token function">setPermissionid</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 设置角色id</span>                rolePermission<span class="token punctuation">.</span><span class="token function">setRoleid</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 保存角色权限关系</span>                mapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>rolePermission<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>permission_ids<span class="token punctuation">)</span><span class="token punctuation">;</span>            TRolePermission rolePermission <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TRolePermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置权限id</span>            rolePermission<span class="token punctuation">.</span><span class="token function">setPermissionid</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置角色id</span>            rolePermission<span class="token punctuation">.</span><span class="token function">setRoleid</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 保存角色权限关系</span>            mapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>rolePermission<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">// 为角色分配权限，查询所有权限</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> <span class="token function">getPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> list_permission <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> list_permission<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> <span class="token function">getPermissionsById</span><span class="token punctuation">(</span>Integer rid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> list_permission <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">getRolePermission</span><span class="token punctuation">(</span>rid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> list_permission<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 权限 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ztree </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网易邮箱服务器发送电子邮件_搭建James邮件服务器发送电子邮件</title>
      <link href="/2019/01/13/wang-yi-you-xiang-fu-wu-qi-fa-song-dian-zi-you-jian-da-jian-james-you-jian-fu-wu-qi-fa-song-dian-zi-you-jian/"/>
      <url>/2019/01/13/wang-yi-you-xiang-fu-wu-qi-fa-song-dian-zi-you-jian-da-jian-james-you-jian-fu-wu-qi-fa-song-dian-zi-you-jian/</url>
      
        <content type="html"><![CDATA[<p>1、网易邮箱发送电子邮件</p><p>为了安全，网易邮箱开启pop3授权码验证，该授权码可以让客户端进行登录</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%BD%91%E6%98%93%E9%82%AE%E7%AE%B1%E5%BC%80%E5%90%AFpop3%E6%9C%8D%E5%8A%A1.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%BD%91%E6%98%93%E9%82%AE%E7%AE%B1%E5%BC%80%E5%90%AFpop3%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%90%AF%E6%8E%88%E6%9D%83%E7%A0%81%E7%99%BB%E5%BD%95%E7%AC%AC%E4%B8%89%E6%96%B9%E5%AE%A2%E6%88%B7%E7%AB%AF.png" alt></p><p>qq开启授权码</p><p><a href="https://service.mail.qq.com/cgi-bin/help?subtype=1&&no=1001256&&id=28" target="_blank" rel="noopener">https://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;no=1001256&amp;&amp;id=28</a></p><p>实现：<br>JavaMailAPI使用比较麻烦，这里采用的是Apache Commons Email</p><p>导入依赖</p><pre class=" language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.apache.commons/commons-email --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.commons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>测试：<br>A simple text email</p><pre><code>    @Test    public void test01() throws Exception {        SimpleEmail email = new SimpleEmail();        // 设置主机名，远程服务器的主机名        email.setHostName(&quot;smtp.163.com&quot;);        email.setSmtpPort(25);        // 设置登陆远程服务器的账号和pop3授权码        email.setAuthentication(&quot;15501892660@163.com&quot;, &quot;xxxxxxx&quot;);        // 编写一个邮件        // 设置发送给谁        email.addTo(&quot;782125244@qq.com&quot;);        // 设置这个邮件来源于哪里        email.setFrom(&quot;15501892660@163.com&quot;);        // 设置邮件主题        email.setSubject(&quot;163发给qq的测试邮件 &quot;);        // 设置邮件内容        email.setMsg(&quot;测试邮件&quot;);        // 邮件发送        email.send();    }</code></pre><p>参考：</p><p><a href="http://commons.apache.org/proper/commons-email/userguide.html" target="_blank" rel="noopener">http://commons.apache.org/proper/commons-email/userguide.html</a></p><p>2、搭建James邮件服务器</p><p>下载</p><p><a href="https://archive.apache.org/dist/james/server/" target="_blank" rel="noopener">https://archive.apache.org/dist/james/server/</a></p><p>quick-start</p><p><a href="http://james.apache.org/server/quick-start.html" target="_blank" rel="noopener">http://james.apache.org/server/quick-start.html</a></p><p>解压</p><p>D:\devsoft\apache-james-3.0-beta4</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E8%A7%A3%E5%8E%8BJames.png" alt></p><p>建库</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%90%AD%E5%BB%BAJames%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BB%BA%E5%BA%93.jpg" alt></p><p>配置数据源</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%90%AD%E5%BB%BAJames%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E6%BA%90.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%90%AD%E5%BB%BAJames%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E6%BA%902.png" alt></p><p>启动</p><pre><code>    D:\devsoft\apache-james-3.0-beta4\bin&gt;run.bat    INFO  09:28:46,331 | org.apache.james.container.spring.context.JamesServerApplicationContext | Refreshing org.apache.james.container.spring.context.JamesServerApplicationContext@153f5a29: startup date [Thu Jan 03 09:28:46 CST 2019]; root of context hierarchy    Exception in thread &quot;main&quot; org.springframework.beans.factory.BeanDefinitionStoreException: Failed to create the JAXB binder; nested exception is javax.xml.bind.JAXBException: Provider com.sun.xml.internal.bind.v2.ContextFactory could not be instantiated: com.sun.xml.internal.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions    类的两个属性具有相同名称 &quot;outputs&quot;            this problem is related to the following location:                    at public java.util.List org.apache.camel.model.ResequenceDefinition.getOutputs()                    at org.apache.camel.model.ResequenceDefinition            this problem is related to the following location:                    at private java.util.List org.apache.camel.model.ResequenceDefinition.outputs                    at org.apache.camel.model.ResequenceDefinition     - with linked exception:    [com.sun.xml.internal.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions    类的两个属性具有相同名称 &quot;outputs&quot;            this problem is related to the following location:                    at public java.util.List org.apache.camel.model.ResequenceDefinition.getOutputs()                    at org.apache.camel.model.ResequenceDefinition            this problem is related to the following location:                    at private java.util.List org.apache.camel.model.ResequenceDefinition.outputs                    at org.apache.camel.model.ResequenceDefinition    ]            at org.apache.camel.spring.handler.CamelNamespaceHandler$CamelContextBeanDefinitionParser.doParse(CamelNamespaceHandler.java:258)            at org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser.parseInternal(AbstractSingleBeanDefinitionParser.java:85)            at org.springframework.beans.factory.xml.AbstractBeanDefinitionParser.parse(AbstractBeanDefinitionParser.java:59)            at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:73)            at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1419)            at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1409)            at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:184)            at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:140)            at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:111)            at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)            at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)            at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)            at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)            at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)            at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)            at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)            at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:243)            at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:127)            at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)            at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:131)            at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:522)            at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:436)            at org.springframework.context.support.ClassPathXmlApplicationContext.&lt;init&gt;(ClassPathXmlApplicationContext.java:139)            at org.springframework.context.support.ClassPathXmlApplicationContext.&lt;init&gt;(ClassPathXmlApplicationContext.java:93)            at org.apache.james.container.spring.context.JamesServerApplicationContext.&lt;init&gt;(JamesServerApplicationContext.java:39)            at org.apache.james.app.spring.JamesAppSpringMain.init(JamesAppSpringMain.java:61)            at org.apache.james.app.spring.JamesAppSpringMain.main(JamesAppSpringMain.java:42)    Caused by: javax.xml.bind.JAXBException: Provider com.sun.xml.internal.bind.v2.ContextFactory could not be instantiated: com.sun.xml.internal.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions    类的两个属性具有相同名称 &quot;outputs&quot;            this problem is related to the following location:                    at public java.util.List org.apache.camel.model.ResequenceDefinition.getOutputs()                    at org.apache.camel.model.ResequenceDefinition            this problem is related to the following location:                    at private java.util.List org.apache.camel.model.ResequenceDefinition.outputs                    at org.apache.camel.model.ResequenceDefinition     - with linked exception:    [com.sun.xml.internal.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions    类的两个属性具有相同名称 &quot;outputs&quot;            this problem is related to the following location:                    at public java.util.List org.apache.camel.model.ResequenceDefinition.getOutputs()                    at org.apache.camel.model.ResequenceDefinition            this problem is related to the following location:                    at private java.util.List org.apache.camel.model.ResequenceDefinition.outputs                    at org.apache.camel.model.ResequenceDefinition    ]            at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:146)            at javax.xml.bind.ContextFinder.find(ContextFinder.java:356)            at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:431)            at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:394)            at org.apache.camel.spring.handler.CamelNamespaceHandler.createJaxbContext(CamelNamespaceHandler.java:187)            at org.apache.camel.spring.handler.CamelNamespaceHandler.getJaxbContext(CamelNamespaceHandler.java:174)            at org.apache.camel.spring.handler.CamelNamespaceHandler$CamelContextBeanDefinitionParser.doParse(CamelNamespaceHandler.java:256)            ... 26 more    Caused by: com.sun.xml.internal.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions    类的两个属性具有相同名称 &quot;outputs&quot;            this problem is related to the following location:                    at public java.util.List org.apache.camel.model.ResequenceDefinition.getOutputs()                    at org.apache.camel.model.ResequenceDefinition            this problem is related to the following location:                    at private java.util.List org.apache.camel.model.ResequenceDefinition.outputs                    at org.apache.camel.model.ResequenceDefinition            at com.sun.xml.internal.bind.v2.runtime.IllegalAnnotationsException$Builder.check(IllegalAnnotationsException.java:91)            at com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:445)            at com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.&lt;init&gt;(JAXBContextImpl.java:277)            at com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.&lt;init&gt;(JAXBContextImpl.java:124)            at com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder.build(JAXBContextImpl.java:1123)            at com.sun.xml.internal.bind.v2.ContextFactory.createContext(ContextFactory.java:147)            at com.sun.xml.internal.bind.v2.ContextFactory.createContext(ContextFactory.java:271)            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)            at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)            at java.lang.reflect.Method.invoke(Method.java:498)            at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:171)            at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:131)            ... 32 more    D:\devsoft\apache-james-3.0-beta4\bin&gt;</code></pre><pre><code>    D:\devsoft\apache-james-3.0-beta4\bin&gt;run.bat    INFO  09:37:44,247 | org.apache.james.container.spring.context.JamesServerApplicationContext | Refreshing org.apache.james.container.spring.context.JamesServerApplicationContext@7ca48474: startup date [Thu Jan 03 09:37:44 CST 2019]; root of context hierarchy    log4j:WARN No appenders could be found for logger (org.apache.commons.configuration.ConfigurationUtils).    log4j:WARN Please initialize the log4j system properly.    log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.    INFO  09:37:45,153 | org.apache.james.container.spring.context.JamesServerApplicationContext | Bean &#39;logprovider&#39; of type [class org.apache.james.container.spring.lifecycle.LogProviderImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)    INFO  09:37:45,544 | james.mailrepositorystore | JamesMailStore init...    INFO  09:37:45,550 | james.mailrepositorystore | Registering Repository instance of class org.apache.james.mailrepository.file.FileMailRepository to handle file protocol requests for repositories with key file    INFO  09:37:45,550 | james.mailrepositorystore | Registering Repository instance of class org.apache.james.mailrepository.jdbc.JDBCMailRepository to handle db protocol requests for repositories with key db    INFO  09:37:45,550 | james.mailrepositorystore | Registering Repository instance of class org.apache.james.mailrepository.jdbc.JDBCMailRepository to handle dbfile protocol requests for repositories with key dbfile    INFO  09:37:45,551 | james.mailrepositorystore | Registering Repository instance of class org.apache.james.mailrepository.file.MBoxMailRepository to handle mbox protocol requests for repositories with key mbox    INFO  09:37:45,936 | james.dnsservice | Autodiscovery is enabled - trying to discover your system&#39;s DNS Servers    INFO  09:37:45,942 | james.dnsservice | Adding autodiscovered server 202.100.192.68    INFO  09:37:45,942 | james.dnsservice | Adding autodiscovered server 202.100.199.8    INFO  09:37:45,943 | james.dnsservice | DNS Server is: 202.100.192.68    INFO  09:37:45,943 | james.dnsservice | DNS Server is: 202.100.199.8    INFO  09:37:45,949 | james.dnsservice | Registered cache, resolver and search paths as DNSJava defaults    12  James  WARN   [main] openjpa.Runtime - An error occurred while registering a ClassTransformer with PersistenceUnitInfo: name &#39;James&#39;, root URL [file:/D:/devsoft/apache-james-3.0-beta4/conf/]. The error has been consumed. To see it, set your openjpa.Runtime log level to TRACE. Load-time class transformation will not be available.    INFO  09:37:55,187 | james.domainlist | Set autodetect to: true    INFO  09:37:55,187 | james.domainlist | Set autodetectIP to: true    28  James  INFO   [main] openjpa.Runtime - Starting OpenJPA 2.1.0    52  James  INFO   [main] openjpa.jdbc.JDBC - Using dictionary class &quot;org.apache.openjpa.jdbc.sql.MySQLDictionary&quot;.    Cannot load JDBC driver class &#39;com.mysql.jdbc.Driver&#39;    java.lang.ClassNotFoundException: com.mysql.jdbc.Driver            at java.net.URLClassLoader.findClass(URLClassLoader.java:381)            at java.lang.ClassLoader.loadClass(ClassLoader.java:424)            at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338)            at java.lang.ClassLoader.loadClass(ClassLoader.java:357)            at org.apache.commons.dbcp.BasicDataSource.createConnectionFactory(BasicDataSource.java:1420)            at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1371)            at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)</code></pre><p>解决办法</p><p>D:\devsoft\apache-james-3.0-beta4\conf\lib：存放自己导入的jar</p><p>D:\devsoft\apache-james-3.0-beta4\lib：存放James默认jar</p><p>复制jaxb-impl-2.1.3.jar，mysql驱动jar包到conf/lib下</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%90%AD%E5%BB%BAJames%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8.png" alt></p><p>设置服务器域名、建立账户</p><pre><code>    D:\devsoft\apache-james-3.0-beta4\bin&gt; james-cli.bat -h localhost -p 9999 adddomain atguigu.com    adddomain command executed sucessfully in 106 ms.    D:\devsoft\apache-james-3.0-beta4\bin&gt; james-cli.bat -h localhost -p 9999 adduser test@atguigu.com test    adduser command executed sucessfully in 94 ms.</code></pre><p>配置Foxmail客户端连接James邮件服务器</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%85%8D%E7%BD%AEFoxmail%E5%AE%A2%E6%88%B7%E7%AB%AF.png" alt><br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%85%8D%E7%BD%AEFoxmail%E5%AE%A2%E6%88%B7%E7%AB%AF2.png" alt></p><p>测试：</p><pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 测试james发送邮件     * @Description (TODO这里用一句话描述这个方法的作用)     * @throws Exception     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">{</span>        SimpleEmail email <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置主机名，远程服务器的主机名</span>        email<span class="token punctuation">.</span><span class="token function">setHostName</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//自定义的ip，一定要手动设置好端口号</span>        email<span class="token punctuation">.</span><span class="token function">setSmtpPort</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置登陆远程服务器的密码</span>        email<span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span><span class="token string">"test@atguigu.com"</span><span class="token punctuation">,</span> <span class="token string">"000000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//编写一个邮件</span>        <span class="token comment" spellcheck="true">//设置发送给谁</span>        email<span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span><span class="token string">"17512080612@163.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置这个邮件来源于哪里</span>        email<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token string">"admin@atguigu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置邮件主题</span>        email<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">"哈哈，给你测试 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置邮件内容</span>        email<span class="token punctuation">.</span><span class="token function">setMsg</span><span class="token punctuation">(</span><span class="token string">"我能给您发邮件&lt;a href='http://www.atguigu.com'>尚硅谷&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//邮件发送</span>        email<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 邮件服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二维矩阵显示账户类型和资质_ajax异步传参_插入mysql中文乱码</title>
      <link href="/2019/01/11/er-wei-ju-zhen-xian-shi-zhang-hu-lei-xing-he-zi-zhi-ajax-yi-bu-chuan-can-cha-ru-mysql-zhong-wen-luan-ma/"/>
      <url>/2019/01/11/er-wei-ju-zhen-xian-shi-zhang-hu-lei-xing-he-zi-zhi-ajax-yi-bu-chuan-can-cha-ru-mysql-zhong-wen-luan-ma/</url>
      
        <content type="html"><![CDATA[<p>1、二维矩阵显示账号类型和资质</p><p>效果：</p><p><img src="https://i.imgur.com/H6MtJqE.png" alt></p><p>表结构：</p><p>账号类型和资质中间表</p><p><img src="https://i.imgur.com/JrwRXlC.png" alt></p><p>资质表</p><p><img src="https://i.imgur.com/dqgX6f3.png" alt></p><p>思路：</p><p>业务层查出账户和资质中间表、资质表、账户表数据，前端展示图横轴根据账户数据填充，纵轴根据资质数据填充，选择框的确定–根据<strong>账户资质中间表数据</strong>和选择框上<strong>自定义属性绑定的账户名、资质id</strong>进行相等比较确定。</p><p>前端：</p><p>1）单选框勾选关系初始化</p><p><img src="https://i.imgur.com/TgzMKiS.png" alt></p><p>2）异步传参(封装成实体)</p><p>实体对象必须有get和set方法</p><p><img src="https://i.imgur.com/Frl8lPj.png" alt></p><p><img src="https://i.imgur.com/5r8EtpQ.png" alt></p><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    &lt;%        //设置导航条上的显示                pageContext.setAttribute("navinfo", "分类管理");                //设置点击高亮效果                pageContext.setAttribute("curUrl", "servicectrl/type/ctrl");    %>    <span class="token comment" spellcheck="true">&lt;!--引入导航条  --></span>    &lt;%@include file="/WEB-INF/includes/nav-bar.jsp"%>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container-fluid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!--引入树形菜单  --></span>            &lt;%@include file="/WEB-INF/includes/user_menu.jsp"%>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel panel-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>glyphicon glyphicon-th<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 数据矩阵                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table-responsive<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table  table-bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${types}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>${type}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${certs}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cert<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${cert.name}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${types}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>type<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>checkSimple<span class="token punctuation">'</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span>                                                    <span class="token attr-name">type_name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>${type}<span class="token punctuation">'</span></span> <span class="token attr-name">cid</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>${cert.id}<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    &lt;%@include file="/WEB-INF/includes/js-file.jsp"%>    <span class="token comment" spellcheck="true">&lt;!-- 引入树形菜单结构点击时动态显示页面高亮效果的js --></span>    &lt;%@include file="/WEB-INF/includes/common-js.jsp"%>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".list-group-item"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"tree-closed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"tree-closed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//页面加载完成获取账户类型和资质的关系</span>            <span class="token keyword">var</span> list_type_cert <span class="token operator">=</span> <span class="token string">'${list_type_cert_json}'</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'list_type_cert'</span><span class="token punctuation">,</span> list_type_cert<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//string</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'list_type_cert type=======>'</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span> <span class="token punctuation">(</span>list_type_cert<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//JSON.parse(list_type_cert) 字符串转成json对象</span>            $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>list_type_cert<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> content<span class="token punctuation">,</span> content<span class="token punctuation">.</span>accttype<span class="token punctuation">,</span>content<span class="token punctuation">.</span>certid<span class="token punctuation">)</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.checkSimple'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//attr获取自定义属性值</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'type_name'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span>accttype<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'cid'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span>certid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">//设置原生属性值</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">//执行事件</span>            <span class="token function">__main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//更新</span>        <span class="token keyword">var</span> update_type_cert_event <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> tAccountTypeCert <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>            <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'update_type_cert_event=============>'</span><span class="token punctuation">)</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'update==========>'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>                <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">)</span>                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'flag==========>'</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span>                accttype <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'type_name'</span><span class="token punctuation">)</span>                certid <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'cid'</span><span class="token punctuation">)</span>                <span class="token function">log</span><span class="token punctuation">(</span>accttype<span class="token punctuation">,</span> certid<span class="token punctuation">)</span>                tAccountTypeCert<span class="token punctuation">.</span>accttype <span class="token operator">=</span> accttype                tAccountTypeCert<span class="token punctuation">.</span>certid <span class="token operator">=</span> certid                tAccountTypeCert<span class="token punctuation">.</span>flag <span class="token operator">=</span> flag                <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">'${ctp}/servicectrl/type/update_type_cert'</span>                <span class="token keyword">var</span> data <span class="token operator">=</span> tAccountTypeCert                $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> __main <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">update_type_cert_event</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>控制层：</p><p>1)接收异步传参实体返回json</p><p><img src="https://i.imgur.com/7Pcl0Tu.png" alt></p><pre class=" language-java"><code class="language-java">    <span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>controller<span class="token punctuation">.</span>manager<span class="token punctuation">;</span>    <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span>    <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Model<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestParam<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ResponseBody<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>TAccountTypeCert<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>TCert<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>service<span class="token punctuation">.</span>CertService<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>service<span class="token punctuation">.</span>CertTypeService<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ObjectMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Controller</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/servicectrl/type"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TypeController</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Autowired</span>        CertService certService<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Autowired</span>        CertTypeService cTypeService<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">static</span> ObjectMapper MAPPER <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/ctrl"</span><span class="token punctuation">)</span>        <span class="token keyword">public</span> String <span class="token function">list</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"分类管理界面============>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 1、先去数据库查出表格横向的显示数据</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> types <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"商业公司"</span><span class="token punctuation">,</span> <span class="token string">"个体工商户"</span><span class="token punctuation">,</span> <span class="token string">"个人经营"</span><span class="token punctuation">,</span> <span class="token string">"政府及非营利组织"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 2、在查出纵向要显示的标题</span>            List<span class="token operator">&lt;</span>TCert<span class="token operator">></span> certs <span class="token operator">=</span> certService<span class="token punctuation">.</span><span class="token function">getAllCert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"资质===========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>certs<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 3、查询经营类型与资质关系中间表</span>            <span class="token comment" spellcheck="true">// List&lt;TAccountTypeCert> cTypeService.getAllCertType();</span>            List<span class="token operator">&lt;</span>TAccountTypeCert<span class="token operator">></span> list_type_cert <span class="token operator">=</span> cTypeService<span class="token punctuation">.</span><span class="token function">getAllCertType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"经营类型===============>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list_type_cert<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 4、将数据放到模型域当中</span>            model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"types"</span><span class="token punctuation">,</span> types<span class="token punctuation">)</span><span class="token punctuation">;</span>            model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"certs"</span><span class="token punctuation">,</span> certs<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// list转json字符串</span>            String list_type_cert_json <span class="token operator">=</span> MAPPER<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>list_type_cert<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"经营类型--资质----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list_type_cert_json<span class="token punctuation">)</span><span class="token punctuation">;</span>            model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"list_type_cert_json"</span><span class="token punctuation">,</span> list_type_cert_json<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"manager/servicemanager/type"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/update_type_cert"</span><span class="token punctuation">)</span>        <span class="token annotation punctuation">@ResponseBody</span>        <span class="token keyword">public</span> String <span class="token function">update_type_cert</span><span class="token punctuation">(</span>TAccountTypeCert tAccountTypeCert<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"更新经营类型---资质==========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>tAccountTypeCert<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> flag <span class="token operator">=</span> tAccountTypeCert<span class="token punctuation">.</span><span class="token function">isFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"flag============>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"增加一条记录========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> count <span class="token operator">=</span> cTypeService<span class="token punctuation">.</span><span class="token function">updateTypeCert</span><span class="token punctuation">(</span>tAccountTypeCert<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"移除一条记录========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                cTypeService<span class="token punctuation">.</span><span class="token function">removeTypeCert</span><span class="token punctuation">(</span>tAccountTypeCert<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>业务层：</p><p>1）单表的写读操作</p><pre class=" language-java"><code class="language-java">    <span class="token keyword">package</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span>    <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span>    <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>TAccountTypeCert<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>TAccountTypeCertExample<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>TAccountTypeCertExample<span class="token punctuation">.</span>Criteria<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>TAccountTypeCertMapper<span class="token punctuation">;</span>    <span class="token keyword">import</span> com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>scw<span class="token punctuation">.</span>manager<span class="token punctuation">.</span>service<span class="token punctuation">.</span>CertTypeService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Service</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CertTypeServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">CertTypeService</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Autowired</span>        TAccountTypeCertMapper mapper<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//查询资质和账户中间表</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> List<span class="token operator">&lt;</span>TAccountTypeCert<span class="token operator">></span> <span class="token function">getAllCertType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            List<span class="token operator">&lt;</span>TAccountTypeCert<span class="token operator">></span> list_type_cert <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> list_type_cert<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 增加经营类型--资质</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateTypeCert</span><span class="token punctuation">(</span>TAccountTypeCert tAccountTypeCert<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>tAccountTypeCert<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> count<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 删除经营类型--资质</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">removeTypeCert</span><span class="token punctuation">(</span>TAccountTypeCert tAccountTypeCert<span class="token punctuation">)</span> <span class="token punctuation">{</span>            TAccountTypeCertExample example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TAccountTypeCertExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Criteria criteria <span class="token operator">=</span> example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            criteria<span class="token punctuation">.</span><span class="token function">andAccttypeEqualTo</span><span class="token punctuation">(</span>tAccountTypeCert<span class="token punctuation">.</span><span class="token function">getAccttype</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            criteria<span class="token punctuation">.</span><span class="token function">andCertidEqualTo</span><span class="token punctuation">(</span>tAccountTypeCert<span class="token punctuation">.</span><span class="token function">getCertid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">deleteByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> count<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>2、mysql插入中文乱码</p><p>1）数据库编码和web.xml配置均为utf-8，Controller读取到的是正确的中文，但是保存到数据库后变成”??”</p><p>解决</p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/scw_0325?useUnicode<span class="token punctuation">=</span>true&amp;amp;characterEncoding<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span></code></pre><p><img src="https://i.imgur.com/SYguSUW.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ajax -	ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ztree树形结构菜单_mybatis分页查询</title>
      <link href="/2019/01/10/ztree-shu-xing-jie-gou-cai-dan-mybatis-fen-ye-cha-xun/"/>
      <url>/2019/01/10/ztree-shu-xing-jie-gou-cai-dan-mybatis-fen-ye-cha-xun/</url>
      
        <content type="html"><![CDATA[<p>1、二级树形菜单</p><p>效果图</p><p><img src="https://i.imgur.com/xC5UACi.png" alt></p><p>表结构<br><img src="https://i.imgur.com/yNutkpm.png" alt></p><p>业务层：</p><p>二级菜单实现思路：</p><p>1）查出父菜单（pid=0），通过遍历父菜单获得父菜单(id)，根据父菜单id值作为条件查出子菜单（子菜单pid=父菜单id），接着整理父子菜单关系；这种不推荐，假如所有菜单为18个，查出父菜单3个封装到集合时需要遍历18次，根据父菜单id作为查询子菜单的条件需要遍历3*18次。</p><p>2）一次性查出所有菜单18个，使用程序进行组合，这种推荐，以空间换时间。</p><p>封装菜单实体</p><p><img src="https://i.imgur.com/bNHeGw9.png" alt></p><p>业务层：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> <span class="token function">getAllMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 保存父菜单</span>    List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> menus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>TPermission<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Map<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> TPermission<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> TPermission<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 查询所有菜单</span>    <span class="token comment" spellcheck="true">// 参数为null，表示不带条件查询菜单</span>    List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> list <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"所有菜单=========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 1、将所有菜单都放在map中</span>    <span class="token comment" spellcheck="true">// 都是引用，如果从map中拿到这个数据改变以后，map中页面变化</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>TPermission tPermission <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>tPermission<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tPermission<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 2、先封装父菜单，再将子菜单放入到父菜单中</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>TPermission tPermission <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>tPermission<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            menus<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tPermission<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// tPermission（子菜单），拿到父菜单</span>            Integer pid <span class="token operator">=</span> tPermission<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 拿到父菜单；以pid的值作为map中的菜单id，就是父菜单</span>            TPermission p_menu <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 拿到当前父菜单的子菜单；子菜单会有一些额外的问题</span>            <span class="token comment" spellcheck="true">// 这个list第一次获取是没有的，如果添加上一次以后。这个list是有的</span>            List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> childs <span class="token operator">=</span> p_menu<span class="token punctuation">.</span><span class="token function">getChilds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>childs <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 当前有子菜单</span>                childs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tPermission<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 当前没有子菜单</span>                childs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 添加当前子菜单</span>                childs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tPermission<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 将当前整理好的childs设置进去</span>                p_menu<span class="token punctuation">.</span><span class="token function">setChilds</span><span class="token punctuation">(</span>childs<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父菜单===========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>menus<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> menus<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>控制层</p><p>1）将整理好的父子菜单数据放入到session域中，当前用户的这次会话一直使用，只需要去数据库查询一次</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/main.html"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">toMainPage</span><span class="token punctuation">(</span>HttpSession session<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 校验</span>    <span class="token comment" spellcheck="true">// 判断session中是否有这个用户，如果没有去登陆页面</span>    Object object <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>LOGIN_USER<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 用户没登陆</span>        <span class="token keyword">return</span> <span class="token string">"redirect:/login.jsp"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 用户登陆才来到主页，session中没有菜单，或者菜单被我们从session中清除了</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>USER_MENUS<span class="token punctuation">)</span> <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 1、查出所有菜单，在页面进行显示</span>            List<span class="token operator">&lt;</span>TPermission<span class="token operator">></span> menus <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">getAllMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 2、将查到的菜单放在session域中</span>            <span class="token comment" spellcheck="true">// 菜单这些数据没必要每次来到主页，都调用service方法进行查询；放在session用户，</span>            <span class="token comment" spellcheck="true">// 当前用户的这次会话一直使用，只需要去数据库查一次</span>            session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>USER_MENUS<span class="token punctuation">,</span> menus<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">"manager/main"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>前台：</p><p>1）引入：&lt;%@ taglib prefix=”fn” uri=”<a href="http://java.sun.com/jsp/jstl/functions&quot;%&gt;" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/functions&quot;%&gt;</a><br>计算后台传过来的list集合的长度：${fn:length(p_menu.childs)}</p><pre class=" language-html"><code class="language-html">&lt;%@ page language="java" contentType="text/html; charset=UTF-8"    pageEncoding="UTF-8"%>&lt;%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>&lt;%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-3 col-md-2 sidebar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tree<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list-group-item tree-closed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>glyphicon glyphicon-dashboard<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 控制面板<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 遍历父菜单 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sessionScope.userMenus}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p_menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list-group-item tree-closed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${p_menu.icon}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>${p_menu.name} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">                        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">float</span><span class="token punctuation">:</span> right</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>${fn:length(p_menu.childs)}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment" spellcheck="true">&lt;!-- 遍历子菜单 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${p_menu.childs}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c_menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/${c_menu.url}<span class="token punctuation">"</span></span> <span class="token attr-name">data-action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${c_menu.id}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${c_menu.icon}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>${c_menu.name}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>2、mybatis分页查询</p><p>根据用户名或者账号进行查询</p><p>效果图：</p><p><img src="https://i.imgur.com/uATdmaF.png" alt></p><p>引入依赖：</p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 分页 插件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>业务层：</p><p>1）带条件查询</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>TUser<span class="token operator">></span> <span class="token function">getAllUsersByCondition</span><span class="token punctuation">(</span>String str<span class="token punctuation">)</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserServiceImpl.getAllUsersByCondition 带条件查询员工============>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 查询条件拼接</span>    <span class="token comment" spellcheck="true">// 第一次创建的条件，默认使用and连接的</span>    TUserExample tUserExample <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TUserExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Criteria criteria <span class="token operator">=</span> tUserExample<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Criteria criteria2 <span class="token operator">=</span> tUserExample<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        criteria<span class="token punctuation">.</span><span class="token function">andLoginacctLike</span><span class="token punctuation">(</span><span class="token string">"%"</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        criteria<span class="token punctuation">.</span><span class="token function">andUsernameLike</span><span class="token punctuation">(</span><span class="token string">"%"</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    tUserExample<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>criteria2<span class="token punctuation">)</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>TUser<span class="token operator">></span> list_users_example <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>tUserExample<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> list_users_example<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>控制层：</p><p>1）mybatis分页插件会对结果集进行包装，必须在查询前设置： PageHelper.startPage(pn, ps);</p><p>2）查询后输入框数据回显：model.addAttribute(“sp”, search);（转发）</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/list"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">users</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"pn"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">)</span> Integer pn<span class="token punctuation">,</span>        <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"ps"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">"5"</span><span class="token punctuation">)</span> Integer ps<span class="token punctuation">,</span>        <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"sp"</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span> String search<span class="token punctuation">,</span> Model model<span class="token punctuation">)</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"UserController.users 用户列表显示页===========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"前台请求参数[第xxx页，每页显示xxx条数]==========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pn<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ps<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 分页显示数据,这里设置必须放到查询数据之前，否则前台会有问题</span>    PageHelper<span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>pn<span class="token punctuation">,</span> ps<span class="token punctuation">)</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>TUser<span class="token operator">></span> list_users <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getAllUsersByCondition</span><span class="token punctuation">(</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"查询到的所有用户列表========>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list_users<span class="token punctuation">)</span><span class="token punctuation">;</span>    PageInfo<span class="token operator">&lt;</span>TUser<span class="token operator">></span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>list_users<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"分页后的数据处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 将查询用户列表数据放在请求域中，表单查询参数回显到页面</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"users"</span><span class="token punctuation">,</span> users<span class="token punctuation">)</span><span class="token punctuation">;</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"sp"</span><span class="token punctuation">,</span> search<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"manager/permission/user"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>前台：</p><p>1）为所有分页连接绑定单击事件，让其动态的带上分页的查询参数</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> href <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&amp;sp="</span><span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name='sp']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> href<span class="token punctuation">)</span></code></pre><p>2)全选和全不选函数</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//全选/全不选函数</span><span class="token keyword">function</span> <span class="token function">checkall_reverse</span><span class="token punctuation">(</span>check_all_btn<span class="token punctuation">,</span> check_btn<span class="token punctuation">)</span> <span class="token punctuation">{</span>    check_all_btn<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//如果是原生的属性，使用prop获取比较好</span>        check_btn<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    check_btn<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//当check_btn点满以后check_all_btn勾上，否则不选中</span>        <span class="token comment" spellcheck="true">//获取被选中的checkbtn个数</span>        <span class="token keyword">var</span> flag <span class="token operator">=</span> check_btn<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">":checked"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">==</span> check_btn<span class="token punctuation">.</span>length        check_all_btn<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html">&lt;%@ page language="java" contentType="text/html; charset=UTF-8"    pageEncoding="UTF-8"%><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&lt;%@include file="/WEB-INF/includes/css-file.jsp"%><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/css/main.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token class">.tree</span> li </span><span class="token punctuation">{</span>    <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">table tbody tr<span class="token pseudo-class">:nth-child(odd)</span> </span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#F4F4F4</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">table tbody td<span class="token pseudo-class">:nth-child(even)</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#C00</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    &lt;%        //设置导航条上的显示                pageContext.setAttribute("navinfo", "用户维护");                //设置点击高亮效果                pageContext.setAttribute("curUrl", "permission/user/list");    %>    <span class="token comment" spellcheck="true">&lt;!-- 引入navbar--></span>    &lt;%@include file="/WEB-INF/includes/nav-bar.jsp"%><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container-fluid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 引入树形菜单 --></span>            &lt;%@include file="/WEB-INF/includes/user_menu.jsp"%>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel panel-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>glyphicon glyphicon-th<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 数据列表                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panel-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-inline<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>                            <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp }/permission/user/list<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group has-feedback<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>查询条件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control has-success<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sp<span class="token punctuation">"</span></span>                                        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>用户名/账号查询<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${sp}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-warning<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>glyphicon glyphicon-search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 查询                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-danger<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">                            <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> glyphicon glyphicon-remove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 删除                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">                            <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>window.location.href<span class="token punctuation">=</span><span class="token punctuation">'</span>add.html<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>glyphicon glyphicon-plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> 新增                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table-responsive<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table  table-bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkall_btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>账号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>邮箱地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${users.list}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.id}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>single_check<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.loginacct }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.username }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>${user.email }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-success btn-xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> glyphicon glyphicon-check<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary btn-xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> glyphicon glyphicon-pencil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-danger btn-xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> glyphicon glyphicon-remove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tfoot</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pagination<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                <span class="token comment" spellcheck="true">&lt;!-- 即使点击分页连接也应该带上查询条件的值 --></span>                                                <span class="token comment" spellcheck="true">&lt;!-- 给分页超链接绑定单击事件； --></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/permission/user/list?pn<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                                <span class="token comment" spellcheck="true">&lt;!-- 是否还有前一页 --></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${users.hasPreviousPage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>                                                        <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/permission/user/list?pn<span class="token punctuation">=</span>${users.prePage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>if</span><span class="token punctuation">></span></span>                                                <span class="token comment" spellcheck="true">&lt;!-- 遍历页数 --></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${users.navigatepageNums}<span class="token punctuation">"</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                    <span class="token comment" spellcheck="true">&lt;!-- 当前页 --></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pn<span class="token punctuation">=</span><span class="token punctuation">=</span>users.pageNum }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>                                                            <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/permission/user/list?pn<span class="token punctuation">=</span>${pn}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>${pn}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>                                                                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>(current)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>if</span><span class="token punctuation">></span></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pn !<span class="token punctuation">=</span> users.pageNum }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/permission/user/list?pn<span class="token punctuation">=</span>${pn}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>${pn }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>if</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">></span></span>                                                <span class="token comment" spellcheck="true">&lt;!--是否还有下一页  --></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${users.hasNextPage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>                                                        <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/permission/user/list?pn<span class="token punctuation">=</span>${users.nextPage}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>下一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>if</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>                                                    <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${ctp}/permission/user/list?pn<span class="token punctuation">=</span>${users.pages}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>末页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tfoot</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    &lt;%@include file="/WEB-INF/includes/js-file.jsp"%>    <span class="token comment" spellcheck="true">&lt;!-- 引入树形菜单结构点击时动态显示页面高亮效果的js --></span>    &lt;%@include file="/WEB-INF/includes/common-js.jsp"%>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".list-group-item"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"tree-closed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"tree-closed"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"tbody .btn-success"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"assignRole.html"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"tbody .btn-primary"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"edit.html"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//当前页面所在的哪个超链接是color:red</span>        <span class="token comment" spellcheck="true">//他的父list-group-item.  tree-closed是没有的</span>        <span class="token comment" spellcheck="true">//找到当前页面的a连接</span>        <span class="token comment" spellcheck="true">//使用css为某个元素加样式  list-group-item</span>        <span class="token comment" spellcheck="true">//为所有分页连接绑定单击事件，让其动态的带上分页的查询参数</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".pagination"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>                <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//1、获取到查询表单的查询参数</span>                    <span class="token comment" spellcheck="true">//不禁用默认行为，而是为超链接多拼装上查询条件</span>                    <span class="token comment" spellcheck="true">//为超链接动态拼装查询条件</span>                    <span class="token keyword">var</span> href <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&amp;sp="</span>                            <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name='sp']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> href<span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//这是调用了抽取过来的方法；</span>        <span class="token function">checkall_reverse</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#checkall_btn"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".single_check"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 权限 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ztree </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>svn版本控制</title>
      <link href="/2019/01/09/svn-ban-ben-kong-zhi/"/>
      <url>/2019/01/09/svn-ban-ben-kong-zhi/</url>
      
        <content type="html"><![CDATA[<p>1、svn下载</p><p><a href="https://sourceforge.net/projects/win32svn/" target="_blank" rel="noopener">https://sourceforge.net/projects/win32svn/</a></p><p>2、验证是否安装成功</p><pre><code>    C:\Users\libingshen&gt;svn --version</code></pre><p>3、创建版本库</p><pre><code>    D:\mytest\mysvn\OA&gt;svnadmin create D:\mytest\mysvn\OA</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93.png" alt></p><p>4、启动svn服务</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%90%AF%E5%8A%A8svn%E6%9C%8D%E5%8A%A1.png" alt></p><p>5、验证svn服务是否启动</p><p>svn服务监听3690端口</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%AA%8C%E8%AF%81%E6%9C%8D%E5%8A%A1%E6%98%AF%E5%90%A6%E5%90%AF%E5%8A%A8.png" alt></p><p>6、svn注册为Windows服务</p><p>tip:等号左边没有空格，等号右边有一个空格。</p><pre><code>    C:\WINDOWS\system32&gt;sc create MySVNService binpath= &quot;C:\Pmyprogram\svn\bin\svnserve.exe --service -r D:\mytest\mysvn&quot; start= auto depend= Tcpip</code></pre><p>原因：每次启动svn服务时必须启动一个cmd窗口，cmd窗口一关闭，svn服务就关闭。</p><p>非管理员运行时会失败。</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%B3%A8%E5%86%8Csvn%E6%9C%8D%E5%8A%A1%E5%A4%B1%E8%B4%A5.png" alt></p><p>管理员运行</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8Csvn%E6%9C%8D%E5%8A%A1%E6%88%90%E5%8A%9F.png" alt><br><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%88%9B%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1.png" alt></p><p>启动、停止、删除svn服务（管理员身份运行cmd）</p><pre><code>    //启动svn服务    C:\WINDOWS\system32&gt;sc start MySVNService    //停止服务    C:\WINDOWS\system32&gt;sc stop MySVNService    //删除服务    C:\WINDOWS\system32&gt;sc delete MySVNService</code></pre><p>7、检出项目</p><pre><code>    D:\mytest\mycheckout&gt;svn checkout svn://localhost/OA MyOA</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%A3%80%E6%9F%A5%E9%A1%B9%E7%9B%AE.png" alt></p><p>8、提交文件</p><p>–开启匿名权限访问</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%BC%80%E5%90%AF%E5%8C%BF%E5%90%8D%E6%9D%83%E9%99%90%E8%AE%BF%E9%97%AE.png" alt></p><p>–先将文件加入版本库，然后提交（需添加提交日志信息，不然报错）</p><p>svn commit 命令最后可以不指定具体文件，此时表示提交当前工作副本中<br>的所有修改</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/svn%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6.png" alt></p><p>9、更新</p><p>另一个客户端检出项目、更新并提交文件</p><pre><code>    //远程版本库具体位置  svn://localhost/OA    //将OA检出到本地的目录 MyOA2    D:\mytest\mycheckout&gt;svn checkout svn://localhost/OA MyOA2</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%A3%80%E5%87%BA%E9%A1%B9%E7%9B%AE.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%9B%B4%E6%96%B0%E6%96%87%E4%BB%B6%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6.png" alt></p><p>10、授权访问版本库</p><p>–单版本库开启授权访问</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E7%89%88%E6%9C%AC%E5%BA%93%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4%E4%B8%80.png" alt></p><p>–多版本库开启授权访问</p><pre><code>    在版本库根目录 D:\mytest\mysvn 下创建 commConf 目录    将未修改的 authz 和 passwd 文件拷贝到 commConf 目录下    修改需要设置权限的版本库的 svnserve.conf 文件    ①password-db = ../../commConf/passwd    ②authz-db = ../../commConf/authz</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E7%89%88%E6%9C%AC%E5%BA%93%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4%E4%BA%8C.png" alt></p><p>passwd：设置访问版本库的用户信息</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/passwd.png" alt></p><p>authz：设置用户访问版本库的权限</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/authz.png" alt></p><hr>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> svn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springmvc配置</title>
      <link href="/2019/01/07/springmvc-pei-zhi/"/>
      <url>/2019/01/07/springmvc-pei-zhi/</url>
      
        <content type="html"><![CDATA[<p>1、springmvc路径跳转配置</p><p>目录结构</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/springmvc%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt></p><p>控制层</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/springmvc%E6%8E%A7%E5%88%B6%E5%B1%82%E8%B7%AF%E5%BE%84.png" alt></p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 使用注解开发，不用配置controller，需要配置一个组件扫描器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!-- 视图解析器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 配置从项目根目录到指定目录一端路径 ,建议指定浅一点的目录 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/WEB-INF/jsp/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 文件的后缀名 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>suffix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.jsp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--将index2.jsp放在/WEB-INF/jsp/目录下，请求index2时不经过controller处理;配置了mvc:view-controller后需要配置mvc:annotation-driven,不然走controller的请求会失效 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>view-controller</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/index2<span class="token punctuation">"</span></span>    <span class="token attr-name">view-name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--处理静态资源  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>default-servlet-handler</span><span class="token punctuation">/></span></span></code></pre><p>index.jsp</p><pre class=" language-html"><code class="language-html">&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"    pageEncoding="ISO-8859-1"%>&lt;%@ taglib uri="http://java.sun.com/jstl/core_rt" prefix="c"%><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ISO-8859-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span>    <span class="token attr-name">request.setAttribute("path",</span> <span class="token attr-name">request.getContextPath());</span><span class="token attr-name">%</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    //走controller跳转    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>go controller<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    //不走controller跳转，在springmvc配置文件中配置了mvc-view;index2.jsp页面需放在/WEB-INF/jsp/目录下    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>not go controller<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    //加载静态资源    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${path}/static/index3.jsp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>load static resource index3.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    //加载静态资源，需在springmvc配置文件中配置mvc:default-servlet-handler    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span>        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${path}/ui/jquery/jquery-1.8.3.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"${path}"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>2、springmvc获取请求参数，封装数据到请求域</p><p>前台</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>testParam<span class="token punctuation">'</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>get<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>text<span class="token punctuation">'</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>username<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p>控制层</p><p>处理方式一：<br>方法参数为Map或者ModelMap类型，数据封装到Map或者Modelmap类型中，其实就是将数据放入到请求域当中</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/testParam"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">testParam</span><span class="token punctuation">(</span>ModelMap modelMap<span class="token punctuation">,</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    String username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"接收前台发送过来的请求参数=========>用户名："</span><span class="token operator">+</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//modelmap会将数据放到请求域当中</span>    modelMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">,</span> <span class="token string">"haikou"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//返回视图</span>    <span class="token keyword">return</span> <span class="token string">"hello"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>处理方式二：<br>用ModelAndView作为返回值，可以将数据放到请求域中且指定返回的视图</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/testParam"</span><span class="token punctuation">)</span><span class="token keyword">public</span> ModelAndView <span class="token function">testParam</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>    String username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"接收前台发送过来的请求参数=========>用户名："</span><span class="token operator">+</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//参数为返回的视图</span>    ModelAndView hello <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    hello<span class="token punctuation">.</span><span class="token function">addObject</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">,</span> <span class="token string">"haikou"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> hello<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>前台获取</p><pre><code>&lt;!-- 获取后台封装在请求域中的数据 --&gt;地址：${requestScope.address}&lt;br/&gt;&lt;%=request.getAttribute(&quot;address&quot;)%&gt;</code></pre><p>3、springmvc处理文件上传</p><p>springmvc.xml增加如下配置</p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--文件上传  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipartResolver<span class="token punctuation">"</span></span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.multipart.commons.CommonsMultipartResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultEncoding<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maxUploadSize<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10240000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span></code></pre><p>前台表单提交</p><pre class=" language-html"><code class="language-html">//必须是post请求，且enctype='multipart/form-data'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>testFileUpload<span class="token punctuation">'</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>post<span class="token punctuation">'</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>multipart/form-data<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    文件：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>file<span class="token punctuation">'</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>file<span class="token punctuation">'</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p>控制层</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/testFileUpload"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">testFileUpload</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span>MultipartFile file<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//获取文件名</span>    String fileName<span class="token operator">=</span>file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取流，即可取得内容</span>    InputStream in<span class="token operator">=</span>file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"文件名===========>"</span><span class="token operator">+</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"hello"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>4、springmvc返回json数据</p><p>pom.xml加入依赖</p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jackson-annotations<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.9.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>控制层</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//需要加@ResponseBody注解</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/testJson"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> Map <span class="token function">testFileUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token string">"沈利兵"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> map<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springmvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my_en</title>
      <link href="/2019/01/06/my-en/"/>
      <url>/2019/01/06/my-en/</url>
      
        <content type="html"><![CDATA[<h1 id="english"><a href="#english" class="headerlink" title="english"></a>english</h1><h2 id="20181214"><a href="#20181214" class="headerlink" title="20181214"></a>20181214</h2><pre><code>    eviction --赶出    thorough --彻底    fixed --固定    notifications --通知    traverse graphs --遍历图    covers --覆盖    block --阻塞    Redis Releases --Redis 发布    Benchmarks --基准    Latency monitoring --延迟监控    tune --调整    High Availability --高可用性    Signals Handling --信号处理    Administration --管理    troubleshoot --解决    Troubleshooting --故障排除    command line interface --命令行界面    durability --持久力    Credits --积分    Sponsors --赞助商    Trademark  --商标    Lexicographical order --字典顺序    populated --填充    reply --答复、回复    indicating  --指示、说明    penultimate --倒数第二    treat --对待、视其为    abstractions --抽象    separately --单独、分别地    retrieve --检索、取出    bitmaps --位图    probabilistic --概率    estimate --估计    cardinality --基数    scared --害怕    trivial --不重要的、微不足道的    crash course --速成班    specification --规范    Prerequisites --先决条件    clause --条款、子句    omit  --忽略    semantics --语义</code></pre><p>20181215</p><p>参考<br><a href="https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/" target="_blank" rel="noopener">https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/</a></p><pre><code>    opinion --观点    properly  --正确地    strategy  --策略    interpret --解释    authoring --创作    form --形式    consist of --包括    responsibilities --责任    spot  --点、发现    key --关键    phases --阶段    deserve --值得    cement  --巩固    Hoisting --提升    exactly identical --完全相同    fairly comfortable  --相当熟悉    adapt --调整、适应    Set up memory space  --设置内存空间    Execution Stack --执行堆栈    Call Stack --调用堆栈    intuition --直觉    scenario  --脚本    misunderstood  --误解    Implicit Binding --隐式绑定    Explicit Binding --显示绑定    Lexical Binding --词法绑定</code></pre><h2 id="20181217"><a href="#20181217" class="headerlink" title="20181217"></a>20181217</h2><p>参考</p><p><a href="https://dev.to/siwalik/async-programming-basics-every-js-developer-should-know-in-2018-a9c" target="_blank" rel="noopener">https://dev.to/siwalik/async-programming-basics-every-js-developer-should-know-in-2018-a9c</a></p><pre><code>    hence --于是    imensely --非常</code></pre><h2 id="20190117"><a href="#20190117" class="headerlink" title="20190117"></a>20190117</h2><p>参考：</p><p><a href="https://docs.python.org/3/library/stdtypes.html#comparisons" target="_blank" rel="noopener">https://docs.python.org/3/library/stdtypes.html#comparisons</a></p><pre><code>    Comparisons  --比较    Comparisons can be chained arbitrarily  --比较可以任意连接    negated --否定    notion --概念、主张    raise --养、引发</code></pre><p><a href="https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" target="_blank" rel="noopener">https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range</a></p><pre><code>    ascending  --升序    restrictions --限制    imposed --加强    lexicographically --字典顺序    multidimensional list --多维列表    Immutable Sequence Types --不可变序列类型    slice --切片</code></pre><h2 id="20190523"><a href="#20190523" class="headerlink" title="20190523"></a>20190523</h2><p>来源：</p><p><a href="https://jekyllrb.com/" target="_blank" rel="noopener">Jekyll • Simple, blog-aware, static sites | Transform your plain text into static websites and blogs</a></p><pre><code>Sick 厌倦custom domain name    自定义域名pesky    讨厌omment moderation    评论审核Permalinks    永久链接Migrate your blog 迁移你的博客site scaffold    站点脚手架metadata file    元数据文件Front Matter    前方问题Assets    资产SITE STRUCTURE    现场结构Liquid    液体Pagination    分页extendable    扩展static site generator    静态站点生成器churns    搅动tweak    拧tweaks    调整unearthed    发现regarding    关于nstallation wizard    安装向导Command Prompt instance    命令提示符实例code snippets    代码片段</code></pre><h2 id="20190603"><a href="#20190603" class="headerlink" title="20190603"></a>20190603</h2><pre><code> the related materials used in this book 本书中使用的相关资料 Protocol Analysis Institute 方案分析研究所 warranty 担保 Dedication 奉献</code></pre>]]></content>
      
      
      <categories>
          
          <category> 词汇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> english </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven配置</title>
      <link href="/2019/01/05/maven-pei-zhi/"/>
      <url>/2019/01/05/maven-pei-zhi/</url>
      
        <content type="html"><![CDATA[<p>1、下载：</p><p><a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">https://maven.apache.org/download.cgi</a></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/maven%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%8B%E8%BD%BD.png" alt></p><p>2、配置path环境变量</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/maven%E9%85%8D%E7%BD%AEpath%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt></p><p>3、验证安装是否成功</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E9%AA%8C%E8%AF%81maven%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt></p><p>4、配置本地仓库、阿里镜像、jdk编译版本</p><p>配置本地仓库位置</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/maven%E9%85%8D%E7%BD%AEjar%E5%8C%85%E4%BB%93%E5%BA%93%E4%BD%8D%E7%BD%AE.png" alt></p><pre><code>    &lt;localRepository&gt;C:\greensoft\apache-maven-3.5.2\repository&lt;/localRepository&gt;</code></pre><p>配置jar包下载阿里远程镜像</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/maven%E4%BF%AE%E6%94%B9jar%E5%8C%85%E4%B8%8B%E8%BD%BD%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E9%95%9C%E5%83%8F.png" alt></p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>aliyun-maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>aliyun-maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span>  </code></pre><p>配置jdk编译版本</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/maven%E9%85%8D%E7%BD%AEjdk%E7%BC%96%E8%AF%91%E7%89%88%E6%9C%AC.png" alt></p><pre class=" language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>jdk-1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span></code></pre><p>5、eclipse整合maven</p><p>使用自己的maven安装包</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/maven%E6%95%B4%E5%90%88eclipse.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/maven%E6%95%B4%E5%90%88eclipse2.png" alt></p><p>6、IDEA整合maven</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/IDEA%E6%95%B4%E5%90%88maven.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js面向对象_箭头函数this_数组常用方法</title>
      <link href="/2019/01/04/js-mian-xiang-dui-xiang-jian-tou-han-shu-this-shu-zu-chang-yong-fang-fa/"/>
      <url>/2019/01/04/js-mian-xiang-dui-xiang-jian-tou-han-shu-this-shu-zu-chang-yong-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>1、js面向对象</p><p>1)传统的面向对象</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    Person<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>showName<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我叫'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    Person<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>showAge<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">+</span><span class="token string">'岁'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    p<span class="token punctuation">.</span><span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    p<span class="token punctuation">.</span><span class="token function">showAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>继承</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    Person<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>showName<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我叫'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    Person<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>showAge<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">+</span><span class="token string">'岁'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//------------------------------------------------</span>    <span class="token keyword">function</span> <span class="token function">Worker</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> job<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//通过call调用父类构造函数</span>      Person<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>job<span class="token operator">=</span>job<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//使得子类实例对象共享父类原型对象上的方法</span>    Worker<span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//重写子类原型对象的构造，特别恶心</span>    Worker<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token operator">=</span>Worker<span class="token punctuation">;</span>    Worker<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>showJob<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我是做：'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> w<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'打杂的'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    w<span class="token punctuation">.</span><span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    w<span class="token punctuation">.</span><span class="token function">showAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    w<span class="token punctuation">.</span><span class="token function">showJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>2）js标准的面向对象</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">/*function Person(name, age){      this.name=name;      this.age=age;    }    Person.prototype.showName=function (){      alert('我叫'+this.name);    };    Person.prototype.showAge=function (){      alert('我'+this.age+'岁');    };*/</span>    <span class="token comment" spellcheck="true">//标准面向对象书写方式</span>    <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>      <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我叫'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token function">showAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">+</span><span class="token string">'岁'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    p<span class="token punctuation">.</span><span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    p<span class="token punctuation">.</span><span class="token function">showAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//------------------------------------------------</span>    <span class="token keyword">function</span> <span class="token function">Worker</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> job<span class="token punctuation">)</span><span class="token punctuation">{</span>      Person<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>job<span class="token operator">=</span>job<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    Worker<span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Worker<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token operator">=</span>Worker<span class="token punctuation">;</span>    Worker<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>showJob<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我是做：'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>标准的继承方式</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">/*function Person(name, age){      this.name=name;      this.age=age;    }    Person.prototype.showName=function (){      alert('我叫'+this.name);    };    Person.prototype.showAge=function (){      alert('我'+this.age+'岁');    };*/</span>    <span class="token comment" spellcheck="true">//标准面向对象书写方式</span>    <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>      <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我叫'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token function">showAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">+</span><span class="token string">'岁'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*let p=new Person('blue', 18);    p.showName();    p.showAge();*/</span>    <span class="token comment" spellcheck="true">//------------------------------------------------</span>    <span class="token comment" spellcheck="true">/*function Worker(name, age, job){      Person.call(this, name, age);      this.job=job;    }    Worker.prototype=new Person();    Worker.prototype.constructor=Worker;    Worker.prototype.showJob=function (){      alert('我是做：'+this.job);    };*/</span>    <span class="token comment" spellcheck="true">//标准继承方式，子类通过extends实例化的子类可以访问到父类原型对象的方法</span>    <span class="token keyword">class</span> <span class="token class-name">Worker</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>      <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> job<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//super-超类(父类)，可以访问到构造方法，不需要通过call的方式调用</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>job<span class="token operator">=</span>job<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token function">showJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我是做：'</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> w<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'打杂的'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    w<span class="token punctuation">.</span><span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    w<span class="token punctuation">.</span><span class="token function">showAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    w<span class="token punctuation">.</span><span class="token function">showJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>2、箭头函数this</p><p>普通函数：根据调用我的人  this老变</p><p>箭头函数：根据所在的环境  this恒定</p><p>bind——给函数定死一个this</p><p>例1：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//箭头函数所处的环境是window</span>    arr<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    arr<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>输出</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0this.png" alt></p><p>例2：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    document<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//箭头函数所处的环境是document</span>      arr<span class="token punctuation">.</span>a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>      arr<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>输出</p><p>![](<a href="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/箭头函数this" target="_blank" rel="noopener">https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/箭头函数this</a> (2).png)</p><p>例3：</p><p>箭头函数所处的环境是document，尽管通过bind绑定死了12，但还是输出document，说明箭头函数的this优先级高于bind方式绑定的this</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    document<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> oBtn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      oBtn<span class="token punctuation">.</span>onclick<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>aaa<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>输出</p><p>![](<a href="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/箭头函数this" target="_blank" rel="noopener">https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/箭头函数this</a> (3).png)</p><p>3、数组常用方法</p><p>1）map 映射</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> arr2<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//true,false,true,false,false</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>改进1</p><p>map参数：回调函数使用箭头函数书写方式</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> arr2<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>改进2</p><p>如果有且仅有1个参数，()可以省</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> arr2<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>改进3</p><p>如果函数体只有一句话，而且是return，{}可以省</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> arr2<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span>item<span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>2）filter过滤</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> arr2<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span>item<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//5,37,21,91,17</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>3）forEach 遍历</p><p>求和</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      sum<span class="token operator">+</span><span class="token operator">=</span>item<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//结果295</span>    <span class="token function">alert</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>4）reduce  汇总</p><p>参数</p><p>tmp:中间结果</p><p>item：元素项</p><p>index：元素索引</p><p>求和</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span>item<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> tmp<span class="token operator">+</span>item<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>输出</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%95%B0%E7%BB%84_reduce.png" alt></p><p>求平均</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span>item<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>      <span class="token keyword">return</span> tmp<span class="token operator">+</span>item<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//结果36.875</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token operator">/</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>5）from</p><p>将类数组转换成数组</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">      <span class="token selector">div </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#CCC</span><span class="token punctuation">;</span> <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    window<span class="token punctuation">.</span>onload<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//DOM对象</span>      <span class="token keyword">let</span> aDiv<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>aDiv<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//数组</span>      <span class="token keyword">let</span> aDiv2<span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>aDiv<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>aDiv2<span class="token punctuation">)</span><span class="token punctuation">;</span>      Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>aDiv<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>div<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background<span class="token operator">=</span><span class="token string">'yellow'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>aDiv<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>div<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>输出</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%95%B0%E7%BB%84_from.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js开发者经常忽略的基础知识点</title>
      <link href="/2019/01/03/js-kai-fa-zhe-jing-chang-hu-lue-de-ji-chu-zhi-shi-dian/"/>
      <url>/2019/01/03/js-kai-fa-zhe-jing-chang-hu-lue-de-ji-chu-zhi-shi-dian/</url>
      
        <content type="html"><![CDATA[<p>1、字符串匹配</p><p>匹配所有</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// Mistake</span><span class="token comment" spellcheck="true">// 踩到坑了</span><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">"David is an Arsenal fan, which means David is great"</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"David"</span><span class="token punctuation">,</span> <span class="token string">"Darren"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "Darren is an Arsenal fan, which means David is great"</span><span class="token comment" spellcheck="true">// Desired</span><span class="token comment" spellcheck="true">// 符合预期</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/David/g</span><span class="token punctuation">,</span> <span class="token string">"Darren"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "Darren is an Arsenal fan, which means Darren is great"</span></code></pre><p>忽略大小写</p><pre class=" language-js"><code class="language-js">str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/david/gi</span><span class="token punctuation">,</span> <span class="token string">"Darren"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "Darren will always be an Arsenal fan, which means Darren will always be great"</span></code></pre><p>2、将“类数组”元素（比如 arguments 参数列表、节点列表和属性列表）转换成真正的数组</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> nodesArr <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "true" array of DIVs</span><span class="token comment" spellcheck="true">// 得到一个由 div 元素组成的“真正的”数组</span><span class="token keyword">var</span> argsArr <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// changes arguments to "true" array</span><span class="token comment" spellcheck="true">// 把 arguments 转换成一个“真正的”数组</span></code></pre><p>克隆数组</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> clone <span class="token operator">=</span> myArray<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// naive clone</span><span class="token comment" spellcheck="true">// 浅克隆</span></code></pre><p>3、数组的sort方法</p><p>简单排序</p><pre class=" language-js"><code class="language-js"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Returns: [1, 2, 3, 9]</span><span class="token comment" spellcheck="true">// 返回 [1, 2, 3, 9]</span></code></pre><p>复杂排序</p><pre class=" language-js"><code class="language-js"><span class="token punctuation">[</span>    <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"Robin Van PurseStrings"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"Theo Walcott"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"Bacary Sagna"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">28</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>obj1<span class="token punctuation">,</span> obj2<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Ascending: first age less than the previous</span>    <span class="token comment" spellcheck="true">// 实现增序排列：前者的 age 小于后者</span>    <span class="token keyword">return</span> obj1<span class="token punctuation">.</span>age <span class="token operator">-</span> obj2<span class="token punctuation">.</span>age<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Returns:  </span>    <span class="token comment" spellcheck="true">// [</span>    <span class="token comment" spellcheck="true">//    { name: "Theo Walcott", age: 24 },</span>    <span class="token comment" spellcheck="true">//    { name: "Bacary Sagna", age: 28  },</span>    <span class="token comment" spellcheck="true">//    { name: "Robin Van PurseStrings", age: 30 }</span>    <span class="token comment" spellcheck="true">// ]</span></code></pre><p>4、push合并数组</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> mergeTo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> mergeFrom <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>mergeTo<span class="token punctuation">,</span> mergeFrom<span class="token punctuation">)</span><span class="token punctuation">;</span>mergeTo<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// is: [4, 5, 6, 7, 8, 9]</span></code></pre><p>5、join拼接字符串</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'&lt;div>'</span><span class="token punctuation">,</span>    <span class="token string">'&lt;button id="lucky-draw">Lucky Draw&lt;/button>'</span><span class="token punctuation">,</span>    <span class="token string">'&lt;/div>'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span></code></pre><p>参考</p><p><a href="https://github.com/cssmagic/blog/issues/21" target="_blank" rel="noopener">https://github.com/cssmagic/blog/issues/21</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Inheritance and the Prototype Chain</title>
      <link href="/2019/01/02/javascript-inheritance-and-the-prototype-chain/"/>
      <url>/2019/01/02/javascript-inheritance-and-the-prototype-chain/</url>
      
        <content type="html"><![CDATA[<p>参考：</p><p><a href="https://tylermcginnis.com/javascript-inheritance-and-the-prototype-chain/" target="_blank" rel="noopener">https://tylermcginnis.com/javascript-inheritance-and-the-prototype-chain/</a></p><p>##JavaScript Inheritance and the Prototype Chain</p><p><strong>Post</strong></p><p>This post is designed to be read after you read JavaScript Private and Public Class Fields.</p><p>Previously we learned how to create an <strong>Animal</strong> class both in <strong>ES5</strong> as well as in <strong>ES6</strong>. We also learned how to share methods across those classes using JavaScript’s prototype. To review, here’s the code we saw in an earlier post.</p><pre><code>    function Animal (name, energy) {      this.name = name      this.energy = energy    }    Animal.prototype.eat = function (amount) {      console.log(`${this.name} is eating.`)      this.energy += amount    }    Animal.prototype.sleep = function (length) {      console.log(`${this.name} is sleeping.`)      this.energy += length    }    Animal.prototype.play = function (length) {      console.log(`${this.name} is playing.`)      this.energy -= length    }    const leo = new Animal(&#39;Leo&#39;, 7)</code></pre><pre><code>    class Animal {      constructor(name, energy) {        this.name = name        this.energy = energy      }      eat(amount) {        console.log(`${this.name} is eating.`)        this.energy += amount      }      sleep() {        console.log(`${this.name} is sleeping.`)        this.energy += length      }      play() {        console.log(`${this.name} is playing.`)        this.energy -= length      }    }    const leo = new Animal(&#39;Leo&#39;, 7)</code></pre><p>Now let’s say we wanted to start making individual classes for specific animals. For example, what if we wanted to start making a bunch of dog instances. What properties and methods will these dogs have? Well, similar to our <strong>Animal</strong> class, we could give each dog a <strong>name</strong>, an <strong>energy</strong> level, and the ability to <strong>eat</strong>, <strong>sleep</strong>, and <strong>play</strong>. Unique to our Dog class, we could also give them a <strong>breed</strong> property as well as the ability to <strong>bark</strong>. In ES5, our <strong>Dog</strong> class could look something like this</p><pre><code>    function Dog (name, energy, breed) {      this.name = name      this.energy = energy      this.breed = breed    }    Dog.prototype.eat = function (amount) {      console.log(`${this.name} is eating.`)      this.energy += amount    }    Dog.prototype.sleep = function (length) {      console.log(`${this.name} is sleeping.`)      this.energy += length    }    Dog.prototype.play = function (length) {      console.log(`${this.name} is playing.`)      this.energy -= length    }    Dog.prototype.bark = function () {      console.log(&#39;Woof-Woof!&#39;)      this.energy -= .1    }    const charlie = new Dog(&#39;Charlie&#39;, 10, &#39;Goldendoodle&#39;)</code></pre><p>Alright, well… we just recreated the <strong>Animal</strong> class and added a few new properties to it. If we wanted to create another animal, say a <strong>Cat</strong>, at this point we’d again have to create a <strong>Cat</strong> class, duplicate all the common logic located in the <strong>Animal</strong> class to it, then add on <strong>Cat</strong> specific properties just like we did with the <strong>Dog</strong> class. In fact, we’d have to do this for each different type of animal we created.</p><pre><code>    function Dog (name, energy, breed) {}    function Cat (name, energy, declawed) {}    function Giraffe (name, energy, height) {}    function Monkey (name, energy, domesticated) {}</code></pre><p>This work, but it seems wasteful. The <strong>Animal</strong> class is the perfect base class. What that means is that it has all the properties that each one of our animals has in common. Whether we’re creating a dog, cat, giraffe, or monkey, all of them will have a <strong>name</strong>, <strong>energy</strong> level, and the ability to <strong>eat</strong>, <strong>sleep</strong>, and <strong>play</strong>. With that said, is there a way we can utilize the <strong>Animal</strong> class whenever we create the individual classes for each different animal? Let’s try it out. I’ll paste the <strong>Animal</strong> class again below for easy reference.</p><pre><code>    function Animal (name, energy) {      this.name = name      this.energy = energy    }    Animal.prototype.eat = function (amount) {      console.log(`${this.name} is eating.`)      this.energy += amount    }    Animal.prototype.sleep = function (length) {      console.log(`${this.name} is sleeping.`)      this.energy += length    }    Animal.prototype.play = function (length) {      console.log(`${this.name} is playing.`)      this.energy -= length    }    function Dog (name, energy, breed) {    }</code></pre><p>What are some things we know about the <strong>Dog</strong> constructor function above?</p><p>First, we know it takes 3 arguments, <strong>name</strong>, <strong>energy</strong>, and <strong>breed</strong>.</p><p>Second, we know it’s going to be called with the <strong>new</strong> keyword so we’ll have a <strong>this</strong> object.</p><p>And third, we know we need to utilize the <strong>Animal</strong> function so that any instance of dog will have a <strong>name</strong>, <strong>energy</strong> level, and be able to <strong>eat</strong>, <strong>sleep</strong>, and <strong>play</strong>.</p><p>It’s the third one that’s the tricky one. The way you “utilize” a function is by calling it. So we know that inside of <strong>Dog</strong>, we want to call <strong>Animal</strong>. What we need to figure out though is how we can invoke <strong>Animal</strong> in the context of <strong>Dog</strong>. What that means it that we want to call <strong>Animal</strong> with the <strong>this</strong> keyword from Dog. If we do that correctly, then <strong>this</strong> inside of the <strong>Dog</strong> function will have all the properties of <strong>Animal</strong> (name, energy). If you remember from a previous section, every function in JavaScript has a <strong>.call</strong> method on it.</p><blockquote><p>.call() is a method on every function that allows you to invoke the function specifying in what context the function will be invoked.</p></blockquote><p>This sounds like exactly what we need. We want to invoke <strong>Animal</strong> in the context of <strong>Dog</strong>.</p><pre><code>   function Dog (name, energy, breed) {  Animal.call(this, name, energy)  this.breed = breed}const charlie = new Dog(&#39;Charlie&#39;, 10, &#39;Goldendoodle&#39;)charlie.name // Charliecharlie.energy // 10charlie.breed // Goldendoodle</code></pre><p>Solid, we’re half-way there. You’ll notice in the code above that because of this line <strong>Animal.call(this, name, energy)</strong>, every instance of <strong>Dog</strong> will now have a <strong>name</strong> and <strong>energy</strong> property. Again, the reason for that is because it’s as if we ran the <strong>Animal</strong> function with the <strong>this</strong> keyword generated from <strong>Dog</strong>. Then after we added a <strong>name</strong> and <strong>energy</strong> property to <strong>this</strong>, we also added a <strong>breed</strong> property just as we normally would.</p><p>Remember the goal here is to have each instance of <strong>Dog</strong> have not only all the properties of <strong>Animal</strong>, but also all the methods as well. If you run the code above, you’ll notice that if you try to run <strong>charlie.eat(10)</strong> you’ll get an error. Currently every instance of <strong>Dog</strong> will have the properties of <strong>Animal</strong> (<strong>name</strong> and <strong>energy</strong>), but we haven’t done anything to make sure that they also have the methods (<strong>play, eat, sleep)</strong>.</p><p>Let’s think about how we can solve this. We know that all the <strong>Animal</strong>’s methods are located on <strong>Animal.prototype</strong>. What that means is we somehow want to make sure that all instances of <strong>Dog</strong> will have access to the methods on <strong>Animal.prototype</strong>. What if we used our good friend <strong>Object.create</strong> here? If you’ll remember, <strong>Object.create</strong> allows you to create an object which will delegate to another object on failed lookups. So in our case, the object we want to create is going to be <strong>Dog</strong>’s prototype and the object we want to delegate to on failed lookups is <strong>Animal.prototype</strong>.</p><pre><code>function Dog (name, energy, breed) {  Animal.call(this, name, energy)  this.breed = breed}Dog.prototype = Object.create(Animal.prototype)</code></pre><p>Now, whenever there’s a failed lookup on an instance of <strong>Dog</strong>, JavaScript will delegate that lookup to <strong>Animal.prototype</strong>. If this is still a little fuzzy, re-read A Beginner’s Guide to JavaScript’s Prototype where we talk all about <strong>Object.create</strong> and JavaScript’s prototype.</p><p>Let’s look at the full code together then we’ll walk through what happens.</p><pre><code>function Animal (name, energy) {  this.name = name  this.energy = energy}Animal.prototype.eat = function (amount) {  console.log(`${this.name} is eating.`)  this.energy += amount}Animal.prototype.sleep = function (length) {  console.log(`${this.name} is sleeping.`)  this.energy += length}Animal.prototype.play = function (length) {  console.log(`${this.name} is playing.`)  this.energy -= length}function Dog (name, energy, breed) {  Animal.call(this, name, energy)  this.breed = breed}Dog.prototype = Object.create(Animal.prototype)</code></pre><p>Now we’ve created our base class (<strong>Animal</strong>) as well as our subclass (<strong>Dog</strong>), let’s see what it looks like under the hood when we create an instance of <strong>Dog</strong>.</p><pre><code>const charlie = new Dog(&#39;Charlie&#39;, 10, &#39;Goldendoodle&#39;)charlie.name // Charliecharlie.energy // 10charlie.breed // Goldendoodle</code></pre><p>Nothing fancy so far, but let’s look at what happens when we invoke a method located on <strong>Animal</strong>.</p><pre><code>    charlie.eat(10)    /*    1) JavaScript checks if charlie has an eat property - it doesn&#39;t.    2) JavaScript then checks if Dog.prototype has an eat property        - it doesn&#39;t.    3) JavaScript then checks if Animal.prototype has an eat property        - it does so it calls it.    */</code></pre><p>The reason <strong>Dog.prototype</strong> gets checked is because when we created a new instance of <strong>Dog</strong>, we used the <strong>new</strong> keyword. Under the hood, the <strong>this</strong> object that was created for us delegates to <strong>Dog.prototype</strong> (seen in comments below).</p><pre><code>function Dog (name, energy, breed) {  // this = Object.create(Dog.prototype)  Animal.call(this, name, energy)  this.breed = breed  // return this}</code></pre><p>The reason <strong>Animal.prototype</strong> gets checked is because we overwrote <strong>Dog.prototype</strong> to delegate to <strong>Animal.prototype</strong> on failed lookups with this line</p><pre><code>Dog.prototype = Object.create(Animal.prototype)</code></pre><p>Now one thing we haven’t talked about is what if <strong>Dog</strong> has its own methods? Well, that’s a simple solution. Just like with <strong>Animal</strong>, if we want to share a method across all instances of that class, we add it to the function’s prototype.</p><pre><code>    ...    function Dog (name, energy, breed) {      Animal.call(this, name, energy)      this.breed = breed    }    Dog.prototype = Object.create(Animal.prototype)    Dog.prototype.bark = function () {      console.log(&#39;Woof Woof!&#39;)      this.energy -= .1    }</code></pre><p>very nice. There’s just one small addition we need to make. If you remember back to the Beginner’s Guide to JavaScript’s Prototype post, we were able to get access to the instances’ constructor function by using <strong>instance.constructor</strong>.</p><pre><code>function Animal (name, energy) {  this.name = name  this.energy = energy}const leo = new Animal(&#39;Leo&#39;, 7)console.log(leo.constructor) // Logs the constructor function</code></pre><p>As explained in the previous post, “the reason this works is because any instances of <strong>Animal</strong> are going to delegate to <strong>Animal.prototype</strong> on failed lookups. So when you try to access <strong>leo.prototype</strong>, <strong>leo</strong> doesn’t have a <strong>prototype</strong> property so it will delegate that lookup to <strong>Animal.prototype</strong> which indeed does have a <strong>constructor</strong> property.”</p><p>The reason I bring this up is because in our implementation, we overwrote <strong>Dog.prototype</strong> with an object that delegates to <strong>Animal.prototype</strong>.</p><pre><code>function Dog (name, energy, breed) {  Animal.call(this, name, energy)  this.breed = breed}Dog.prototype = Object.create(Animal.prototype)Dog.prototype.bark = function () {  console.log(&#39;Woof Woof!&#39;)  this.energy -= .1}</code></pre><p>What that means is that now, any instances of <strong>Dog</strong> which log <strong>instance.constructor</strong> are going to get the <strong>Animal</strong> constructor rather than the <strong>Dog</strong> constructor. You can see for yourself by running this code -</p><pre><code>function Animal (name, energy) {  this.name = name  this.energy = energy}Animal.prototype.eat = function (amount) {  console.log(`${this.name} is eating.`)  this.energy += amount}Animal.prototype.sleep = function (length) {  console.log(`${this.name} is sleeping.`)  this.energy += length}Animal.prototype.play = function (length) {  console.log(`${this.name} is playing.`)  this.energy -= length}function Dog (name, energy, breed) {  Animal.call(this, name, energy)  this.breed = breed}Dog.prototype = Object.create(Animal.prototype)Dog.prototype.bark = function () {  console.log(&#39;Woof Woof!&#39;)  this.energy -= .1}const charlie = new Dog(&#39;Charlie&#39;, 10, &#39;Goldendoodle&#39;)console.log(charlie.constructor)</code></pre><p>Notice it gives you the <strong>Animal</strong> constructor even though <strong>charlie</strong> is a direct instance of <strong>Dog</strong>. Again, we can walk through what’s happening here just like we did above.</p><pre><code>    const charlie = new Dog(&#39;Charlie&#39;, 10, &#39;Goldendoodle&#39;)    console.log(charlie.constructor)    /*    1) JavaScript checks if charlie has a constructor property - it doesn&#39;t.    2) JavaScript then checks if Dog.prototype has a constructor property        - it doesn&#39;t because it was deleted when we overwrote Dog.prototype.    3) JavaScript then checks if Animal.prototype has a constructor property        - it does so it logs that.    */</code></pre><p>How can we fix this? Well, it’s pretty simple. We can just add the correct <strong>constructor</strong> property to <strong>Dog.prototype</strong> once we overwrite it.</p><pre><code>function Dog (name, energy, breed) {  Animal.call(this, name, energy)  this.breed = breed}Dog.prototype = Object.create(Animal.prototype)Dog.prototype.bark = function () {  console.log(&#39;Woof Woof!&#39;)  this.energy -= .1}Dog.prototype.constructor = Dog</code></pre><p>At this point if we wanted to make another subclass, say <strong>Cat</strong>, we’d follow the same pattern.</p><pre><code>function Cat (name, energy, declawed) {  Animal.call(this, name, energy)  this.declawed = declawed}Cat.prototype = Object.create(Animal.prototype)Cat.prototype.constructor = CatCat.prototype.meow = function () {  console.log(&#39;Meow!&#39;)  this.energy -= .1}</code></pre><p>This concept of having a base class with subclasses that delegate to it is called inheritance and it’s a staple of Object Oriented Programming (OOP). If you’re coming from a different programming language, odds are you’re already familiar with OOP and inheritance. Before ES6 classes, in JavaScript, inheritance was quite the task as you can see above. You need to understand now only when to use inheritance, but also a nice mix of <strong>.call</strong>, <strong>Object.create</strong>, <strong>this</strong>, and <strong>FN.prototype</strong> - all pretty advanced JS topics. Let’s see how we’d accomplish the same thing using ES6 classes though.</p><p>First, let’s review what it looks like to go from an ES5 “class” to an ES6 class using our <strong>Animal</strong> class.</p><pre><code>function Animal (name, energy) {  this.name = name  this.energy = energy}Animal.prototype.eat = function (amount) {  console.log(`${this.name} is eating.`)  this.energy += amount}Animal.prototype.sleep = function (length) {  console.log(`${this.name} is sleeping.`)  this.energy += length}Animal.prototype.play = function (length) {  console.log(`${this.name} is playing.`)  this.energy -= length}const leo = new Animal(&#39;Leo&#39;, 7)</code></pre><pre><code>    class Animal {      constructor(name, energy) {        this.name = name        this.energy = energy      }      eat(amount) {        console.log(`${this.name} is eating.`)        this.energy += amount      }      sleep() {        console.log(`${this.name} is sleeping.`)        this.energy += length      }      play() {        console.log(`${this.name} is playing.`)        this.energy -= length      }    }    const leo = new Animal(&#39;Leo&#39;, 7)</code></pre><p>Now that we’ve refactored our <strong>Animal</strong> constructor function into an ES6 class, the next thing we need to do is figure out how to refactor our base class (<strong>Dog</strong>). The good news is it’s much more intuitive. For reference, in ES5, here’s what we had.</p><pre><code>function Dog (name, energy, breed) {  Animal.call(this, name, energy)  this.breed = breed}Dog.prototype = Object.create(Animal.prototype)Dog.prototype.bark = function () {  console.log(&#39;Woof Woof!&#39;)  this.energy -= .1}Dog.prototype.constructor = Dog</code></pre><p>Before we get into inheritance, let’s refactor <strong>Dog</strong> to use an ES6 class as we learned in a previous post.</p><pre><code>    class Dog {      constructor(name, energy, breed) {        this.breed = breed      }      bark() {        console.log(&#39;Woof Woof!&#39;)        this.energy -= .1      }    }</code></pre><p>Looks great. Now, let’s figure out how to make sure that <strong>Dog</strong> inherits from <strong>Animal</strong>. The first step we need to make is a pretty straight forward one. With ES6 classes, you can <strong>extend</strong> a base class with this syntax</p><pre><code>class Subclass extends Baseclass {}</code></pre><p>Translated into our example, that would make our <strong>Dog</strong> class look like this</p><pre><code>    class Animal {      constructor(name, energy) {        this.name = name        this.energy = energy      }      eat(amount) {        console.log(`${this.name} is eating.`)        this.energy += amount      }      sleep() {        console.log(`${this.name} is sleeping.`)        this.energy += length      }      play() {        console.log(`${this.name} is playing.`)        this.energy -= length      }    }    class Dog extends Animal {      constructor(name, energy, breed) {        this.breed = breed      }      bark() {        console.log(&#39;Woof Woof!&#39;)        this.energy -= .1      }    }</code></pre><p>In ES5 in order to make sure that every instance of <strong>Dog</strong> had a <strong>name</strong> and an <strong>energy</strong> property, we used <strong>.call</strong> in order to invoke the <strong>Animal</strong> constructor function in the context of the <strong>Dog</strong> instance. Luckily for us, in ES6 it’s much more straight forward. Whenever you are extending a baseclass and you need to invoke that baseclass’ constructor function, you invoke <strong>super</strong> passing it any arguments it needs. So in our example, our <strong>Dog</strong> constructor gets refactored to look like this</p><pre><code>    class Animal {      constructor(name, energy) {        this.name = name        this.energy = energy      }      eat(amount) {        console.log(`${this.name} is eating.`)        this.energy += amount      }      sleep() {        console.log(`${this.name} is sleeping.`)        this.energy += length      }      play() {        console.log(`${this.name} is playing.`)        this.energy -= length      }    }    class Dog extends Animal {      constructor(name, energy, breed) {        super(name, energy) // calls Animal&#39;s constructor        this.breed = breed      }      bark() {        console.log(&#39;Woof Woof!&#39;)        this.energy -= .1      }    }</code></pre><p>And that’s it. No using <strong>.call</strong>, no using <strong>Object.create</strong>, no worrying about resetting <strong>constructor</strong> on the prototype - just <strong>extends</strong> the baseclass and make sure to call <strong>super</strong>.</p><p>What’s interesting about JavaScript is the same patterns you’ve learned these last few posts are directly caked into the language itself. Previously you learned that the reason all instances of Array have access to the array methods like <strong>pop</strong>, <strong>slice</strong>, <strong>filter</strong>, etc are because all of those methods live on <strong>Array.prototype</strong>.</p><pre><code>    console.log(Array.prototype)    /*      concat: ƒn concat()      constructor: ƒn Array()      copyWithin: ƒn copyWithin()      entries: ƒn entries()      every: ƒn every()      fill: ƒn fill()      filter: ƒn filter()      find: ƒn find()      findIndex: ƒn findIndex()      forEach: ƒn forEach()      includes: ƒn includes()      indexOf: ƒn indexOf()      join: ƒn join()      keys: ƒn keys()      lastIndexOf: ƒn lastIndexOf()      length: 0n      map: ƒn map()      pop: ƒn pop()      push: ƒn push()      reduce: ƒn reduce()      reduceRight: ƒn reduceRight()      reverse: ƒn reverse()      shift: ƒn shift()      slice: ƒn slice()      some: ƒn some()      sort: ƒn sort()      splice: ƒn splice()      toLocaleString: ƒn toLocaleString()      toString: ƒn toString()      unshift: ƒn unshift()      values: ƒn values()    */</code></pre><p>You also learned that the reason all instances of <strong>Object</strong> have access to methods like <strong>hasOwnProperty</strong> and <strong>toString</strong> is because those methods live on <strong>Object.prototype</strong>.</p><pre><code>    console.log(Object.prototype)    /*      constructor: ƒn Object()      hasOwnProperty: ƒn hasOwnProperty()      isPrototypeOf: ƒn isPrototypeOf()      propertyIsEnumerable: ƒn propertyIsEnumerable()      toLocaleString: ƒn toLocaleString()      toString: ƒn toString()      valueOf: ƒn valueOf()    */</code></pre><p>Here’s a challenge for you. With the list of Array methods and Object methods above, why does this code below work?</p><pre><code>    const friends = [&#39;Mikenzi&#39;, &#39;Jake&#39;, &#39;Ean&#39;]    friends.hasOwnProperty(&#39;push&#39;) // false</code></pre><p>If you look at <strong>Array.prototype</strong>, there isn’t a <strong>hasOwnProperty</strong> method. Well if there isn’t a <strong>hasOwnProperty</strong> method located on <strong>Array.prototype</strong>, how does the <strong>friends</strong> array in the example above have access to <strong>hasOwnProperty</strong>? The reason for that is because the <strong>Array</strong> class extends the <strong>Object</strong> class. So in our example above, when JavaScript sees that <strong>friends</strong> doesn’t have a <strong>hasOwnProperty</strong> property, it checks if <strong>Array.prototype</strong> does. When <strong>Array.prototype</strong> doesn’t, it checks if <strong>Object.prototype</strong> does, then it invokes it. It’s the same process we’ve seen throughout this blog post.</p><p>JavaScript has two types - Primitive types and Reference types.</p><p>Primitive types are <strong>boolean</strong>, <strong>number</strong>, <strong>string</strong>, <strong>null</strong>, and <strong>undefined</strong> and are immutable. Everything else is a reference type and they all extend <strong>Object.prototype</strong>. That’s why you can add properties to functions and arrays and that’s why both functions and arrays have access to the methods located on <strong>Object.prototype</strong>.</p><pre><code>    function speak(){}    speak.woahFunctionsAreLikeObjects = true    console.log(speak.woahFunctionsAreLikeObjects) // true    const friends = [&#39;Mikenzi&#39;, &#39;Jake&#39;, &#39;Ean&#39;]    friends.woahArraysAreLikeObjectsToo = true    console.log(friends.woahArraysAreLikeObjectsToo) // true</code></pre><p>–未完待续</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>babel入门</title>
      <link href="/2019/01/01/babel-ru-men/"/>
      <url>/2019/01/01/babel-ru-men/</url>
      
        <content type="html"><![CDATA[<p>1、babel</p><blockquote><p>Babel is a toolchain that is mainly used to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments.</p></blockquote><p>参考</p><p><a href="https://babeljs.io/setup#installation" target="_blank" rel="noopener">https://babeljs.io/setup#installation</a></p><p>1)生成package.json文件(描述项目所需要的各种模块，以及项目的配置信息—比如名称、版本、许可证等元数据)</p><p>npm init</p><pre><code>D:\mytest\babel&gt;npm  init</code></pre><p>2)安装项目依赖</p><p>install Babel CLI locally</p><pre><code>D:\mytest\babel&gt;npm install --save-dev @babel/core @babel/cli</code></pre><p>3）添加编译运行脚本命令</p><pre><code>&quot;scripts&quot;: {&quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,&quot;build&quot;: &quot;babel src -d src_build&quot;  },</code></pre><p>结果</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%AE%89%E8%A3%85%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96.png" alt></p><p>4）运行脚本命令</p><pre><code>D:\mytest\babel&gt;npm run build</code></pre><p>此时并没有成功的将es6的语法转成es5</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%BC%96%E8%AF%91%E5%89%8D%E5%90%8E%E6%AF%94%E5%AF%B9.png" alt></p><p>5）添加.babelrc文件</p><p>Great! You’ve configured Babel but you haven’t made it actually do anything. Create a .babelrc config in your project root and enable some plugins.</p><p>To start, you can use the env preset, which enables transforms for ES2015+</p><pre><code>D:\mytest\babel&gt;npm install @babel/preset-env --save-dev</code></pre><p>结果</p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E5%AE%89%E8%A3%85%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96.png" alt></p><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E6%96%B0%E5%BB%BA.babelrc%E6%96%87%E4%BB%B6.png" alt></p><p>6）重新运行脚本命令</p><pre><code>D:\mytest\babel&gt;npm run build</code></pre><p><img src="https://raw.githubusercontent.com/shenlibing/blogphoto/master/source/%E7%BC%96%E8%AF%91%E5%89%8D%E5%90%8E%E6%AF%94%E5%AF%B9(2).png" alt></p><p>7)使用编译后的js</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot;&gt;  &lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;  &lt;script type=&quot;text/javascript&quot; src=&#39;../src_build/1.js&#39;&gt;  &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>babel官网参考手册</p><p><a href="https://babeljs.io/docs/en/usage" target="_blank" rel="noopener">https://babeljs.io/docs/en/usage</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> babel </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
